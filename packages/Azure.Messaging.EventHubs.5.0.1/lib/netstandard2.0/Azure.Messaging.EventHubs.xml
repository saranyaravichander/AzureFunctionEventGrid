<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Azure.Messaging.EventHubs</name>
    </assembly>
    <members>
        <member name="T:Azure.Messaging.EventHubs.Amqp.AmqpClient">
             <summary>
               A transport client abstraction responsible for brokering operations for AMQP-based connections.
               It is intended that the public <see cref="T:Azure.Messaging.EventHubs.EventHubConnection" /> make use of an instance via containment
               and delegate operations to it.
             </summary>
            
             <seealso cref="T:Azure.Messaging.EventHubs.Core.TransportClient" />
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Amqp.AmqpClient.CredentialRefreshBuffer">
             <summary>
               The buffer to apply when considering refreshing; credentials that expire less than this duration will be refreshed.
             </summary>
            
        </member>
        <member name="F:Azure.Messaging.EventHubs.Amqp.AmqpClient._closed">
            <summary>Indicates whether or not this instance has been closed.</summary>
        </member>
        <member name="F:Azure.Messaging.EventHubs.Amqp.AmqpClient._accessToken">
            <summary>The currently active token to use for authorization with the Event Hubs service.</summary>
        </member>
        <member name="P:Azure.Messaging.EventHubs.Amqp.AmqpClient.IsClosed">
             <summary>
               Indicates whether or not this client has been closed.
             </summary>
            
             <value>
               <c>true</c> if the client is closed; otherwise, <c>false</c>.
             </value>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Amqp.AmqpClient.ServiceEndpoint">
             <summary>
               The endpoint for the Event Hubs service to which the client is associated.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Amqp.AmqpClient.EventHubName">
             <summary>
               The name of the Event Hub to which the client is bound.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Amqp.AmqpClient.Credential">
             <summary>
               Gets the credential to use for authorization with the Event Hubs service.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Amqp.AmqpClient.MessageConverter">
             <summary>
               The converter to use for translating between AMQP messages and client library
               types.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Amqp.AmqpClient.ConnectionScope">
             <summary>
               The AMQP connection scope responsible for managing transport constructs for this instance.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Amqp.AmqpClient.ManagementLink">
             <summary>
               The AMQP link intended for use with management operations.
             </summary>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Amqp.AmqpClient.#ctor(System.String,System.String,Azure.Messaging.EventHubs.Authorization.EventHubTokenCredential,Azure.Messaging.EventHubs.EventHubConnectionOptions)">
             <summary>
               Initializes a new instance of the <see cref="T:Azure.Messaging.EventHubs.Amqp.AmqpClient"/> class.
             </summary>
            
             <param name="host">The fully qualified host name for the Event Hubs namespace.  This is likely to be similar to <c>{yournamespace}.servicebus.windows.net</c>.</param>
             <param name="eventHubName">The name of the specific Event Hub to connect the client to.</param>
             <param name="credential">The Azure managed identity credential to use for authorization.  Access controls may be specified by the Event Hubs namespace or the requested Event Hub, depending on Azure configuration.</param>
             <param name="clientOptions">A set of options to apply when configuring the client.</param>
            
             <remarks>
               As an internal type, this class performs only basic sanity checks against its arguments.  It
               is assumed that callers are trusted and have performed deep validation.
            
               Any parameters passed are assumed to be owned by this instance and safe to mutate or dispose;
               creation of clones or otherwise protecting the parameters is assumed to be the purview of the
               caller.
             </remarks>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Amqp.AmqpClient.#ctor(System.String,System.String,Azure.Messaging.EventHubs.Authorization.EventHubTokenCredential,Azure.Messaging.EventHubs.EventHubConnectionOptions,Azure.Messaging.EventHubs.Amqp.AmqpConnectionScope,Azure.Messaging.EventHubs.Amqp.AmqpMessageConverter)">
             <summary>
               Initializes a new instance of the <see cref="T:Azure.Messaging.EventHubs.Amqp.AmqpClient"/> class.
             </summary>
            
             <param name="host">The fully qualified host name for the Event Hubs namespace.  This is likely to be similar to <c>{yournamespace}.servicebus.windows.net</c>.</param>
             <param name="eventHubName">The name of the specific Event Hub to connect the client to.</param>
             <param name="credential">The Azure managed identity credential to use for authorization.  Access controls may be specified by the Event Hubs namespace or the requested Event Hub, depending on Azure configuration.</param>
             <param name="clientOptions">A set of options to apply when configuring the client.</param>
             <param name="connectionScope">The optional scope to use for AMQP connection management.  If <c>null</c>, a new scope will be created.</param>
             <param name="messageConverter">The optional converter to use for transforming AMQP message-related types.  If <c>null</c>, a new converter will be created.</param>
            
             <remarks>
               As an internal type, this class performs only basic sanity checks against its arguments.  It
               is assumed that callers are trusted and have performed deep validation.
            
               Any parameters passed are assumed to be owned by this instance and safe to mutate or dispose;
               creation of clones or otherwise protecting the parameters is assumed to be the purview of the
               caller.
             </remarks>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Amqp.AmqpClient.GetPropertiesAsync(Azure.Messaging.EventHubs.EventHubsRetryPolicy,System.Threading.CancellationToken)">
             <summary>
               Retrieves information about an Event Hub, including the number of partitions present
               and their identifiers.
             </summary>
            
             <param name="retryPolicy">The retry policy to use as the basis for retrieving the information.</param>
             <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken"/> instance to signal the request to cancel the operation.</param>
            
             <returns>The set of information for the Event Hub that this client is associated with.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Amqp.AmqpClient.GetPartitionPropertiesAsync(System.String,Azure.Messaging.EventHubs.EventHubsRetryPolicy,System.Threading.CancellationToken)">
             <summary>
               Retrieves information about a specific partition for an Event Hub, including elements that describe the available
               events in the partition event stream.
             </summary>
            
             <param name="partitionId">The unique identifier of a partition associated with the Event Hub.</param>
             <param name="retryPolicy">The retry policy to use as the basis for retrieving the information.</param>
             <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken"/> instance to signal the request to cancel the operation.</param>
            
             <returns>The set of information for the requested partition under the Event Hub this client is associated with.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Amqp.AmqpClient.CreateProducer(System.String,Azure.Messaging.EventHubs.EventHubsRetryPolicy)">
             <summary>
               Creates a producer strongly aligned with the active protocol and transport,
               responsible for publishing <see cref="T:Azure.Messaging.EventHubs.EventData" /> to the Event Hub.
             </summary>
            
             <param name="partitionId">The identifier of the partition to which the transport producer should be bound; if <c>null</c>, the producer is unbound.</param>
             <param name="retryPolicy">The policy which governs retry behavior and try timeouts.</param>
            
             <returns>A <see cref="T:Azure.Messaging.EventHubs.Core.TransportProducer"/> configured in the requested manner.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Amqp.AmqpClient.CreateConsumer(System.String,System.String,Azure.Messaging.EventHubs.Consumer.EventPosition,Azure.Messaging.EventHubs.EventHubsRetryPolicy,System.Boolean,System.Nullable{System.Int64},System.Nullable{System.UInt32})">
             <summary>
               Creates a consumer strongly aligned with the active protocol and transport, responsible
               for reading <see cref="T:Azure.Messaging.EventHubs.EventData" /> from a specific Event Hub partition, in the context
               of a specific consumer group.
            
               A consumer may be exclusive, which asserts ownership over the partition for the consumer
               group to ensure that only one consumer from that group is reading the from the partition.
               These exclusive consumers are sometimes referred to as "Epoch Consumers."
            
               A consumer may also be non-exclusive, allowing multiple consumers from the same consumer
               group to be actively reading events from the partition.  These non-exclusive consumers are
               sometimes referred to as "Non-epoch Consumers."
            
               Designating a consumer as exclusive may be specified by setting the <paramref name="ownerLevel" />.
               When <c>null</c>, consumers are created as non-exclusive.
             </summary>
            
             <param name="consumerGroup">The name of the consumer group this consumer is associated with.  Events are read in the context of this group.</param>
             <param name="partitionId">The identifier of the Event Hub partition from which events will be received.</param>
             <param name="eventPosition">The position within the partition where the consumer should begin reading events.</param>
             <param name="retryPolicy">The policy which governs retry behavior and try timeouts.</param>
             <param name="trackLastEnqueuedEventProperties">Indicates whether information on the last enqueued event on the partition is sent as events are received.</param>
             <param name="ownerLevel">The relative priority to associate with the link; for a non-exclusive link, this value should be <c>null</c>.</param>
             <param name="prefetchCount">Controls the number of events received and queued locally without regard to whether an operation was requested.  If <c>null</c> a default will be used.</param>
            
             <returns>A <see cref="T:Azure.Messaging.EventHubs.Core.TransportConsumer" /> configured in the requested manner.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Amqp.AmqpClient.CloseAsync(System.Threading.CancellationToken)">
             <summary>
               Closes the connection to the transport client instance.
             </summary>
            
             <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken"/> instance to signal the request to cancel the operation.</param>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Amqp.AmqpClient.AquireAccessTokenAsync(System.Threading.CancellationToken)">
             <summary>
               Acquires an access token for authorization with the Event Hubs service.
             </summary>
            
             <returns>The token to use for service authorization.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Amqp.AmqpClient.UseMinimum(System.TimeSpan,System.TimeSpan)">
             <summary>
               Uses the minimum value of the two specified <see cref="T:System.TimeSpan" /> instances.
             </summary>
            
             <param name="firstOption">The first option to consider.</param>
             <param name="secondOption">The second option to consider.</param>
            
             <returns></returns>
            
        </member>
        <member name="T:Azure.Messaging.EventHubs.Amqp.AmqpConnectionScope">
             <summary>
               Defines a context for AMQP operations which can be shared amongst the different
               client types within a given scope.
             </summary>
            
        </member>
        <member name="F:Azure.Messaging.EventHubs.Amqp.AmqpConnectionScope.CbsSaslHandlerName">
            <summary>The name to assign to the SASL handler to specify that CBS tokens are in use.</summary>
        </member>
        <member name="F:Azure.Messaging.EventHubs.Amqp.AmqpConnectionScope.WebSocketsPathSuffix">
            <summary>The suffix to attach to the resource path when using web sockets for service communication.</summary>
        </member>
        <member name="F:Azure.Messaging.EventHubs.Amqp.AmqpConnectionScope.WebSocketsUriScheme">
            <summary>The URI scheme to apply when using web sockets for service communication.</summary>
        </member>
        <member name="F:Azure.Messaging.EventHubs.Amqp.AmqpConnectionScope.ConsumerPathSuffixMask">
            <summary>The string formatting mask to apply to the service endpoint to consume events for a given consumer group and partition.</summary>
        </member>
        <member name="F:Azure.Messaging.EventHubs.Amqp.AmqpConnectionScope.PartitionProducerPathSuffixMask">
            <summary>The string formatting mask to apply to the service endpoint to publish events for a given partition.</summary>
        </member>
        <member name="P:Azure.Messaging.EventHubs.Amqp.AmqpConnectionScope.AmqpVersion">
             <summary>
               The version of AMQP to use within the scope.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Amqp.AmqpConnectionScope.ConnectionIdleTimeout">
             <summary>
               The amount of time to allow an AMQP connection to be idle before considering
               it to be timed out.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Amqp.AmqpConnectionScope.AuthorizationRefreshBuffer">
             <summary>
               The amount of buffer to apply to account for clock skew when
               refreshing authorization.  Authorization will be refreshed earlier
               than the expected expiration by this amount.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Amqp.AmqpConnectionScope.MinimumAuthorizationRefresh">
             <summary>
               The minimum amount of time for authorization to be refreshed; any calculations that
               call for refreshing more frequently will be substituted with this value.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Amqp.AmqpConnectionScope.AuthorizationRefreshTimeout">
             <summary>
               The amount time to allow to refresh authorization of an AMQP link.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Amqp.AmqpConnectionScope.SessionTimeout">
             <summary>
               The recommended timeout to associate with an AMQP session.  It is recommended that this
               interval be used when creating or opening AMQP links and related constructs.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Amqp.AmqpConnectionScope.IsDisposed">
             <summary>
               Indicates whether this <see cref="T:Azure.Messaging.EventHubs.Amqp.AmqpConnectionScope"/> has been disposed.
             </summary>
            
             <value><c>true</c> if disposed; otherwise, <c>false</c>.</value>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Amqp.AmqpConnectionScope.OperationCancellationSource">
             <summary>
               The cancellation token to use with operations initiated by the scope.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Amqp.AmqpConnectionScope.ActiveLinks">
             <summary>
               The set of active AMQP links associated with the connection scope.  These are considered children
               of the active connection and should be managed as such.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Amqp.AmqpConnectionScope.Id">
             <summary>
               The unique identifier of the scope.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Amqp.AmqpConnectionScope.ServiceEndpoint">
             <summary>
               The endpoint for the Event Hubs service to which the scope is associated.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Amqp.AmqpConnectionScope.EventHubName">
             <summary>
               The name of the Event Hub to which the scope is associated.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Amqp.AmqpConnectionScope.TokenProvider">
             <summary>
               The provider to use for obtaining a token for authorization with the Event Hubs service.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Amqp.AmqpConnectionScope.Transport">
             <summary>
               The type of transport to use for communication.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Amqp.AmqpConnectionScope.Proxy">
             <summary>
               The proxy, if any, which should be used for communication.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Amqp.AmqpConnectionScope.ActiveConnection">
             <summary>
               The AMQP connection that is active for the current scope.
             </summary>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Amqp.AmqpConnectionScope.#ctor(System.Uri,System.String,Azure.Messaging.EventHubs.Authorization.EventHubTokenCredential,Azure.Messaging.EventHubs.EventHubsTransportType,System.Net.IWebProxy,System.String)">
             <summary>
               Initializes a new instance of the <see cref="T:Azure.Messaging.EventHubs.Amqp.AmqpConnectionScope"/> class.
             </summary>
            
             <param name="serviceEndpoint">Endpoint for the Event Hubs service to which the scope is associated.</param>
             <param name="eventHubName"> The name of the Event Hub to which the scope is associated</param>
             <param name="credential">The credential to use for authorization with the Event Hubs service.</param>
             <param name="transport">The transport to use for communication.</param>
             <param name="proxy">The proxy, if any, to use for communication.</param>
             <param name="identifier">The identifier to assign this scope; if not provided, one will be generated.</param>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Amqp.AmqpConnectionScope.#ctor">
             <summary>
               Initializes a new instance of the <see cref="T:Azure.Messaging.EventHubs.Amqp.AmqpConnectionScope"/> class.
             </summary>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Amqp.AmqpConnectionScope.OpenManagementLinkAsync(System.TimeSpan,System.Threading.CancellationToken)">
             <summary>
               Opens an AMQP link for use with management operations.
             </summary>
            
             <param name="timeout">The timeout to apply when creating the link.</param>
             <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken"/> instance to signal the request to cancel the operation.</param>
            
             <returns>A link for use with management operations.</returns>
            
             <remarks>
               The authorization for this link does not require periodic
               refreshing.
             </remarks>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Amqp.AmqpConnectionScope.OpenConsumerLinkAsync(System.String,System.String,Azure.Messaging.EventHubs.Consumer.EventPosition,System.TimeSpan,System.UInt32,System.Nullable{System.Int64},System.Boolean,System.Threading.CancellationToken)">
             <summary>
               Opens an AMQP link for use with consumer operations.
             </summary>
            
             <param name="consumerGroup">The name of the consumer group in the context of which events should be received.</param>
             <param name="partitionId">The identifier of the Event Hub partition from which events should be received.</param>
             <param name="eventPosition">The position of the event in the partition where the link should be filtered to.</param>
             <param name="prefetchCount">Controls the number of events received and queued locally without regard to whether an operation was requested.</param>
             <param name="ownerLevel">The relative priority to associate with the link; for a non-exclusive link, this value should be <c>null</c>.</param>
             <param name="trackLastEnqueuedEventProperties">Indicates whether information on the last enqueued event on the partition is sent as events are received.</param>
             <param name="timeout">The timeout to apply when creating the link.</param>
             <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken"/> instance to signal the request to cancel the operation.</param>
            
             <returns>A link for use with consumer operations.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Amqp.AmqpConnectionScope.OpenProducerLinkAsync(System.String,System.TimeSpan,System.Threading.CancellationToken)">
             <summary>
               Opens an AMQP link for use with producer operations.
             </summary>
            
             <param name="partitionId">The identifier of the Event Hub partition to which the link should be bound; if unbound, <c>null</c>.</param>
             <param name="timeout">The timeout to apply when creating the link.</param>
             <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken"/> instance to signal the request to cancel the operation.</param>
            
             <returns>A link for use with producer operations.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Amqp.AmqpConnectionScope.Dispose">
             <summary>
               Performs the task needed to clean up resources used by the <see cref="T:Azure.Messaging.EventHubs.Amqp.AmqpConnectionScope" />,
               including ensuring that the client itself has been closed.
             </summary>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Amqp.AmqpConnectionScope.CreateAndOpenConnectionAsync(System.Version,System.Uri,Azure.Messaging.EventHubs.EventHubsTransportType,System.Net.IWebProxy,System.String,System.TimeSpan)">
             <summary>
               Creates an AMQP connection for a given scope.
             </summary>
            
             <param name="amqpVersion">The version of AMQP to use for the connection.</param>
             <param name="serviceEndpoint">The endpoint for the Event Hubs service to which the scope is associated.</param>
             <param name="transportType">The type of transport to use for communication.</param>
             <param name="proxy">The proxy, if any, to use for communication.</param>
             <param name="scopeIdentifier">The unique identifier for the associated scope.</param>
             <param name="timeout">The timeout to consider when creating the connection.</param>
            
             <returns>An AMQP connection that may be used for communicating with the Event Hubs service.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Amqp.AmqpConnectionScope.CreateManagementLinkAsync(Microsoft.Azure.Amqp.AmqpConnection,System.TimeSpan,System.Threading.CancellationToken)">
             <summary>
               Creates an AMQP link for use with management operations.
             </summary>
            
             <param name="connection">The active and opened AMQP connection to use for this link.</param>
             <param name="timeout">The timeout to apply when creating the link.</param>
             <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken"/> instance to signal the request to cancel the operation.</param>
            
             <returns>A link for use with management operations.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Amqp.AmqpConnectionScope.CreateReceivingLinkAsync(Microsoft.Azure.Amqp.AmqpConnection,System.Uri,Azure.Messaging.EventHubs.Consumer.EventPosition,System.TimeSpan,System.UInt32,System.Nullable{System.Int64},System.Boolean,System.Threading.CancellationToken)">
             <summary>
               Creates an AMQP link for use with receiving operations.
             </summary>
            
             <param name="connection">The active and opened AMQP connection to use for this link.</param>
             <param name="endpoint">The fully qualified endpoint to open the link for.</param>
             <param name="eventPosition">The position of the event in the partition where the link should be filtered to.</param>
             <param name="prefetchCount">Controls the number of events received and queued locally without regard to whether an operation was requested.</param>
             <param name="ownerLevel">The relative priority to associate with the link; for a non-exclusive link, this value should be <c>null</c>.</param>
             <param name="trackLastEnqueuedEventProperties">Indicates whether information on the last enqueued event on the partition is sent as events are received.</param>
             <param name="timeout">The timeout to apply when creating the link.</param>
             <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken"/> instance to signal the request to cancel the operation.</param>
            
             <returns>A link for use for operations related to receiving events.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Amqp.AmqpConnectionScope.CreateSendingLinkAsync(Microsoft.Azure.Amqp.AmqpConnection,System.Uri,System.TimeSpan,System.Threading.CancellationToken)">
             <summary>
               Creates an AMQP link for use with publishing operations.
             </summary>
            
             <param name="connection">The active and opened AMQP connection to use for this link.</param>
             <param name="endpoint">The fully qualified endpoint to open the link for.</param>
             <param name="timeout">The timeout to apply when creating the link.</param>
             <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken"/> instance to signal the request to cancel the operation.</param>
            
             <returns>A link for use for operations related to receiving events.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Amqp.AmqpConnectionScope.BeginTrackingLinkAsActive(Microsoft.Azure.Amqp.AmqpObject,System.Threading.Timer)">
             <summary>
               Performs the actions needed to configure and begin tracking the specified AMQP
               link as an active link bound to this scope.
             </summary>
            
             <param name="link">The link to begin tracking.</param>
             <param name="authorizationRefreshTimer">The timer used to manage refreshing authorization, if the link requires it.</param>
            
             <remarks>
               This method does operate on the specified <paramref name="link"/> in order to configure it
               for active tracking; no assumptions are made about the open/connected state of the link nor are
               its communication properties modified.
             </remarks>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Amqp.AmqpConnectionScope.CloseConnection(Microsoft.Azure.Amqp.AmqpConnection)">
             <summary>
               Performs the tasks needed to close a connection.
             </summary>
            
             <param name="connection">The connection to close.</param>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Amqp.AmqpConnectionScope.CalculateLinkAuthorizationRefreshInterval(System.DateTime)">
             <summary>
               Calculates the interval after which authorization for an AMQP link should be
               refreshed.
             </summary>
            
             <param name="expirationTimeUtc">The date/time, in UTC, that the current authorization is expected to expire.</param>
            
             <returns>The interval after which authorization should be refreshed.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Amqp.AmqpConnectionScope.CreateAuthorizationRefreshHandler(Microsoft.Azure.Amqp.AmqpConnection,Microsoft.Azure.Amqp.AmqpObject,Azure.Messaging.EventHubs.Amqp.CbsTokenProvider,System.Uri,System.String,System.String,System.String[],System.TimeSpan,System.Func{System.Threading.Timer})">
             <summary>
               Creates the timer event handler to support refreshing AMQP link authorization
               on a recurring basis.
             </summary>
            
             <param name="connection">The AMQP connection to which the link being refreshed is bound to.</param>
             <param name="amqpLink">The AMQO link to refresh authorization for.</param>
             <param name="tokenProvider">The <see cref="T:Azure.Messaging.EventHubs.Amqp.CbsTokenProvider" /> to use for obtaining access tokens.</param>
             <param name="endpoint">The Event Hubs service endpoint that the AMQP link is communicating with.</param>
             <param name="audience">The audience associated with the authorization.  This is likely the <paramref name="endpoint"/> absolute URI.</param>
             <param name="resource">The resource associated with the authorization.  This is likely the <paramref name="endpoint"/> absolute URI.</param>
             <param name="requiredClaims">The set of claims required to support the operations of the AMQP link.</param>
             <param name="refreshTimeout">The timeout to apply when requesting authorization refresh.</param>
             <param name="refreshTimerFactory">A function to allow retrieving the <see cref="T:System.Threading.Timer" /> associated with the link authorization.</param>
            
             <returns>A <see cref="T:System.Threading.TimerCallback"/> delegate to perform the refresh when a timer is due.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Amqp.AmqpConnectionScope.OpenAmqpObjectAsync(Microsoft.Azure.Amqp.AmqpObject,System.TimeSpan)">
             <summary>
               Performs the actions needed to open a generic AMQP object, such
               as a session or link for use.
             </summary>
            
             <param name="target">The target AMQP object to open.</param>
             <param name="timeout">The timeout to apply when opening the link.</param>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Amqp.AmqpConnectionScope.RequestAuthorizationUsingCbsAsync(Microsoft.Azure.Amqp.AmqpConnection,Azure.Messaging.EventHubs.Amqp.CbsTokenProvider,System.Uri,System.String,System.String,System.String[],System.TimeSpan)">
             <summary>
               Requests authorization for a connection or link using a connection via the CBS mechanism.
             </summary>
            
             <param name="connection">The AMQP connection for which the authorization is associated.</param>
             <param name="tokenProvider">The <see cref="T:Azure.Messaging.EventHubs.Amqp.CbsTokenProvider" /> to use for obtaining access tokens.</param>
             <param name="endpoint">The Event Hubs service endpoint that the authorization is requested for.</param>
             <param name="audience">The audience associated with the authorization.  This is likely the <paramref name="endpoint"/> absolute URI.</param>
             <param name="resource">The resource associated with the authorization.  This is likely the <paramref name="endpoint"/> absolute URI.</param>
             <param name="requiredClaims">The set of claims required to support the operations of the AMQP link.</param>
             <param name="timeout">The timeout to apply when requesting authorization.</param>
            
             <returns>The date/time, in UTC, when the authorization expires.</returns>
            
             <remarks>
               It is assumed that there is a valid <see cref="T:Microsoft.Azure.Amqp.AmqpCbsLink" /> already associated
               with the connection; this will be used as the transport for the authorization
               credentials.
             </remarks>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Amqp.AmqpConnectionScope.CreateAmpqSettings(System.Version)">
             <summary>
               Creates the settings to use for AMQP communication.
             </summary>
            
             <param name="amqpVersion">The version of AMQP to be used.</param>
            
             <returns>The settings for AMQP to use for communication with the Event Hubs service.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Amqp.AmqpConnectionScope.CreateTransportSettingsforTcp(System.String,System.Int32)">
             <summary>
              Creates the transport settings for use with TCP.
             </summary>
            
             <param name="hostName">The host name of the Event Hubs service endpoint.</param>
             <param name="port">The port to use for connecting to the endpoint.</param>
            
             <returns>The settings to use for transport.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Amqp.AmqpConnectionScope.CreateTransportSettingsForWebSockets(System.String,System.Net.IWebProxy)">
             <summary>
              Creates the transport settings for use with web sockets.
             </summary>
            
             <param name="hostName">The host name of the Event Hubs service endpoint.</param>
             <param name="proxy">The proxy to use for connecting to the endpoint.</param>
            
             <returns>The settings to use for transport.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Amqp.AmqpConnectionScope.CreateAmqpConnectionSettings(System.String,System.String)">
             <summary>
               Creates the AMQP connection settings to use when communicating with the Event Hubs service.
             </summary>
            
             <param name="hostName">The host name of the Event Hubs service endpoint.</param>
             <param name="identifier">unique identifier of the current Event Hubs scope.</param>
            
             <returns>The settings to apply to the connection.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Amqp.AmqpConnectionScope.ValidateTransport(Azure.Messaging.EventHubs.EventHubsTransportType)">
             <summary>
               Validates the transport associated with the scope, throwing an argument exception
               if it is unknown in this context.
             </summary>
            
             <param name="transport">The transport to validate.</param>
            
        </member>
        <member name="T:Azure.Messaging.EventHubs.Amqp.AmqpConsumer">
             <summary>
               A transport client abstraction responsible for brokering operations for AMQP-based connections.
               It is intended that the public <see cref="T:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient" /> make use of an instance
               via containment and delegate operations to it.
             </summary>
            
             <seealso cref="T:Azure.Messaging.EventHubs.Core.TransportConsumer" />
            
        </member>
        <member name="F:Azure.Messaging.EventHubs.Amqp.AmqpConsumer.DefaultPrefetchCount">
            <summary>The default prefetch count to use for the consumer.</summary>
        </member>
        <member name="F:Azure.Messaging.EventHubs.Amqp.AmqpConsumer._closed">
            <summary>Indicates whether or not this instance has been closed.</summary>
        </member>
        <member name="P:Azure.Messaging.EventHubs.Amqp.AmqpConsumer.IsClosed">
             <summary>
               Indicates whether or not this consumer has been closed.
             </summary>
            
             <value>
               <c>true</c> if the consumer is closed; otherwise, <c>false</c>.
             </value>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Amqp.AmqpConsumer.EventHubName">
             <summary>
               The name of the Event Hub to which the client is bound.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Amqp.AmqpConsumer.ConsumerGroup">
             <summary>
               The name of the consumer group that this consumer is associated with.  Events will be read
               only in the context of this group.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Amqp.AmqpConsumer.PartitionId">
             <summary>
               The identifier of the Event Hub partition that this consumer is associated with.  Events will be read
               only from this partition.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Amqp.AmqpConsumer.CurrentEventPosition">
             <summary>
               The current position for the consumer, updated as events are received from the
               partition.
             </summary>
            
             <remarks>
               When creating or recovering the associated AMQP link, this value is used
               to set the position.  It is intended to primarily support recreating links
               transparently to callers, allowing progress in the stream to be remembered.
             </remarks>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Amqp.AmqpConsumer.TrackLastEnqueuedEventProperties">
             <summary>
               Indicates whether or not the consumer should request information on the last enqueued event on the partition
               associated with a given event, and track that information as events are received.
             </summary>
            
             <value><c>true</c> if information about a partition's last event should be requested and tracked; otherwise, <c>false</c>.</value>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Amqp.AmqpConsumer.RetryPolicy">
             <summary>
               The policy to use for determining retry behavior for when an operation fails.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Amqp.AmqpConsumer.MessageConverter">
             <summary>
               The converter to use for translating between AMQP messages and client library
               types.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Amqp.AmqpConsumer.ConnectionScope">
             <summary>
               The AMQP connection scope responsible for managing transport constructs for this instance.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Amqp.AmqpConsumer.ReceiveLink">
             <summary>
               The AMQP link intended for use with receiving operations.
             </summary>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Amqp.AmqpConsumer.#ctor(System.String,System.String,System.String,Azure.Messaging.EventHubs.Consumer.EventPosition,System.Boolean,System.Nullable{System.Int64},System.Nullable{System.UInt32},Azure.Messaging.EventHubs.Amqp.AmqpConnectionScope,Azure.Messaging.EventHubs.Amqp.AmqpMessageConverter,Azure.Messaging.EventHubs.EventHubsRetryPolicy)">
             <summary>
               Initializes a new instance of the <see cref="T:Azure.Messaging.EventHubs.Amqp.AmqpConsumer"/> class.
             </summary>
            
             <param name="eventHubName">The name of the Event Hub from which events will be consumed.</param>
             <param name="consumerGroup">The name of the consumer group this consumer is associated with.  Events are read in the context of this group.</param>
             <param name="partitionId">The identifier of the Event Hub partition from which events will be received.</param>
             <param name="eventPosition">The position of the event in the partition where the consumer should begin reading.</param>
             <param name="prefetchCount">Controls the number of events received and queued locally without regard to whether an operation was requested.  If <c>null</c> a default will be used.</param>
             <param name="ownerLevel">The relative priority to associate with the link; for a non-exclusive link, this value should be <c>null</c>.</param>
             <param name="trackLastEnqueuedEventProperties">Indicates whether information on the last enqueued event on the partition is sent as events are received.</param>
             <param name="connectionScope">The AMQP connection context for operations .</param>
             <param name="messageConverter">The converter to use for translating between AMQP messages and client types.</param>
             <param name="retryPolicy">The retry policy to consider when an operation fails.</param>
            
             <remarks>
               As an internal type, this class performs only basic sanity checks against its arguments.  It
               is assumed that callers are trusted and have performed deep validation.
            
               Any parameters passed are assumed to be owned by this instance and safe to mutate or dispose;
               creation of clones or otherwise protecting the parameters is assumed to be the purview of the
               caller.
             </remarks>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Amqp.AmqpConsumer.ReceiveAsync(System.Int32,System.Nullable{System.TimeSpan},System.Threading.CancellationToken)">
             <summary>
               Receives a batch of <see cref="T:Azure.Messaging.EventHubs.EventData" /> from the Event Hub partition.
             </summary>
            
             <param name="maximumMessageCount">The maximum number of messages to receive in this batch.</param>
             <param name="maximumWaitTime">The maximum amount of time to wait to build up the requested message count for the batch; if not specified, the per-try timeout specified by the retry policy will be used.</param>
             <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken"/> instance to signal the request to cancel the operation.</param>
            
             <returns>The batch of <see cref="T:Azure.Messaging.EventHubs.EventData" /> from the Event Hub partition this consumer is associated with.  If no events are present, an empty enumerable is returned.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Amqp.AmqpConsumer.CloseAsync(System.Threading.CancellationToken)">
             <summary>
               Closes the connection to the transport consumer instance.
             </summary>
            
             <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken"/> instance to signal the request to cancel the operation.</param>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Amqp.AmqpConsumer.UseMinimum(System.TimeSpan,System.TimeSpan)">
             <summary>
               Uses the minimum value of the two specified <see cref="T:System.TimeSpan" /> instances.
             </summary>
            
             <param name="firstOption">The first option to consider.</param>
             <param name="secondOption">The second option to consider.</param>
            
             <returns>The smaller of the two specified intervals.</returns>
            
        </member>
        <member name="T:Azure.Messaging.EventHubs.Amqp.AmqpEventBatch">
             <summary>
               A set of events with known size constraints, based on messages to be sent
               using an AMQP-based transport.
             </summary>
            
        </member>
        <member name="F:Azure.Messaging.EventHubs.Amqp.AmqpEventBatch.OverheadBytesSmallMessage">
            <summary>The amount of bytes to reserve as overhead for a small message.</summary>
        </member>
        <member name="F:Azure.Messaging.EventHubs.Amqp.AmqpEventBatch.OverheadBytesLargeMessage">
            <summary>The amount of bytes to reserve as overhead for a large message.</summary>
        </member>
        <member name="F:Azure.Messaging.EventHubs.Amqp.AmqpEventBatch.MaximumBytesSmallMessage">
            <summary>The maximum number of bytes that a message may be to be considered small.</summary>
        </member>
        <member name="F:Azure.Messaging.EventHubs.Amqp.AmqpEventBatch._disposed">
            <summary>A flag that indicates whether or not the instance has been disposed.</summary>
        </member>
        <member name="F:Azure.Messaging.EventHubs.Amqp.AmqpEventBatch._sizeBytes">
            <summary>The size of the batch, in bytes, as it will be sent via the AMQP transport.</summary>
        </member>
        <member name="P:Azure.Messaging.EventHubs.Amqp.AmqpEventBatch.MaximumSizeInBytes">
             <summary>
               The maximum size allowed for the batch, in bytes.  This includes the events in the batch as
               well as any overhead for the batch itself when sent to the Event Hubs service.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Amqp.AmqpEventBatch.SizeInBytes">
             <summary>
               The size of the batch, in bytes, as it will be sent to the Event Hubs
               service.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Amqp.AmqpEventBatch.Count">
             <summary>
               The count of events contained in the batch.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Amqp.AmqpEventBatch.MessageConverter">
             <summary>
               The converter to use for translating <see cref="T:Azure.Messaging.EventHubs.EventData" /> into the corresponding AMQP message.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Amqp.AmqpEventBatch.Options">
             <summary>
               The set of options to apply to the batch.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Amqp.AmqpEventBatch.BatchEvents">
             <summary>
               The set of events that have been added to the batch.
             </summary>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Amqp.AmqpEventBatch.#ctor(Azure.Messaging.EventHubs.Amqp.AmqpMessageConverter,Azure.Messaging.EventHubs.Producer.CreateBatchOptions)">
             <summary>
               Initializes a new instance of the <see cref="T:Azure.Messaging.EventHubs.Amqp.AmqpEventBatch"/> class.
             </summary>
            
             <param name="messageConverter">The converter to use for translating <see cref="T:Azure.Messaging.EventHubs.EventData" /> into the corresponding AMQP message.</param>
             <param name="options">The set of options to apply to the batch.</param>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Amqp.AmqpEventBatch.TryAdd(Azure.Messaging.EventHubs.EventData)">
             <summary>
               Attempts to add an event to the batch, ensuring that the size
               of the batch does not exceed its maximum.
             </summary>
            
             <param name="eventData">The event to attempt to add to the batch.</param>
            
             <returns><c>true</c> if the event was added; otherwise, <c>false</c>.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Amqp.AmqpEventBatch.AsEnumerable``1">
             <summary>
               Represents the batch as an enumerable set of transport-specific
               representations of an event.
             </summary>
            
             <typeparam name="T">The transport-specific event representation being requested.</typeparam>
            
             <returns>The set of events as an enumerable of the requested type.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Amqp.AmqpEventBatch.Dispose">
             <summary>
               Performs the task needed to clean up resources used by the <see cref="T:Azure.Messaging.EventHubs.Amqp.AmqpEventBatch" />.
             </summary>
            
        </member>
        <member name="T:Azure.Messaging.EventHubs.Amqp.AmqpMessageConverter">
             <summary>
               Serves as a translator between client types and AMQP messages for
               communication with the Event Hubs service.
             </summary>
            
        </member>
        <member name="F:Azure.Messaging.EventHubs.Amqp.AmqpMessageConverter.StreamBufferSizeInBytes">
            <summary>The size, in bytes, to use as a buffer for stream operations.</summary>
        </member>
        <member name="M:Azure.Messaging.EventHubs.Amqp.AmqpMessageConverter.CreateMessageFromEvent(Azure.Messaging.EventHubs.EventData,System.String)">
             <summary>
               Converts a given <see cref="T:Azure.Messaging.EventHubs.EventData" /> source into its corresponding
               AMQP representation.
             </summary>
            
             <param name="source">The source event to convert.</param>
             <param name="partitionKey">The partition key to associate with the batch, if any.</param>
            
             <returns>The AMQP message that represents the converted event data.</returns>
            
             <remarks>
               The caller is assumed to hold ownership over the message once it has been created, including
               ensuring proper disposal.
             </remarks>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Amqp.AmqpMessageConverter.CreateBatchFromEvents(System.Collections.Generic.IEnumerable{Azure.Messaging.EventHubs.EventData},System.String)">
             <summary>
               Converts a given set of <see cref="T:Azure.Messaging.EventHubs.EventData" /> instances into a batch AMQP representation.
             </summary>
            
             <param name="source">The set of source events to convert.</param>
             <param name="partitionKey">The partition key to associate with the batch, if any.</param>
            
             <returns>The AMQP message that represents a batch containing the converted set of event data.</returns>
            
             <remarks>
               The caller is assumed to hold ownership over the message once it has been created, including
               ensuring proper disposal.
             </remarks>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Amqp.AmqpMessageConverter.CreateBatchFromMessages(System.Collections.Generic.IEnumerable{Microsoft.Azure.Amqp.AmqpMessage},System.String)">
             <summary>
               Converts a given set of <see cref="T:Microsoft.Azure.Amqp.AmqpMessage" /> instances into a batch AMQP representation.
             </summary>
            
             <param name="source">The set of source messages to convert.</param>
             <param name="partitionKey">The partition key to annotate the AMQP message with; if no partition key is specified, the annotation will not be made.</param>
            
             <returns>The AMQP message that represents a batch containing the converted set of event data.</returns>
            
             <remarks>
               The caller is assumed to hold ownership over the message once it has been created, including
               ensuring proper disposal.
             </remarks>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Amqp.AmqpMessageConverter.CreateEventFromMessage(Microsoft.Azure.Amqp.AmqpMessage)">
             <summary>
               Converts a given <see cref="T:Microsoft.Azure.Amqp.AmqpMessage" /> source into its corresponding
               <see cref="T:Azure.Messaging.EventHubs.EventData" /> representation.
             </summary>
            
             <param name="source">The source message to convert.</param>
            
             <returns>The event that represents the converted AMQP message.</returns>
            
             <remarks>
               The caller is assumed to hold ownership over the specified message, including
               ensuring proper disposal.
             </remarks>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Amqp.AmqpMessageConverter.CreateEventHubPropertiesRequest(System.String,System.String)">
             <summary>
               Creates an <see cref="T:Microsoft.Azure.Amqp.AmqpMessage" /> for use in requesting the properties of an Event Hub.
             </summary>
            
             <param name="eventHubName">The name of the Event Hub to query the properties of.</param>
             <param name="managementAuthorizationToken">The bearer token to use for authorization of management operations.</param>
            
             <returns>The AMQP message for issuing the request.</returns>
            
             <remarks>
               The caller is assumed to hold ownership over the message once it has been created, including
               ensuring proper disposal.
             </remarks>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Amqp.AmqpMessageConverter.CreateEventHubPropertiesFromResponse(Microsoft.Azure.Amqp.AmqpMessage)">
             <summary>
               Converts a given <see cref="T:Microsoft.Azure.Amqp.AmqpMessage" /> response to a query for Event Hub properties into the
               corresponding <see cref="T:Azure.Messaging.EventHubs.EventHubProperties" /> representation.
             </summary>
            
             <param name="response">The response message to convert.</param>
            
             <returns>The set of properties represented by the response.</returns>
            
             <remarks>
               The caller is assumed to hold ownership over the specified message, including
               ensuring proper disposal.
             </remarks>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Amqp.AmqpMessageConverter.CreatePartitionPropertiesRequest(System.String,System.String,System.String)">
             <summary>
               Creates an <see cref="T:Microsoft.Azure.Amqp.AmqpMessage" /> for use in requesting the properties of an Event Hub partition.
             </summary>
            
             <param name="eventHubName">The name of the Event Hub to query the properties of.</param>
             <param name="partitionIdentifier">The identifier of the partition to query the properties of.</param>
             <param name="managementAuthorizationToken">The bearer token to use for authorization of management operations.</param>
            
             <returns>The AMQP message for issuing the request.</returns>
            
             <remarks>
               The caller is assumed to hold ownership over the message once it has been created, including
               ensuring proper disposal.
             </remarks>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Amqp.AmqpMessageConverter.CreatePartitionPropertiesFromResponse(Microsoft.Azure.Amqp.AmqpMessage)">
             <summary>
               Converts a given <see cref="T:Microsoft.Azure.Amqp.AmqpMessage" /> response to a query for Event Hub partition properties into
               the corresponding <see cref="T:Azure.Messaging.EventHubs.PartitionProperties" /> representation.
             </summary>
            
             <param name="response">The response message to convert.</param>
            
             <returns>The set of properties represented by the response.</returns>
            
             <remarks>
               The caller is assumed to hold ownership over the specified message, including
               ensuring proper disposal.
             </remarks>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Amqp.AmqpMessageConverter.BuildAmqpBatchFromEvents(System.Collections.Generic.IEnumerable{Azure.Messaging.EventHubs.EventData},System.String)">
             <summary>
               Builds a batch <see cref="T:Microsoft.Azure.Amqp.AmqpMessage" /> from a set of <see cref="T:Azure.Messaging.EventHubs.EventData" />
               optionally propagating the custom properties.
             </summary>
            
             <param name="source">The set of events to use as the body of the batch message.</param>
             <param name="partitionKey">The partition key to annotate the AMQP message with; if no partition key is specified, the annotation will not be made.</param>
            
             <returns>The batch <see cref="T:Microsoft.Azure.Amqp.AmqpMessage" /> containing the source events.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Amqp.AmqpMessageConverter.BuildAmqpBatchFromMessages(System.Collections.Generic.IEnumerable{Microsoft.Azure.Amqp.AmqpMessage},System.String)">
             <summary>
               Builds a batch <see cref="T:Microsoft.Azure.Amqp.AmqpMessage" /> from a set of <see cref="T:Microsoft.Azure.Amqp.AmqpMessage" />.
             </summary>
            
             <param name="source">The set of messages to use as the body of the batch message.</param>
             <param name="partitionKey">The partition key to annotate the AMQP message with; if no partition key is specified, the annotation will not be made.</param>
            
             <returns>The batch <see cref="T:Microsoft.Azure.Amqp.AmqpMessage" /> containing the source messages.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Amqp.AmqpMessageConverter.BuildAmqpMessageFromEvent(Azure.Messaging.EventHubs.EventData,System.String)">
             <summary>
               Builds an <see cref="T:Microsoft.Azure.Amqp.AmqpMessage" /> from an <see cref="T:Azure.Messaging.EventHubs.EventData" />.
             </summary>
            
             <param name="source">The event to use as the source of the message.</param>
             <param name="partitionKey">The partition key to annotate the AMQP message with; if no partition key is specified, the annotation will not be made.</param>
            
             <returns>The <see cref="T:Microsoft.Azure.Amqp.AmqpMessage" /> constructed from the source event.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Amqp.AmqpMessageConverter.BuildEventFromAmqpMessage(Microsoft.Azure.Amqp.AmqpMessage)">
             <summary>
               Builds an <see cref="T:Azure.Messaging.EventHubs.EventData" /> from an <see cref="T:Microsoft.Azure.Amqp.AmqpMessage" />.
             </summary>
            
             <param name="source">The message to use as the source of the event.</param>
            
             <returns>The <see cref="T:Azure.Messaging.EventHubs.EventData" /> constructed from the source message.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Amqp.AmqpMessageConverter.ParseSystemAnnotations(Microsoft.Azure.Amqp.AmqpMessage)">
             <summary>
               Parses the annotations set by the Event Hubs service on the <see cref="T:Microsoft.Azure.Amqp.AmqpMessage"/>
               associated with an event, extracting them into a consumable form.
             </summary>
            
             <param name="source">The message to use as the source of the event.</param>
            
             <returns>The <see cref="T:Azure.Messaging.EventHubs.Amqp.AmqpMessageConverter.ParsedAnnotations" /> parsed from the source message.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Amqp.AmqpMessageConverter.TryCreateAmqpPropertyValueForEventProperty(System.Object,System.Object@)">
             <summary>
               Attempts to create an AMQP property value for a given event property.
             </summary>
            
             <param name="eventPropertyValue">The value of the event property to create an AMQP property value for.</param>
             <param name="amqpPropertyValue">The AMQP property value that was created.</param>
            
             <returns><c>true</c> if an AMQP property value was able to be created; otherwise, <c>false</c>.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Amqp.AmqpMessageConverter.TryCreateEventPropertyForAmqpProperty(System.Object,System.Object@)">
             <summary>
               Attempts to create an event property value for a given AMQP property.
             </summary>
            
             <param name="amqpPropertyValue">The value of the AMQP property to create an event property value for.</param>
             <param name="eventPropertyValue">The event property value that was created.</param>
            
             <returns><c>true</c> if an event property value was able to be created; otherwise, <c>false</c>.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Amqp.AmqpMessageConverter.GetTypeIdentifier(System.Object)">
             <summary>
               Gets the AMQP property type identifier for a given
               value.
             </summary>
            
             <param name="value">The value to determine the type identifier for.</param>
            
             <returns>The <see cref="T:Azure.Messaging.EventHubs.AmqpProperty.Type"/> that was identified for the given <paramref name="value"/>.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Amqp.AmqpMessageConverter.TranslateSymbol(Microsoft.Azure.Amqp.Encoding.AmqpSymbol,System.Object)">
             <summary>
               Translates the AMQP symbol into its corresponding typed value, if it belongs to the
               set of known types.
             </summary>
            
             <param name="symbol">The symbol to consider.</param>
             <param name="value">The value of the symbol to translate.</param>
            
             <returns>The typed value of the symbol, if it belongs to the well-known set; otherwise, <c>null</c>.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Amqp.AmqpMessageConverter.ReadStreamToArraySegment(System.IO.Stream)">
             <summary>
               Converts a stream to an <see cref="T:System.ArraySegment`1" /> representation.
             </summary>
            
             <param name="stream">The stream to read and capture in memory.</param>
            
             <returns>The <see cref="T:System.ArraySegment`1" /> containing the stream data.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Amqp.AmqpMessageConverter.ReadStreamToMemory(System.IO.Stream)">
             <summary>
               Converts a stream to a set of memory bytes.
             </summary>
            
             <param name="stream">The stream to read and capture in memory.</param>
            
             <returns>The set of memory bytes containing the stream data.</returns>
            
        </member>
        <member name="T:Azure.Messaging.EventHubs.Amqp.AmqpMessageConverter.ParsedAnnotations">
             <summary>
               The set of system annotations set on a message received from the
               Event Hubs service.
             </summary>
            
        </member>
        <member name="F:Azure.Messaging.EventHubs.Amqp.AmqpMessageConverter.ParsedAnnotations.ServiceAnnotations">
            <summary>The set of weakly typed annotations associated with the message.</summary>
        </member>
        <member name="F:Azure.Messaging.EventHubs.Amqp.AmqpMessageConverter.ParsedAnnotations.SequenceNumber">
            <summary>The sequence number of the event associated with the message.</summary>
        </member>
        <member name="F:Azure.Messaging.EventHubs.Amqp.AmqpMessageConverter.ParsedAnnotations.Offset">
            <summary>The offset of the event associated with the message.</summary>
        </member>
        <member name="F:Azure.Messaging.EventHubs.Amqp.AmqpMessageConverter.ParsedAnnotations.EnqueuedTime">
            <summary>The date and time, in UTC, that the event associated with the message was enqueued.</summary>
        </member>
        <member name="F:Azure.Messaging.EventHubs.Amqp.AmqpMessageConverter.ParsedAnnotations.PartitionKey">
            <summary>The partition key that the event associated with the message was published with.</summary>
        </member>
        <member name="F:Azure.Messaging.EventHubs.Amqp.AmqpMessageConverter.ParsedAnnotations.LastSequenceNumber">
            <summary>The sequence number of the event that was last enqueued in the partition.</summary>
        </member>
        <member name="F:Azure.Messaging.EventHubs.Amqp.AmqpMessageConverter.ParsedAnnotations.LastOffset">
            <summary>The offset of the event that was last enqueued in the partition.</summary>
        </member>
        <member name="F:Azure.Messaging.EventHubs.Amqp.AmqpMessageConverter.ParsedAnnotations.LastEnqueuedTime">
            <summary>The date and time, in UTC, that an event was last enqueued in the partition.</summary>
        </member>
        <member name="F:Azure.Messaging.EventHubs.Amqp.AmqpMessageConverter.ParsedAnnotations.LastReceivedTime">
            <summary>The date and time, in UTC, that the last enqueued event information was retrieved from the service.</summary>
        </member>
        <member name="T:Azure.Messaging.EventHubs.Amqp.AmqpProducer">
             <summary>
               A transport producer abstraction responsible for brokering operations for AMQP-based connections.
               It is intended that the public <see cref="T:Azure.Messaging.EventHubs.Producer.EventHubProducerClient" /> make use of an instance
               via containment and delegate operations to it.
             </summary>
            
             <seealso cref="T:Azure.Messaging.EventHubs.Core.TransportProducer" />
            
        </member>
        <member name="F:Azure.Messaging.EventHubs.Amqp.AmqpProducer._closed">
            <summary>Indicates whether or not this instance has been closed.</summary>
        </member>
        <member name="F:Azure.Messaging.EventHubs.Amqp.AmqpProducer._deliveryCount">
            <summary>The count of send operations performed by this instance; this is used to tag deliveries for the AMQP link.</summary>
        </member>
        <member name="P:Azure.Messaging.EventHubs.Amqp.AmqpProducer.IsClosed">
             <summary>
               Indicates whether or not this producer has been closed.
             </summary>
            
             <value>
               <c>true</c> if the producer is closed; otherwise, <c>false</c>.
             </value>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Amqp.AmqpProducer.EventHubName">
             <summary>
               The name of the Event Hub to which the producer is bound.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Amqp.AmqpProducer.PartitionId">
             <summary>
               The identifier of the Event Hub partition that this producer is bound to, if any.  If bound, events will
               be published only to this partition.
             </summary>
            
             <value>The partition to which the producer is bound; if unbound, <c>null</c>.</value>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Amqp.AmqpProducer.RetryPolicy">
             <summary>
               The policy to use for determining retry behavior for when an operation fails.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Amqp.AmqpProducer.MessageConverter">
             <summary>
               The converter to use for translating between AMQP messages and client library
               types.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Amqp.AmqpProducer.ConnectionScope">
             <summary>
               The AMQP connection scope responsible for managing transport constructs for this instance.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Amqp.AmqpProducer.SendLink">
             <summary>
               The AMQP link intended for use with publishing operations.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Amqp.AmqpProducer.MaximumMessageSize">
             <summary>
               The maximum size of an AMQP message allowed by the associated
               producer link.
             </summary>
            
             <value>The maximum message size, in bytes.</value>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Amqp.AmqpProducer.#ctor(System.String,System.String,Azure.Messaging.EventHubs.Amqp.AmqpConnectionScope,Azure.Messaging.EventHubs.Amqp.AmqpMessageConverter,Azure.Messaging.EventHubs.EventHubsRetryPolicy)">
             <summary>
               Initializes a new instance of the <see cref="T:Azure.Messaging.EventHubs.Amqp.AmqpProducer"/> class.
             </summary>
            
             <param name="eventHubName">The name of the Event Hub to which events will be published.</param>
             <param name="partitionId">The identifier of the Event Hub partition to which it is bound; if unbound, <c>null</c>.</param>
             <param name="connectionScope">The AMQP connection context for operations.</param>
             <param name="messageConverter">The converter to use for translating between AMQP messages and client types.</param>
             <param name="retryPolicy">The retry policy to consider when an operation fails.</param>
            
             <remarks>
               As an internal type, this class performs only basic sanity checks against its arguments.  It
               is assumed that callers are trusted and have performed deep validation.
            
               Any parameters passed are assumed to be owned by this instance and safe to mutate or dispose;
               creation of clones or otherwise protecting the parameters is assumed to be the purview of the
               caller.
             </remarks>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Amqp.AmqpProducer.SendAsync(System.Collections.Generic.IEnumerable{Azure.Messaging.EventHubs.EventData},Azure.Messaging.EventHubs.Producer.SendEventOptions,System.Threading.CancellationToken)">
             <summary>
               Sends a set of events to the associated Event Hub using a batched approach.  If the size of events exceed the
               maximum size of a single batch, an exception will be triggered and the send will fail.
             </summary>
            
             <param name="events">The set of event data to send.</param>
             <param name="sendOptions">The set of options to consider when sending this batch.</param>
             <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken"/> instance to signal the request to cancel the operation.</param>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Amqp.AmqpProducer.SendAsync(Azure.Messaging.EventHubs.Producer.EventDataBatch,System.Threading.CancellationToken)">
             <summary>
               Sends a set of events to the associated Event Hub using a batched approach.
             </summary>
            
             <param name="eventBatch">The event batch to send.</param>
             <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken"/> instance to signal the request to cancel the operation.</param>
            
             <returns>A task to be resolved on when the operation has completed.</returns>
            
             <remarks>
               The caller is assumed to retain ownership of the <paramref name="eventBatch" /> and
               is responsible for managing its lifespan, including disposal.
             </remarks>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Amqp.AmqpProducer.CreateBatchAsync(Azure.Messaging.EventHubs.Producer.CreateBatchOptions,System.Threading.CancellationToken)">
             <summary>
               Creates a size-constraint batch to which <see cref="T:Azure.Messaging.EventHubs.EventData" /> may be added using a try-based pattern.  If an event would
               exceed the maximum allowable size of the batch, the batch will not allow adding the event and signal that scenario using its
               return value.
            
               Because events that would violate the size constraint cannot be added, publishing a batch will not trigger an exception when
               attempting to send the events to the Event Hubs service.
             </summary>
            
             <param name="options">The set of options to consider when creating this batch.</param>
             <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken"/> instance to signal the request to cancel the operation.</param>
            
             <returns>An <see cref="T:Azure.Messaging.EventHubs.Producer.EventDataBatch" /> with the requested <paramref name="options"/>.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Amqp.AmqpProducer.CloseAsync(System.Threading.CancellationToken)">
             <summary>
               Closes the connection to the transport producer instance.
             </summary>
            
             <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken"/> instance to signal the request to cancel the operation.</param>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Amqp.AmqpProducer.SendAsync(System.Func{Microsoft.Azure.Amqp.AmqpMessage},System.String,System.Threading.CancellationToken)">
             <summary>
               Sends an AMQP message that contains a batch of events to the associated Event Hub. If the size of events exceed the
               maximum size of a single batch, an exception will be triggered and the send will fail.
             </summary>
            
             <param name="messageFactory">A factory which can be used to produce an AMQP message containing the batch of events to be sent.</param>
             <param name="partitionKey">The hashing key to use for influencing the partition to which events should be routed.</param>
             <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken"/> instance to signal the request to cancel the operation.</param>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Amqp.AmqpProducer.CreateLinkAndEnsureProducerStateAsync(System.String,System.TimeSpan,System.Threading.CancellationToken)">
             <summary>
               Creates the AMQP link to be used for producer-related operations and ensures
               that the corresponding state for the producer has been updated based on the link
               configuration.
             </summary>
            
             <param name="partitionId">The identifier of the Event Hub partition to which it is bound; if unbound, <c>null</c>.</param>
             <param name="timeout">The timeout to apply when creating the link.</param>
             <param name="cancellationToken">The cancellation token to consider when creating the link.</param>
            
             <returns>The AMQP link to use for producer-related operations.</returns>
            
             <remarks>
               This method will modify class-level state, setting those attributes that depend on the AMQP
               link configuration.  There exists a benign race condition in doing so, as there may be multiple
               concurrent callers.  In this case, the attributes may be set multiple times but the resulting
               value will be the same.
             </remarks>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Amqp.AmqpProducer.UseMinimum(System.TimeSpan,System.TimeSpan)">
             <summary>
               Uses the minimum value of the two specified <see cref="T:System.TimeSpan" /> instances.
             </summary>
            
             <param name="firstOption">The first option to consider.</param>
             <param name="secondOption">The second option to consider.</param>
            
             <returns>The smaller of the two specified intervals.</returns>
            
        </member>
        <member name="T:Azure.Messaging.EventHubs.Amqp.CbsTokenProvider">
             <summary>
               Performs the actions needed to generate <see cref="T:Microsoft.Azure.Amqp.CbsToken" /> instances for
               authorization within an AMQP scope.
             </summary>
            
             <seealso cref="T:Microsoft.Azure.Amqp.ICbsTokenProvider" />
            
        </member>
        <member name="F:Azure.Messaging.EventHubs.Amqp.CbsTokenProvider.SharedAccessSignatureTokenType">
            <summary>The type to consider a token if it is based on an Event Hubs shared access signature.</summary>
        </member>
        <member name="F:Azure.Messaging.EventHubs.Amqp.CbsTokenProvider.JsonWebTokenType">
            <summary>The type to consider a token if not based on a shared access signature.</summary>
        </member>
        <member name="F:Azure.Messaging.EventHubs.Amqp.CbsTokenProvider.TokenType">
            <summary>The type to consider a token generated from the associated <see cref="F:Azure.Messaging.EventHubs.Amqp.CbsTokenProvider.Credential" />.</summary>
        </member>
        <member name="F:Azure.Messaging.EventHubs.Amqp.CbsTokenProvider.Credential">
            <summary>The credential used to generate access tokens.</summary>
        </member>
        <member name="F:Azure.Messaging.EventHubs.Amqp.CbsTokenProvider.CancellationToken">
            <summary>The cancellation token to consider when making requests.</summary>
        </member>
        <member name="M:Azure.Messaging.EventHubs.Amqp.CbsTokenProvider.#ctor(Azure.Messaging.EventHubs.Authorization.EventHubTokenCredential,System.Threading.CancellationToken)">
             <summary>
               Initializes a new instance of the <see cref="T:Azure.Messaging.EventHubs.Amqp.CbsTokenProvider"/> class.
             </summary>
            
             <param name="credential">The credential to use for access token generation.</param>
             <param name="cancellationToken">The cancellation token to consider when making requests.</param>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Amqp.CbsTokenProvider.GetTokenAsync(System.Uri,System.String,System.String[])">
             <summary>
               Asynchronously requests a CBS token to be used for authorization within an AMQP
               scope.
             </summary>
            
             <param name="namespaceAddress">The address of the namespace to be authorized.</param>
             <param name="appliesTo">The resource to which the token should apply.</param>
             <param name="requiredClaims">The set of claims that are required for authorization.</param>
             <returns>The token to use for authorization.</returns>
            
        </member>
        <member name="T:Azure.Messaging.EventHubs.Amqp.ExceptionExtensions">
             <summary>
               The set of extension methods for the <see cref="T:System.Exception" /> class.
             </summary>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Amqp.ExceptionExtensions.TranslateServiceException(System.Exception,System.String)">
             <summary>
               Considers an exception surfaced during an AMQP-based service operation, unwrapping
               and translating it into the form that should be considered for error handling
               decisions.
             </summary>
            
             <param name="instance">The instance that this method was invoked on.</param>
             <param name="eventHubName">The name of the Event Hub that the service operation was targeting.</param>
            
             <returns>The <see cref="T:System.Exception" /> that corresponds to the <paramref name="instance" /> and which represents the service error.</returns>
            
        </member>
        <member name="T:Azure.Messaging.EventHubs.Amqp.TypeExtensions">
             <summary>
               The set of extension methods for the <see cref="T:System.Type" /> class.
             </summary>
            
        </member>
        <member name="F:Azure.Messaging.EventHubs.Amqp.TypeExtensions.AmqpPropertyTypeMap">
            <summary>The set of mappings from CLR types to AMQP types for property values.</summary>
        </member>
        <member name="M:Azure.Messaging.EventHubs.Amqp.TypeExtensions.ToAmqpPropertyType(System.Type)">
             <summary>
               Translates the given <see cref="T:System.Type" /> to the corresponding
               <see cref="T:Azure.Messaging.EventHubs.AmqpProperty.Type" />.
             </summary>
            
             <param name="instance">The instance that this method was invoked on.</param>
            
             <returns>The AMQP property type that best matches the specified <paramref name="instance"/>.</returns>
            
        </member>
        <member name="T:Azure.Messaging.EventHubs.AmqpError">
             <summary>
               The set of well-known error codes associated with an AMQP messages and
               entities.
             </summary>
            
        </member>
        <member name="F:Azure.Messaging.EventHubs.AmqpError.NotFoundStatusText">
             <summary>
               The status text that appears when an AMQP error was due to a missing resource.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.AmqpError.TimeoutError">
             <summary>
               Indicates that a timeout occurred on the link.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.AmqpError.ServerBusyError">
             <summary>
               Indicates that the server was busy and could not allow the requested operation.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.AmqpError.ArgumentError">
             <summary>
               Indicates that an argument provided to the Event Hubs service was incorrect.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.AmqpError.ArgumentOutOfRangeError">
             <summary>
               Indicates that an argument provided to the Event Hubs service was incorrect.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.AmqpError.NotFoundExpression">
             <summary>
               The expression to test for when the service returns a "Not Found" response to determine the context.
             </summary>
            
        </member>
        <member name="F:Azure.Messaging.EventHubs.AmqpError.StatusCodeMap">
            <summary>The set of mappings from AMQP error conditions to response status codes.</summary>
        </member>
        <member name="M:Azure.Messaging.EventHubs.AmqpError.CreateExceptionForResponse(Microsoft.Azure.Amqp.AmqpMessage,System.String)">
             <summary>
               Creates the exception that corresponds to a given AMQP response message.
             </summary>
            
             <param name="response">The response to consider.</param>
             <param name="eventHubsResource">The Event Hubs resource associated with the request.</param>
            
             <returns>The exception that most accurately represents the response failure.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.AmqpError.CreateExceptionForError(Microsoft.Azure.Amqp.Framing.Error,System.String)">
             <summary>
               Creates the exception that corresponds to a given AMQP error.
             </summary>
            
             <param name="error">The AMQP error to consider.</param>
             <param name="eventHubsResource">The Event Hubs resource associated with the operation.</param>
            
             <returns>The exception that most accurately represents the error that was encountered.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.AmqpError.ThrowIfErrorResponse(Microsoft.Azure.Amqp.AmqpMessage,System.String)">
             <summary>
               Determines if a given AMQP message response is an error and, if so, throws the
               appropriate corresponding exception type.
             </summary>
            
             <param name="response">The AMQP response message to consider.</param>
             <param name="eventHubName">The name of the Event Hub associated with the request.</param>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.AmqpError.CreateException(System.String,System.String,System.String)">
             <summary>
               Creates the exception that corresponds to a given AMQP failure scenario.
             </summary>
            
             <param name="condition">The error condition that represents the failure scenario.</param>
             <param name="description">The descriptive text to use for messaging the scenario.</param>
             <param name="eventHubsResource">The Event Hubs resource associated with the failure.</param>
            
             <returns>The exception that most accurately represents the failure scenario.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.AmqpError.DetermineErrorCondition(Microsoft.Azure.Amqp.AmqpMessage)">
             <summary>
               Determines the applicable error condition for a given response message.
             </summary>
            
             <param name="response">The AMQP response message to consider.</param>
            
             <returns>The AMQP error condition that best represents the response.</returns>
            
        </member>
        <member name="T:Azure.Messaging.EventHubs.AmqpFilter">
             <summary>
               The set of filters associated with an AMQP messages and
               entities.
             </summary>
            
        </member>
        <member name="F:Azure.Messaging.EventHubs.AmqpFilter.SequenceNumberName">
            <summary>Indicates filtering based on the sequence number of a message.</summary>
        </member>
        <member name="F:Azure.Messaging.EventHubs.AmqpFilter.OffsetName">
            <summary>Indicates filtering based on the offset of a message.</summary>
        </member>
        <member name="F:Azure.Messaging.EventHubs.AmqpFilter.EnqueuedTimeName">
            <summary>Indicates filtering based on time that a message was enqueued.</summary>
        </member>
        <member name="F:Azure.Messaging.EventHubs.AmqpFilter.ConsumerFilterName">
            <summary>Identifies the filter type name.</summary>
        </member>
        <member name="F:Azure.Messaging.EventHubs.AmqpFilter.ConsumerFilterCode">
            <summary>Identifies the filter type code.</summary>
        </member>
        <member name="M:Azure.Messaging.EventHubs.AmqpFilter.CreateConsumerFilter(System.String)">
             <summary>
               Creates an event consumer filter based on the specified expression.
             </summary>
            
             <param name="filterExpression">The SQL-like expression to use for filtering events in the partition.</param>
            
             <returns>An <see cref="T:Microsoft.Azure.Amqp.Framing.AmqpDescribed"/> type to use in the filter map for a consumer AMQP link.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.AmqpFilter.BuildFilterExpression(Azure.Messaging.EventHubs.Consumer.EventPosition)">
             <summary>
               Builds an AMQP filter expression for the specified event position.
             </summary>
            
             <param name="eventPosition">The event position to use as the source for filtering.</param>
            
             <returns>The AMQP filter expression that corresponds to the <paramref name="eventPosition"/>.</returns>
            
        </member>
        <member name="T:Azure.Messaging.EventHubs.AmqpManagement">
             <summary>
               The set of annotations for management-related operations associated with an AMQP messages and
               entities.
             </summary>
            
        </member>
        <member name="F:Azure.Messaging.EventHubs.AmqpManagement.Address">
            <summary>The location to specify for management operations.</summary>
        </member>
        <member name="F:Azure.Messaging.EventHubs.AmqpManagement.LinkType">
            <summary>The type to specify for an AMQP link used for management operations.</summary>
        </member>
        <member name="F:Azure.Messaging.EventHubs.AmqpManagement.ResourceNameKey">
            <summary>The key to use for specifying an Event Hubs resource name.</summary>
        </member>
        <member name="F:Azure.Messaging.EventHubs.AmqpManagement.PartitionNameKey">
            <summary>The key to use for specifying a partition. </summary>
        </member>
        <member name="F:Azure.Messaging.EventHubs.AmqpManagement.OperationKey">
            <summary>The key to use for specifying an operation.</summary>
        </member>
        <member name="F:Azure.Messaging.EventHubs.AmqpManagement.ResourceTypeKey">
            <summary>The key to use for specifying the type of Event Hubs resource.</summary>
        </member>
        <member name="F:Azure.Messaging.EventHubs.AmqpManagement.SecurityTokenKey">
            <summary>The key to use for specifying a security token.</summary>
        </member>
        <member name="F:Azure.Messaging.EventHubs.AmqpManagement.ReadOperationValue">
            <summary>The value to specify when requesting a read-based operation.</summary>
        </member>
        <member name="F:Azure.Messaging.EventHubs.AmqpManagement.EventHubResourceTypeValue">
            <summary>The value to specify when identifying an Event Hub resource.</summary>
        </member>
        <member name="F:Azure.Messaging.EventHubs.AmqpManagement.PartitionResourceTypeValue">
            <summary>The value to specify when identifying a partition resource.</summary>
        </member>
        <member name="T:Azure.Messaging.EventHubs.AmqpManagement.ResponseMap">
             <summary>
               The set of property mappings to use for reading management-related
               responses from the Event Hubs service.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.AmqpManagement.ResponseMap.Name">
             <summary>
               The message property that identifies the name of a resource.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.AmqpManagement.ResponseMap.CreatedAt">
             <summary>
               The message property that identifies the date/time that a resource was created.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.AmqpManagement.ResponseMap.PartitionIdentifier">
             <summary>
               The message property that identifies the unique identifier associated with a partition.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.AmqpManagement.ResponseMap.PartitionIdentifiers">
             <summary>
               The message property that identifies the set of unique identifiers for each partition of an Event Hub.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.AmqpManagement.ResponseMap.PartitionBeginSequenceNumber">
             <summary>
               The message property that identifies the beginning sequence number in a partition.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.AmqpManagement.ResponseMap.PartitionLastEnqueuedSequenceNumber">
             <summary>
               The message property that identifies the last sequence number enqueued for a partition.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.AmqpManagement.ResponseMap.PartitionLastEnqueuedOffset">
             <summary>
               The message property that identifies the last offset enqueued for a partition.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.AmqpManagement.ResponseMap.PartitionLastEnqueuedTimeUtc">
             <summary>
               The message property that identifies the last time enqueued for a partition.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.AmqpManagement.ResponseMap.PartitionRuntimeInfoRetrievalTimeUtc">
             <summary>
               The message property that identifies the date and time, in UTC, that partition information was sent from the Event Hubs service.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.AmqpManagement.ResponseMap.PartitionRuntimeInfoPartitionIsEmpty">
             <summary>
               The message property that identifies whether or not a partition is considered empty.
             </summary>
            
        </member>
        <member name="T:Azure.Messaging.EventHubs.AmqpProperty">
             <summary>
               The set of well-known properties associated with an AMQP messages and
               entities.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.AmqpProperty.OwnerLevel">
             <summary>
               The owner level (a.k.a. epoch) to associate with a link.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.AmqpProperty.EntityType">
             <summary>
               The type of Event Hubs entity to associate with a link.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.AmqpProperty.TrackLastEnqueuedEventProperties">
             <summary>
               The capability for tracking the last event enqueued in a partition, to associate with a link.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.AmqpProperty.Timeout">
             <summary>
               The timeout to associate with a link.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.AmqpProperty.EnqueuedTime">
             <summary>
               The date and time, in UTC, that a message was enqueued.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.AmqpProperty.SequenceNumber">
             <summary>
               The sequence number assigned to a message.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.AmqpProperty.Offset">
             <summary>
               The offset of a message within a given partition.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.AmqpProperty.PartitionKey">
             <summary>
               The partition hashing key used for grouping a batch of events together with the intent of routing to a single partition.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.AmqpProperty.PartitionLastEnqueuedSequenceNumber">
             <summary>
               The message property that identifies the last sequence number enqueued for a partition.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.AmqpProperty.PartitionLastEnqueuedOffset">
             <summary>
               The message property that identifies the last offset enqueued for a partition.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.AmqpProperty.PartitionLastEnqueuedTimeUtc">
             <summary>
               The message property that identifies the last time enqueued for a partition.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.AmqpProperty.LastPartitionPropertiesRetrievalTimeUtc">
             <summary>
               The message property that identifies the time that the last enqueued event information was
               received from the service.
             </summary>
            
        </member>
        <member name="T:Azure.Messaging.EventHubs.AmqpProperty.Descriptor">
             <summary>
               The set of descriptors for well-known <see cref="T:Microsoft.Azure.Amqp.Encoding.DescribedType" />
               property types.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.AmqpProperty.Descriptor.TimeSpan">
             <summary>
               A type annotation for representing a <see cref="T:System.TimeSpan" /> in a message.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.AmqpProperty.Descriptor.Uri">
             <summary>
               A type annotation for representing a <see cref="T:System.Uri" /> in a message.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.AmqpProperty.Descriptor.DateTimeOffset">
             <summary>
               A type annotation for representing a <see cref="T:System.DateTimeOffset" /> in a message.
             </summary>
            
        </member>
        <member name="T:Azure.Messaging.EventHubs.AmqpProperty.Entity">
             <summary>
               Represents the entity mapping for AMQP properties between the client library and
               the Event Hubs service.
             </summary>
            
             <remarks>
               WARNING:
                 These values are synchronized between the Event Hubs service and the client
                 library.  You must consult with the Event Hubs service team before making
                 changes, including adding a new member.
            
                 When adding a new member, remember to always do so before the Unknown
                 member.
             </remarks>
            
        </member>
        <member name="T:Azure.Messaging.EventHubs.AmqpProperty.Type">
             <summary>
               Represents the type mapping for AMQP properties between the client library and
               the Event Hubs service.
             </summary>
            
             <remarks>
               WARNING:
                 These values are synchronized between the Event Hubs service and the client
                 library.  You must consult with the Event Hubs service team before making
                 changes, including adding a new member.
            
                 When adding a new member, remember to always do so before the Unknown
                 member.
             </remarks>
            
        </member>
        <member name="T:Azure.Messaging.EventHubs.AmqpResponse">
             <summary>
               The set of annotations for service responses associated with an AMQP messages and
               entities.
             </summary>
            
        </member>
        <member name="F:Azure.Messaging.EventHubs.AmqpResponse.StatusCode">
            <summary>The annotation that identifies the code of a response status.</summary>
        </member>
        <member name="F:Azure.Messaging.EventHubs.AmqpResponse.StatusDescription">
            <summary>The annotation that identifies the description of a response status.</summary>
        </member>
        <member name="F:Azure.Messaging.EventHubs.AmqpResponse.ErrorCondition">
            <summary>The annotation that identifies an error response.</summary>
        </member>
        <member name="M:Azure.Messaging.EventHubs.AmqpResponse.IsSuccessStatus(Microsoft.Azure.Amqp.AmqpResponseStatusCode)">
             <summary>
               Determines whether the given AMQP status code value should be considered a successful
               request.
             </summary>
            
             <param name="statusCode">The status code value to consider.</param>
            
             <returns><c>true</c> if the request should be considered successful; otherwise, <c>false</c>.</returns>
            
        </member>
        <member name="T:Azure.Messaging.EventHubs.Authorization.EventHubsClaim">
             <summary>
               The set of claims for operations associated with the Event Hubs service.
             </summary>
            
        </member>
        <member name="F:Azure.Messaging.EventHubs.Authorization.EventHubsClaim.Manage">
            <summary>Needed for management operations, such as querying metadata, against the service.</summary>
        </member>
        <member name="F:Azure.Messaging.EventHubs.Authorization.EventHubsClaim.Send">
            <summary>Needed for sending data, such as publishing events, to the service.</summary>
        </member>
        <member name="F:Azure.Messaging.EventHubs.Authorization.EventHubsClaim.Listen">
            <summary>Needed for receiving data, such as events, from the service. </summary>
        </member>
        <member name="T:Azure.Messaging.EventHubs.Authorization.EventHubTokenCredential">
             <summary>
               Provides a generic token-based credential for a given Event Hub instance.
             </summary>
            
             <seealso cref="T:Azure.Core.TokenCredential" />
            
        </member>
        <member name="F:Azure.Messaging.EventHubs.Authorization.EventHubTokenCredential.DefaultScope">
            <summary>The default scope used for token authentication with EventHubs.</summary>
        </member>
        <member name="P:Azure.Messaging.EventHubs.Authorization.EventHubTokenCredential.Resource">
             <summary>
               The Event Hubs resource to which the token is intended to serve as authorization.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Authorization.EventHubTokenCredential.IsSharedAccessSignatureCredential">
             <summary>
               Indicates whether the credential is based on an Event Hubs
               shared access signature.
             </summary>
            
             <value><c>true</c> if the credential should be considered a SAS credential; otherwise, <c>false</c>.</value>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Authorization.EventHubTokenCredential.Credential">
             <summary>
               The <see cref="T:Azure.Core.TokenCredential" /> that forms the basis of this security token.
             </summary>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Authorization.EventHubTokenCredential.#ctor(Azure.Core.TokenCredential,System.String)">
             <summary>
               Initializes a new instance of the <see cref="T:Azure.Messaging.EventHubs.Authorization.EventHubTokenCredential"/> class.
             </summary>
            
             <param name="tokenCredential">The <see cref="T:Azure.Core.TokenCredential" /> on which to base the token.</param>
             <param name="eventHubResource">The Event Hubs resource to which the token is intended to serve as authorization.</param>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Authorization.EventHubTokenCredential.GetToken(Azure.Core.TokenRequestContext,System.Threading.CancellationToken)">
             <summary>
               Retrieves the token that represents the shared access signature credential, for
               use in authorization against an Event Hub.
             </summary>
            
             <param name="requestContext">The details of the authentication request.</param>
             <param name="cancellationToken">The token used to request cancellation of the operation.</param>
            
             <returns>The token representing the shared access signature for this credential.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Authorization.EventHubTokenCredential.GetTokenAsync(Azure.Core.TokenRequestContext,System.Threading.CancellationToken)">
             <summary>
               Retrieves the token that represents the shared access signature credential, for
               use in authorization against an Event Hub.
             </summary>
            
             <param name="requestContext">The details of the authentication request.</param>
             <param name="cancellationToken">The token used to request cancellation of the operation.</param>
            
             <returns>The token representing the shared access signature for this credential.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Authorization.EventHubTokenCredential.GetTokenUsingDefaultScopeAsync(System.Threading.CancellationToken)">
             <summary>
               Retrieves the token that represents the shared access signature credential, for
               use in authorization against an Event Hub. It provides a default value for the Token Request Context.
             </summary>
            
             <param name="cancellationToken">The token used to request cancellation of the operation.</param>
            
             <returns>The token representing the shared access signature for this credential.</returns>
            
        </member>
        <member name="T:Azure.Messaging.EventHubs.Authorization.SharedAccessSignature">
             <summary>
               A shared access signature, which can be used for authorization to an Event Hubs namespace
               or a specific Event Hub.
             </summary>
            
        </member>
        <member name="F:Azure.Messaging.EventHubs.Authorization.SharedAccessSignature.MaximumKeyNameLength">
            <summary>The maximum allowed length of the SAS key name.</summary>
        </member>
        <member name="F:Azure.Messaging.EventHubs.Authorization.SharedAccessSignature.MaximumKeyLength">
            <summary>The maximum allowed length of the SAS key.</summary>
        </member>
        <member name="F:Azure.Messaging.EventHubs.Authorization.SharedAccessSignature.AuthenticationTypeToken">
            <summary>The token that represents the type of authentication used.</summary>
        </member>
        <member name="F:Azure.Messaging.EventHubs.Authorization.SharedAccessSignature.SignedResourceToken">
            <summary>The token that identifies the signed component of the shared access signature.</summary>
        </member>
        <member name="F:Azure.Messaging.EventHubs.Authorization.SharedAccessSignature.SignatureToken">
            <summary>The token that identifies the signature component of the shared access signature.</summary>
        </member>
        <member name="F:Azure.Messaging.EventHubs.Authorization.SharedAccessSignature.SignedKeyNameToken">
            <summary>The token that identifies the signed SAS key component of the shared access signature.</summary>
        </member>
        <member name="F:Azure.Messaging.EventHubs.Authorization.SharedAccessSignature.SignedExpiryToken">
            <summary>The token that identifies the signed expiration time of the shared access signature.</summary>
        </member>
        <member name="F:Azure.Messaging.EventHubs.Authorization.SharedAccessSignature.SignedResourceFullIdentifierToken">
            <summary>The token that fully identifies the signed resource within the signature.</summary>
        </member>
        <member name="F:Azure.Messaging.EventHubs.Authorization.SharedAccessSignature.TokenValueSeparator">
            <summary>The character used to separate a token and its value in the connection string.</summary>
        </member>
        <member name="F:Azure.Messaging.EventHubs.Authorization.SharedAccessSignature.TokenValuePairDelimiter">
            <summary>The character used to mark the beginning of a new token/value pair in the signature.</summary>
        </member>
        <member name="F:Azure.Messaging.EventHubs.Authorization.SharedAccessSignature.DefaultSignatureValidityDuration">
            <summary>The default length of time to consider a signature valid, if not otherwise specified.</summary>
        </member>
        <member name="F:Azure.Messaging.EventHubs.Authorization.SharedAccessSignature.Epoch">
            <summary>Represents the Unix epoch time value, January 1, 1970 12:00:00, UTC.</summary>
        </member>
        <member name="P:Azure.Messaging.EventHubs.Authorization.SharedAccessSignature.SharedAccessKeyName">
             <summary>
               The name of the shared access key, either for the Event Hubs namespace
               or the Event Hub.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Authorization.SharedAccessSignature.SharedAccessKey">
             <summary>
               The value of the shared access key, either for the Event Hubs namespace
               or the Event Hub.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Authorization.SharedAccessSignature.SignatureExpiration">
             <summary>
               The date and time that the shared access signature expires, in UTC.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Authorization.SharedAccessSignature.Resource">
             <summary>
               The resource to which the shared access signature is intended to serve as
               authorization.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Authorization.SharedAccessSignature.Value">
             <summary>
               The shared access signature to be used for authorization, either for the Event Hubs namespace
               or the Event Hub.
             </summary>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Authorization.SharedAccessSignature.#ctor(System.String,System.String,System.String,System.Nullable{System.TimeSpan})">
             <summary>
               Initializes a new instance of the <see cref="T:Azure.Messaging.EventHubs.Authorization.SharedAccessSignature"/> class.
             </summary>
            
             <param name="eventHubResource">The Event Hubs resource to which the token is intended to serve as authorization.</param>
             <param name="sharedAccessKeyName">The name of the shared access key that the signature should be based on.</param>
             <param name="sharedAccessKey">The value of the shared access key for the signature.</param>
             <param name="signatureValidityDuration">The duration that the signature should be considered valid; if not specified, a default will be assumed.</param>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Authorization.SharedAccessSignature.#ctor(System.String,System.String)">
             <summary>
               Initializes a new instance of the <see cref="T:Azure.Messaging.EventHubs.Authorization.SharedAccessSignature"/> class.
             </summary>
            
             <param name="sharedAccessSignature">The shared access signature that will be parsed as the basis of this instance.</param>
             <param name="sharedAccessKey">The value of the shared access key for the signature.</param>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Authorization.SharedAccessSignature.#ctor(System.String)">
             <summary>
               Initializes a new instance of the <see cref="T:Azure.Messaging.EventHubs.Authorization.SharedAccessSignature"/> class.
             </summary>
            
             <param name="sharedAccessSignature">The shared access signature that will be parsed as the basis of this instance.</param>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Authorization.SharedAccessSignature.#ctor(System.String,System.String,System.String,System.String,System.DateTimeOffset)">
             <summary>
               Initializes a new instance of the <see cref="T:Azure.Messaging.EventHubs.Authorization.SharedAccessSignature" /> class.
             </summary>
            
             <param name="eventHubResource">The Event Hubs resource to which the token is intended to serve as authorization.</param>
             <param name="sharedAccessKeyName">The name of the shared access key that the signature should be based on.</param>
             <param name="sharedAccessKey">The value of the shared access key for the signature.</param>
             <param name="value">The shared access signature to be used for authorization.</param>
             <param name="signatureExpiration">The date and time that the shared access signature expires, in UTC.</param>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Authorization.SharedAccessSignature.CloneWithNewExpiration(System.TimeSpan)">
             <summary>
               Creates a new signature with the specified period for which the shared access signature is considered valid.
             </summary>
            
             <param name="signatureValidityDuration">The duration that the signature should be considered valid.</param>
            
             <returns>A new <see cref="T:Azure.Messaging.EventHubs.Authorization.SharedAccessSignature" /> based on the same key, but with a new expiration time.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Authorization.SharedAccessSignature.ToString">
             <summary>
               Converts the instance to string representation.
             </summary>
            
             <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Authorization.SharedAccessSignature.ParseSignature(System.String)">
             <summary>
               Parses a shared access signature into its component parts.
             </summary>
            
             <param name="sharedAccessSignature">The shared access signature to parse.</param>
            
             <returns>The set of composite properties parsed from the signature.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Authorization.SharedAccessSignature.BuildSignature(System.String,System.String,System.String,System.DateTimeOffset)">
             <summary>
               Builds the shared access signature value, which can be used as a token for
               access to the Event Hubs service.
             </summary>
            
             <param name="audience">The audience scope to which this signature applies.</param>
             <param name="sharedAccessKeyName">The name of the shared access key that the signature should be based on.</param>
             <param name="sharedAccessKey">The value of the shared access key for the signature.</param>
             <param name="expirationTime">The date/time, in UTC, that the signature expires.</param>
            
             <returns>The value of the shared access signature.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Authorization.SharedAccessSignature.ConvertFromUnixTime(System.Int64)">
             <summary>
               Converts a Unix-style timestamp into the corresponding <see cref="T:System.DateTimeOffset" />
               value.
             </summary>
            
             <param name="unixTime">The timestamp to convert.</param>
            
             <returns>The date/time, in UTC, which corresponds to the specified timestamp.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Authorization.SharedAccessSignature.ConvertToUnixTime(System.DateTimeOffset)">
             <summary>
               Converts a <see cref="T:System.DateTimeOffset" /> value to the corresponding Unix-style timestamp.
             </summary>
            
             <param name="dateTimeOffset">The date/time to convert.</param>
            
             <returns>The Unix-style timestamp which corresponds to the specified date/time.</returns>
            
        </member>
        <member name="T:Azure.Messaging.EventHubs.Authorization.SharedAccessSignatureCredential">
             <summary>
               Provides a credential based on a shared access signature for a given
               Event Hub instance.
             </summary>
            
             <seealso cref="P:Azure.Messaging.EventHubs.Authorization.SharedAccessSignatureCredential.SharedAccessSignature" />
             <seealso cref="T:Azure.Core.TokenCredential" />
            
        </member>
        <member name="F:Azure.Messaging.EventHubs.Authorization.SharedAccessSignatureCredential.SignatureRefreshBuffer">
            <summary>The buffer to apply when considering refreshing; signatures that expire less than this duration will be refreshed.</summary>
        </member>
        <member name="F:Azure.Messaging.EventHubs.Authorization.SharedAccessSignatureCredential.SignatureExtensionDuration">
            <summary>The length of time extend signature validity, if a token was requested.</summary>
        </member>
        <member name="F:Azure.Messaging.EventHubs.Authorization.SharedAccessSignatureCredential.SignatureSyncRoot">
            <summary>Provides a target for synchronization to guard against concurrent token expirations.</summary>
        </member>
        <member name="P:Azure.Messaging.EventHubs.Authorization.SharedAccessSignatureCredential.SharedAccessSignature">
             <summary>
               The shared access signature that forms the basis of this security token.
             </summary>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Authorization.SharedAccessSignatureCredential.#ctor(Azure.Messaging.EventHubs.Authorization.SharedAccessSignature)">
             <summary>
               Initializes a new instance of the <see cref="T:Azure.Messaging.EventHubs.Authorization.SharedAccessSignatureCredential"/> class.
             </summary>
            
             <param name="signature">The shared access signature on which to base the token.</param>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Authorization.SharedAccessSignatureCredential.GetToken(Azure.Core.TokenRequestContext,System.Threading.CancellationToken)">
             <summary>
               Retrieves the token that represents the shared access signature credential, for
               use in authorization against an Event Hub.
             </summary>
            
             <param name="requestContext">The details of the authentication request.</param>
             <param name="cancellationToken">The token used to request cancellation of the operation.</param>
            
             <returns>The token representing the shared access signature for this credential.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Authorization.SharedAccessSignatureCredential.GetTokenAsync(Azure.Core.TokenRequestContext,System.Threading.CancellationToken)">
             <summary>
               Retrieves the token that represents the shared access signature credential, for
               use in authorization against an Event Hub.
             </summary>
            
             <param name="requestContext">The details of the authentication request.</param>
             <param name="cancellationToken">The token used to request cancellation of the operation.</param>
            
             <returns>The token representing the shared access signature for this credential.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Authorization.SharedAccessSignatureCredential.UpdateSharedAccessKey(System.String,System.String)">
             <summary>
               It creates a new shared signature using the key name and the key value passed as
               input allowing credentials rotation. A call will not extend the signature duration.
             </summary>
            
             <param name="keyName">The name of the shared access key that the signature should be based on.</param>
             <param name="keyValue">The value of the shared access key for the signature.</param>
            
        </member>
        <member name="T:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient">
             <summary>
               A client responsible for reading <see cref="T:Azure.Messaging.EventHubs.EventData" /> from a specific Event Hub
               as a member of a specific consumer group.
            
               A consumer may be exclusive, which asserts ownership over associated partitions for the consumer
               group to ensure that only one consumer from that group is reading the from the partition.
               These exclusive consumers are sometimes referred to as "Epoch Consumers."
            
               A consumer may also be non-exclusive, allowing multiple consumers from the same consumer
               group to be actively reading events from a given partition.  These non-exclusive consumers are
               sometimes referred to as "Non-Epoch Consumers."
             </summary>
            
        </member>
        <member name="F:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient.DefaultConsumerGroupName">
            <summary>The name of the default consumer group in the Event Hubs service.</summary>
        </member>
        <member name="F:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient.BackgroundPublishReceiveBatchSize">
            <summary>The size of event batch requested by the background publishing operation used for subscriptions.</summary>
        </member>
        <member name="F:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient.BackgroundPublishingWaitTime">
            <summary>The maximum wait time for receiving an event batch for the background publishing operation used for subscriptions.</summary>
        </member>
        <member name="P:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient.FullyQualifiedNamespace">
             <summary>
               The fully qualified Event Hubs namespace that the consumer is associated with.  This is likely
               to be similar to <c>{yournamespace}.servicebus.windows.net</c>.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient.EventHubName">
             <summary>
               The name of the Event Hub that the consumer is connected to, specific to the
               Event Hubs namespace that contains it.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient.ConsumerGroup">
             <summary>
               The name of the consumer group that this consumer is associated with.  Events will be read
               only in the context of this group.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient.IsClosed">
             <summary>
               Indicates whether or not this <see cref="T:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient"/> has been closed.
             </summary>
            
             <value>
               <c>true</c> if the client is closed; otherwise, <c>false</c>.
             </value>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient.OwnsConnection">
             <summary>
               Indicates whether the client has ownership of the associated <see cref="T:Azure.Messaging.EventHubs.EventHubConnection" />
               and should take responsibility for managing its lifespan.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient.RetryPolicy">
             <summary>
               The policy to use for determining retry behavior for when an operation fails.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient.Connection">
             <summary>
               The active connection to the Azure Event Hubs service, enabling client communications for metadata
               about the associated Event Hub and access to transport-aware consumers.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient.ActiveConsumers">
             <summary>
               The set of active Event Hub transport-specific consumers created by this client for use with
               delegated operations.
             </summary>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient.#ctor(System.String,System.String)">
             <summary>
               Initializes a new instance of the <see cref="T:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient"/> class.
             </summary>
            
             <param name="consumerGroup">The name of the consumer group this consumer is associated with.  Events are read in the context of this group.</param>
             <param name="connectionString">The connection string to use for connecting to the Event Hubs namespace; it is expected that the Event Hub name and the shared key properties are contained in this connection string.</param>
            
             <remarks>
               If the connection string is copied from the Event Hubs namespace, it will likely not contain the name of the desired Event Hub,
               which is needed.  In this case, the name can be added manually by adding ";EntityPath=[[ EVENT HUB NAME ]]" to the end of the
               connection string.  For example, ";EntityPath=telemetry-hub".
            
               If you have defined a shared access policy directly on the Event Hub itself, then copying the connection string from that
               Event Hub will result in a connection string that contains the name.
             </remarks>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient.#ctor(System.String,System.String,Azure.Messaging.EventHubs.Consumer.EventHubConsumerClientOptions)">
             <summary>
               Initializes a new instance of the <see cref="T:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient"/> class.
             </summary>
            
             <param name="consumerGroup">The name of the consumer group this consumer is associated with.  Events are read in the context of this group.</param>
             <param name="connectionString">The connection string to use for connecting to the Event Hubs namespace; it is expected that the Event Hub name and the shared key properties are contained in this connection string.</param>
             <param name="clientOptions">The set of options to use for this consumer.</param>
            
             <remarks>
               If the connection string is copied from the Event Hubs namespace, it will likely not contain the name of the desired Event Hub,
               which is needed.  In this case, the name can be added manually by adding ";EntityPath=[[ EVENT HUB NAME ]]" to the end of the
               connection string.  For example, ";EntityPath=telemetry-hub".
            
               If you have defined a shared access policy directly on the Event Hub itself, then copying the connection string from that
               Event Hub will result in a connection string that contains the name.
             </remarks>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient.#ctor(System.String,System.String,System.String)">
             <summary>
               Initializes a new instance of the <see cref="T:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient"/> class.
             </summary>
            
             <param name="consumerGroup">The name of the consumer group this consumer is associated with.  Events are read in the context of this group.</param>
             <param name="connectionString">The connection string to use for connecting to the Event Hubs namespace; it is expected that the shared key properties are contained in this connection string, but not the Event Hub name.</param>
             <param name="eventHubName">The name of the specific Event Hub to associate the consumer with.</param>
            
             <remarks>
               If the connection string is copied from the Event Hub itself, it will contain the name of the desired Event Hub,
               and can be used directly without passing the <paramref name="eventHubName" />.  The name of the Event Hub should be
               passed only once, either as part of the connection string or separately.
             </remarks>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient.#ctor(System.String,System.String,System.String,Azure.Messaging.EventHubs.Consumer.EventHubConsumerClientOptions)">
             <summary>
               Initializes a new instance of the <see cref="T:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient"/> class.
             </summary>
            
             <param name="consumerGroup">The name of the consumer group this consumer is associated with.  Events are read in the context of this group.</param>
             <param name="connectionString">The connection string to use for connecting to the Event Hubs namespace; it is expected that the shared key properties are contained in this connection string, but not the Event Hub name.</param>
             <param name="eventHubName">The name of the specific Event Hub to associate the consumer with.</param>
             <param name="clientOptions">A set of options to apply when configuring the consumer.</param>
            
             <remarks>
               If the connection string is copied from the Event Hub itself, it will contain the name of the desired Event Hub,
               and can be used directly without passing the <paramref name="eventHubName" />.  The name of the Event Hub should be
               passed only once, either as part of the connection string or separately.
             </remarks>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient.#ctor(System.String,System.String,System.String,Azure.Core.TokenCredential,Azure.Messaging.EventHubs.Consumer.EventHubConsumerClientOptions)">
             <summary>
               Initializes a new instance of the <see cref="T:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient"/> class.
             </summary>
            
             <param name="consumerGroup">The name of the consumer group this consumer is associated with.  Events are read in the context of this group.</param>
             <param name="fullyQualifiedNamespace">The fully qualified Event Hubs namespace to connect to.  This is likely to be similar to <c>{yournamespace}.servicebus.windows.net</c>.</param>
             <param name="eventHubName">The name of the specific Event Hub to associate the consumer with.</param>
             <param name="credential">The Azure managed identity credential to use for authorization.  Access controls may be specified by the Event Hubs namespace or the requested Event Hub, depending on Azure configuration.</param>
             <param name="clientOptions">A set of options to apply when configuring the consumer.</param>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient.#ctor(System.String,Azure.Messaging.EventHubs.EventHubConnection,Azure.Messaging.EventHubs.Consumer.EventHubConsumerClientOptions)">
             <summary>
               Initializes a new instance of the <see cref="T:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient"/> class.
             </summary>
            
             <param name="consumerGroup">The name of the consumer group this consumer is associated with.  Events are read in the context of this group.</param>
             <param name="connection">The <see cref="T:Azure.Messaging.EventHubs.EventHubConnection" /> connection to use for communication with the Event Hubs service.</param>
             <param name="clientOptions">A set of options to apply when configuring the consumer.</param>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient.#ctor">
             <summary>
               Initializes a new instance of the <see cref="T:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient"/> class.
             </summary>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient.GetEventHubPropertiesAsync(System.Threading.CancellationToken)">
             <summary>
               Retrieves information about the Event Hub that the connection is associated with, including
               the number of partitions present and their identifiers.
             </summary>
            
             <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken"/> instance to signal the request to cancel the operation.</param>
            
             <returns>The set of information for the Event Hub that this client is associated with.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient.GetPartitionIdsAsync(System.Threading.CancellationToken)">
             <summary>
               Retrieves the set of identifiers for the partitions of an Event Hub.
             </summary>
            
             <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken"/> instance to signal the request to cancel the operation.</param>
            
             <returns>The set of identifiers for the partitions within the Event Hub that this client is associated with.</returns>
            
             <remarks>
               This method is synonymous with invoking <see cref="M:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient.GetEventHubPropertiesAsync(System.Threading.CancellationToken)" /> and reading the <see cref="P:Azure.Messaging.EventHubs.EventHubProperties.PartitionIds"/>
               property that is returned. It is offered as a convenience for quick access to the set of partition identifiers for the associated Event Hub.
               No new or extended information is presented.
             </remarks>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient.GetPartitionPropertiesAsync(System.String,System.Threading.CancellationToken)">
             <summary>
               Retrieves information about a specific partition for an Event Hub, including elements that describe the available
               events in the partition event stream.
             </summary>
            
             <param name="partitionId">The unique identifier of a partition associated with the Event Hub.</param>
             <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken"/> instance to signal the request to cancel the operation.</param>
            
             <returns>The set of information for the requested partition under the Event Hub this client is associated with.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient.ReadEventsFromPartitionAsync(System.String,Azure.Messaging.EventHubs.Consumer.EventPosition,System.Threading.CancellationToken)">
             <summary>
               Reads events from the requested partition as an asynchronous enumerable, allowing events to be iterated as they
               become available on the partition, waiting as necessary should there be no events available.
            
               This enumerator may block for an indeterminate amount of time for an <c>await</c> if events are not available on the partition, requiring
               cancellation via the <paramref name="cancellationToken"/> to be requested in order to return control.  It is recommended to call the overload
               which accepts a set of options for configuring read behavior for scenarios where a more deterministic maximum waiting period is desired.
             </summary>
            
             <param name="partitionId">The identifier of the Event Hub partition from which events will be received.</param>
             <param name="startingPosition">The position within the partition where the consumer should begin reading events.</param>
             <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken"/> instance to signal the request to cancel the operation.</param>
            
             <returns>An <see cref="T:System.Collections.Generic.IAsyncEnumerable`1"/> to be used for iterating over events in the partition.</returns>
            
             <remarks>
               Each reader of events is presented with an independent iterator; if there are multiple readers, each receive their own copy of an event to
               process, rather than competing for them.
             </remarks>
            
             <seealso cref="M:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient.ReadEventsFromPartitionAsync(System.String,Azure.Messaging.EventHubs.Consumer.EventPosition,Azure.Messaging.EventHubs.Consumer.ReadEventOptions,System.Threading.CancellationToken)"/>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient.ReadEventsFromPartitionAsync(System.String,Azure.Messaging.EventHubs.Consumer.EventPosition,Azure.Messaging.EventHubs.Consumer.ReadEventOptions,System.Threading.CancellationToken)">
             <summary>
               Reads events from the requested partition as an asynchronous enumerable, allowing events to be iterated as they
               become available on the partition, waiting as necessary should there be no events available.
            
               This enumerator may block for an indeterminate amount of time for an <c>await</c> if events are not available on the partition, requiring
               cancellation via the <paramref name="cancellationToken"/> to be requested in order to return control.  It is recommended to set the
               <see cref="P:Azure.Messaging.EventHubs.Consumer.ReadEventOptions.MaximumWaitTime" /> for scenarios where a more deterministic maximum waiting period is desired.
             </summary>
            
             <param name="partitionId">The identifier of the Event Hub partition from which events will be received.</param>
             <param name="startingPosition">The position within the partition where the consumer should begin reading events.</param>
             <param name="readOptions">The set of options to use for configuring read behavior; if not specified the defaults will be used.</param>
             <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken"/> instance to signal the request to cancel the operation.</param>
            
             <returns>An <see cref="T:System.Collections.Generic.IAsyncEnumerable`1"/> to be used for iterating over events in the partition.</returns>
            
             <remarks>
               Each reader of events is presented with an independent iterator; if there are multiple readers, each receive their own copy of an event to
               process, rather than competing for them.
             </remarks>
            
             <seealso cref="M:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient.ReadEventsFromPartitionAsync(System.String,Azure.Messaging.EventHubs.Consumer.EventPosition,System.Threading.CancellationToken)"/>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient.ReadEventsAsync(System.Threading.CancellationToken)">
             <summary>
               Reads events from all partitions of the event hub as an asynchronous enumerable, allowing events to be iterated as they
               become available on the partition, waiting as necessary should there be no events available.
            
               This enumerator may block for an indeterminate amount of time for an <c>await</c> if events are not available on the partition, requiring
               cancellation via the <paramref name="cancellationToken"/> to be requested in order to return control.  It is recommended to set the
               <see cref="P:Azure.Messaging.EventHubs.Consumer.ReadEventOptions.MaximumWaitTime" /> for scenarios where a more deterministic maximum waiting period is desired.
             </summary>
            
             <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken"/> instance to signal the request to cancel the operation.</param>
            
             <returns>An <see cref="T:System.Collections.Generic.IAsyncEnumerable`1"/> to be used for iterating over events in the partition.</returns>
            
             <remarks>
               This method is not recommended for production use; the <c>EventProcessorClient</c> should be used for reading events from all partitions in a
               production scenario, as it offers a much more robust experience with higher throughput.
            
               It is important to note that this method does not guarantee fairness amongst the partitions during iteration; each of the partitions competes to publish
               events to be read by the enumerator.  Depending on service communication, there may be a clustering of events per partition and/or there may be a noticeable
               bias for a given partition or subset of partitions.
            
               Each reader of events is presented with an independent iterator; if there are multiple readers, each receive their own copy of an event to
               process, rather than competing for them.
             </remarks>
            
             <seealso href="https://www.nuget.org/packages/Azure.Messaging.EventHubs.Processor" />
             <seealso cref="M:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient.ReadEventsAsync(Azure.Messaging.EventHubs.Consumer.ReadEventOptions,System.Threading.CancellationToken)"/>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient.ReadEventsAsync(Azure.Messaging.EventHubs.Consumer.ReadEventOptions,System.Threading.CancellationToken)">
             <summary>
               Reads events from all partitions of the event hub as an asynchronous enumerable, allowing events to be iterated as they
               become available on the partition, waiting as necessary should there be no events available.
            
               This enumerator may block for an indeterminate amount of time for an <c>await</c> if events are not available on the partition, requiring
               cancellation via the <paramref name="cancellationToken"/> to be requested in order to return control.  It is recommended to set the
               <see cref="P:Azure.Messaging.EventHubs.Consumer.ReadEventOptions.MaximumWaitTime" /> for scenarios where a more deterministic maximum waiting period is desired.
             </summary>
            
             <param name="readOptions">The set of options to use for configuring read behavior; if not specified the defaults will be used.</param>
             <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken"/> instance to signal the request to cancel the operation.</param>
            
             <returns>An <see cref="T:System.Collections.Generic.IAsyncEnumerable`1"/> to be used for iterating over events in the partition.</returns>
            
             <remarks>
               This method is not recommended for production use; the <c>EventProcessorClient</c> should be used for reading events from all partitions in a
               production scenario, as it offers a much more robust experience with higher throughput.
            
               It is important to note that this method does not guarantee fairness amongst the partitions during iteration; each of the partitions competes to publish
               events to be read by the enumerator.  Depending on service communication, there may be a clustering of events per partition and/or there may be a noticeable
               bias for a given partition or subset of partitions.
            
               Each reader of events is presented with an independent iterator; if there are multiple readers, each receive their own copy of an event to
               process, rather than competing for them.
             </remarks>
            
             <seealso href="https://www.nuget.org/packages/Azure.Messaging.EventHubs.Processor" />
             <seealso cref="M:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient.ReadEventsAsync(System.Threading.CancellationToken)"/>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient.ReadEventsAsync(System.Boolean,Azure.Messaging.EventHubs.Consumer.ReadEventOptions,System.Threading.CancellationToken)">
             <summary>
               Reads events from all partitions of the event hub as an asynchronous enumerable, allowing events to be iterated as they
               become available on the partition, waiting as necessary should there be no events available.
            
               This enumerator may block for an indeterminate amount of time for an <c>await</c> if events are not available on the partition, requiring
               cancellation via the <paramref name="cancellationToken"/> to be requested in order to return control.  It is recommended to set the
               <see cref="P:Azure.Messaging.EventHubs.Consumer.ReadEventOptions.MaximumWaitTime" /> for scenarios where a more deterministic maximum waiting period is desired.
             </summary>
            
             <param name="startReadingAtEarliestEvent"><c>true</c> to begin reading at the first events available in each partition; otherwise, reading will begin at the end of each partition seeing only new events as they are published.</param>
             <param name="readOptions">The set of options to use for configuring read behavior; if not specified the defaults will be used.</param>
             <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken"/> instance to signal the request to cancel the operation.</param>
            
             <returns>An <see cref="T:System.Collections.Generic.IAsyncEnumerable`1"/> to be used for iterating over events in the partition.</returns>
            
             <remarks>
               This method is not recommended for production use; the <c>EventProcessorClient</c> should be used for reading events from all partitions in a
               production scenario, as it offers a much more robust experience with higher throughput.
            
               It is important to note that this method does not guarantee fairness amongst the partitions during iteration; each of the partitions competes to publish
               events to be read by the enumerator.  Depending on service communication, there may be a clustering of events per partition and/or there may be a noticeable
               bias for a given partition or subset of partitions.
            
               Each reader of events is presented with an independent iterator; if there are multiple readers, each receive their own copy of an event to
               process, rather than competing for them.
             </remarks>
            
             <seealso href="https://www.nuget.org/packages/Azure.Messaging.EventHubs.Processor" />
             <seealso cref="M:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient.ReadEventsAsync(System.Threading.CancellationToken)"/>
             <seealso cref="M:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient.ReadEventsAsync(Azure.Messaging.EventHubs.Consumer.ReadEventOptions,System.Threading.CancellationToken)"/>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient.CloseAsync(System.Threading.CancellationToken)">
             <summary>
               Closes the consumer.
             </summary>
            
             <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken"/> instance to signal the request to cancel the operation.</param>
            
             <returns>A task to be resolved on when the operation has completed.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient.DisposeAsync">
             <summary>
               Performs the task needed to clean up resources used by the <see cref="T:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient" />,
               including ensuring that the client itself has been closed.
             </summary>
            
             <returns>A task to be resolved on when the operation has completed.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient.Equals(System.Object)">
             <summary>
               Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
             </summary>
            
             <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            
             <returns><c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient.GetHashCode">
             <summary>
               Returns a hash code for this instance.
             </summary>
            
             <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient.ToString">
             <summary>
               Converts the instance to string representation.
             </summary>
            
             <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient.PublishPartitionEventsToChannelAsync(System.String,Azure.Messaging.EventHubs.Consumer.EventPosition,System.Boolean,System.Nullable{System.Int64},System.Threading.Channels.Channel{Azure.Messaging.EventHubs.Consumer.PartitionEvent},System.Threading.CancellationTokenSource)">
             <summary>
               Publishes events for the requested <paramref name="partitionId"/> to the provided
               <paramref name="channel" /> in the background, using a dedicated transport consumer
               instance.
             </summary>
            
             <param name="partitionId">The identifier of the partition from which events should be read.</param>
             <param name="startingPosition">The position within the partition's event stream that reading should begin from.</param>
             <param name="trackLastEnqueuedEventProperties">Indicates whether information on the last enqueued event on the partition is sent as events are received.</param>
             <param name="ownerLevel">The relative priority to associate with the link; for a non-exclusive link, this value should be <c>null</c>.</param>
             <param name="channel">The channel to which events should be published.</param>
             <param name="publishingCancellationSource">A cancellation source which can be used for signaling publication to stop.</param>
            
             <returns>A function to invoke when publishing should stop; once complete, background publishing is no longer taking place and the <paramref name="channel"/> has been marked as final.</returns>
            
             <remarks>
               This method assumes co-ownership of the <paramref name="channel" />, marking its writer as completed
               when publishing is complete or when an exception is encountered.
             </remarks>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient.StartBackgroundChannelPublishingAsync(Azure.Messaging.EventHubs.Core.TransportConsumer,System.Threading.Channels.Channel{Azure.Messaging.EventHubs.Consumer.PartitionEvent},Azure.Messaging.EventHubs.Consumer.PartitionContext,System.Action{System.Exception},System.Threading.CancellationToken)">
             <summary>
               Begins the background process responsible for receiving from the specified <see cref="T:Azure.Messaging.EventHubs.Core.TransportConsumer" />
               and publishing to the requested <see cref="T:System.Threading.Channels.Channel`1" />.
             </summary>
            
             <param name="transportConsumer">The consumer to use for receiving events.</param>
             <param name="channel">The channel to which received events should be published.</param>
             <param name="partitionContext">The context that represents the partition from which events being received.</param>
             <param name="notifyException">An action to be invoked when an exception is encountered during publishing.</param>
             <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> to signal the request to cancel the background publishing.</param>
            
             <returns>A task to be resolved on when the operation has completed.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient.CreateEventChannel(System.Int32)">
             <summary>
               Creates a channel for publishing events to local subscribers.
             </summary>
            
             <param name="capacity">The maximum amount of events that can be queued in the channel.</param>
            
             <returns>A bounded channel, configured for 1:many read/write usage.</returns>
            
        </member>
        <member name="T:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClientOptions">
             <summary>
               The baseline set of options that can be specified when creating a <see cref="T:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient" />
               to configure its behavior.
             </summary>
            
        </member>
        <member name="F:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClientOptions._connectionOptions">
            <summary>The set of options to use for configuring the connection to the Event Hubs service.</summary>
        </member>
        <member name="F:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClientOptions._retryOptions">
            <summary>The set of options to govern retry behavior and try timeouts.</summary>
        </member>
        <member name="P:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClientOptions.ConnectionOptions">
             <summary>
               Gets or sets the options used for configuring the connection to the Event Hubs service.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClientOptions.RetryOptions">
             <summary>
               The set of options to use for determining whether a failed operation should be retried and,
               if so, the amount of time to wait between retry attempts.  These options also control the
               amount of time allowed for publishing events and other interactions with the Event Hubs service.
             </summary>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClientOptions.Equals(System.Object)">
             <summary>
               Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
             </summary>
            
             <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            
             <returns><c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClientOptions.GetHashCode">
             <summary>
               Returns a hash code for this instance.
             </summary>
            
             <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClientOptions.ToString">
             <summary>
               Converts the instance to string representation.
             </summary>
            
             <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClientOptions.Clone">
             <summary>
               Creates a new copy of the current <see cref="T:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClientOptions" />, cloning its attributes into a new instance.
             </summary>
            
             <returns>A new copy of <see cref="T:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClientOptions" />.</returns>
            
        </member>
        <member name="T:Azure.Messaging.EventHubs.Consumer.EventPosition">
             <summary>
               The position of events in an Event Hub partition, typically used in the creation of
               an <see cref="T:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient" />.
             </summary>
            
        </member>
        <member name="F:Azure.Messaging.EventHubs.Consumer.EventPosition.StartOfStreamOffset">
            <summary>The token that represents the beginning event in the stream of a partition.</summary>
        </member>
        <member name="F:Azure.Messaging.EventHubs.Consumer.EventPosition.EndOfStreamOffset">
            <summary>The token that represents the last event in the stream of a partition.</summary>
        </member>
        <member name="P:Azure.Messaging.EventHubs.Consumer.EventPosition.Earliest">
             <summary>
               Corresponds to the location of the first event present in the partition.  Use this
               position to begin receiving from the first event that was enqueued in the partition
               which has not expired due to the retention policy.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Consumer.EventPosition.Latest">
             <summary>
               Corresponds to the end of the partition, where no more events are currently enqueued.  Use this
               position to begin receiving from the next event to be enqueued in the partition after an <see cref="T:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient"/>
               is created with this position.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Consumer.EventPosition.Offset">
             <summary>
               The offset of the event identified by this position.
             </summary>
            
             <value>Expected to be <c>null</c> if the event position represents a sequence number or enqueue time.</value>
            
             <remarks>
               The offset is the relative position for event in the context of the stream.  The offset
               should not be considered a stable value, as the same offset may refer to a different event
               as events reach the age limit for retention and are no longer visible within the stream.
             </remarks>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Consumer.EventPosition.IsInclusive">
             <summary>
               Indicates if the specified offset is inclusive of the event which it identifies.  This
               information is only relevant if the event position was identified by an offset or sequence number.
             </summary>
            
             <value><c>true</c> if the offset is inclusive; otherwise, <c>false</c>.</value>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Consumer.EventPosition.EnqueuedTime">
             <summary>
               The enqueue time of the event identified by this position.
             </summary>
            
             <value>Expected to be <c>null</c> if the event position represents an offset or sequence number.</value>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Consumer.EventPosition.SequenceNumber">
             <summary>
               The sequence number of the event identified by this position.
             </summary>
            
             <value>Expected to be <c>null</c> if the event position represents an offset or enqueue time.</value>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Consumer.EventPosition.FromOffset(System.Int64,System.Boolean)">
             <summary>
               Corresponds to the event in the partition at the provided offset, inclusive of that event.
             </summary>
            
             <param name="offset">The offset of an event with respect to its relative position in the partition.</param>
             <param name="isInclusive">If true, the event with the <paramref name="offset"/> is included; otherwise the next event in sequence will be received.</param>
            
             <returns>The position of the specified event.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Consumer.EventPosition.FromSequenceNumber(System.Int64,System.Boolean)">
             <summary>
               Corresponds to the event in the partition having a specified sequence number associated with it.
             </summary>
            
             <param name="sequenceNumber">The sequence number assigned to an event when it was enqueued in the partition.</param>
             <param name="isInclusive">If true, the event with the <paramref name="sequenceNumber"/> is included; otherwise the next event in sequence will be received.</param>
            
             <returns>The position of the specified event.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Consumer.EventPosition.FromEnqueuedTime(System.DateTimeOffset)">
             <summary>
               Corresponds to a specific date and time within the partition to begin seeking an event; the event enqueued after the
               requested <paramref name="enqueuedTime" /> will become the current position.
             </summary>
            
             <param name="enqueuedTime">The date and time, in UTC, from which the next available event should be chosen.</param>
            
             <returns>The position of the specified event.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Consumer.EventPosition.Equals(Azure.Messaging.EventHubs.Consumer.EventPosition)">
             <summary>
               Determines whether the specified <see cref="T:Azure.Messaging.EventHubs.Consumer.EventPosition" /> is equal to this instance.
             </summary>
            
             <param name="other">The <see cref="T:Azure.Messaging.EventHubs.Consumer.EventPosition" /> to compare with this instance.</param>
            
             <returns><c>true</c> if the specified <see cref="T:Azure.Messaging.EventHubs.Consumer.EventPosition" /> is equal to this instance; otherwise, <c>false</c>.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Consumer.EventPosition.Equals(System.Object)">
             <summary>
               Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
             </summary>
            
             <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            
             <returns><c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Consumer.EventPosition.GetHashCode">
             <summary>
               Returns a hash code for this instance.
             </summary>
            
             <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Consumer.EventPosition.ToString">
             <summary>
               Converts the instance to string representation.
             </summary>
            
             <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Consumer.EventPosition.FromOffset(System.String,System.Boolean)">
             <summary>
               Corresponds to the event in the partition at the provided offset.
             </summary>
            
             <param name="offset">The offset of an event with respect to its relative position in the partition.</param>
             <param name="isInclusive">If true, the event at the <paramref name="offset"/> is included; otherwise the next event in sequence will be received.</param>
            
             <returns>The position of the specified event.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Consumer.EventPosition.op_Equality(Azure.Messaging.EventHubs.Consumer.EventPosition,Azure.Messaging.EventHubs.Consumer.EventPosition)">
             <summary>
               Determines whether the specified <see cref="T:Azure.Messaging.EventHubs.Consumer.EventPosition" /> instances are equal to each other.
             </summary>
            
             <param name="first">The first <see cref="T:Azure.Messaging.EventHubs.Consumer.EventPosition" /> to consider.</param>
             <param name="second">The second <see cref="T:Azure.Messaging.EventHubs.Consumer.EventPosition" /> to consider.</param>
            
             <returns><c>true</c> if the two specified <see cref="T:Azure.Messaging.EventHubs.Consumer.EventPosition" /> instances are equal; otherwise, <c>false</c>.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Consumer.EventPosition.op_Inequality(Azure.Messaging.EventHubs.Consumer.EventPosition,Azure.Messaging.EventHubs.Consumer.EventPosition)">
             <summary>
               Determines whether the specified <see cref="T:Azure.Messaging.EventHubs.Consumer.EventPosition" /> instances are not equal to each other.
             </summary>
            
             <param name="first">The first <see cref="T:Azure.Messaging.EventHubs.Consumer.EventPosition" /> to consider.</param>
             <param name="second">The second <see cref="T:Azure.Messaging.EventHubs.Consumer.EventPosition" /> to consider.</param>
            
             <returns><c>true</c> if the two specified <see cref="T:Azure.Messaging.EventHubs.Consumer.EventPosition" /> instances are not equal; otherwise, <c>false</c>.</returns>
            
        </member>
        <member name="T:Azure.Messaging.EventHubs.Consumer.LastEnqueuedEventProperties">
             <summary>
               A set of information about the enqueued state of a partition, as observed by the consumer.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Consumer.LastEnqueuedEventProperties.SequenceNumber">
             <summary>
               The sequence number of the last observed event to be enqueued in the partition.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Consumer.LastEnqueuedEventProperties.Offset">
             <summary>
               The offset of the last observed event to be enqueued in the partition.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Consumer.LastEnqueuedEventProperties.EnqueuedTime">
             <summary>
               The date and time, in UTC, that the last observed event was enqueued in the partition.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Consumer.LastEnqueuedEventProperties.LastReceivedTime">
             <summary>
               The date and time, in UTC, that the information about the last enqueued event was received.
             </summary>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Consumer.LastEnqueuedEventProperties.#ctor(System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})">
             <summary>
               Initializes a new instance of the <see cref="T:Azure.Messaging.EventHubs.Consumer.LastEnqueuedEventProperties"/> class.
             </summary>
            
             <param name="lastSequenceNumber">The sequence number observed the last event to be enqueued in the partition.</param>
             <param name="lastOffset">The offset of the last event to be enqueued in the partition.</param>
             <param name="lastEnqueuedTime">The date and time, in UTC, that the last event was enqueued in the partition.</param>
             <param name="lastReceivedTime">The date and time, in UTC, that the information was last received.</param>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Consumer.LastEnqueuedEventProperties.#ctor(Azure.Messaging.EventHubs.EventData)">
             <summary>
               Initializes a new instance of the <see cref="T:Azure.Messaging.EventHubs.Consumer.LastEnqueuedEventProperties"/> class.
             </summary>
            
             <param name="sourceEvent">The event to use as the source for the partition information.</param>
            
        </member>
        <member name="T:Azure.Messaging.EventHubs.Consumer.PartitionContext">
             <summary>
               Represents an Event Hub partition and its relative state, as scoped to an associated
               operation performed against it.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Consumer.PartitionContext.PartitionId">
             <summary>
               The identifier of the Event Hub partition this context is associated with.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Consumer.PartitionContext.SourceConsumer">
             <summary>
               The <see cref="T:Azure.Messaging.EventHubs.Core.TransportConsumer" /> for this context to use as the source for information.
             </summary>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Consumer.PartitionContext.ReadLastEnqueuedEventProperties">
             <summary>
               A set of information about the last enqueued event of a partition, as observed by the associated EventHubs client
               associated with this context as events are received from the Event Hubs service.  This is only available if the consumer was
               created with <see cref="P:Azure.Messaging.EventHubs.Consumer.ReadEventOptions.TrackLastEnqueuedEventProperties" /> set.
             </summary>
            
             <returns>The set of properties for the last event that was enqueued to the partition.</returns>
            
             <remarks>
               When information about the partition's last enqueued event is being tracked, each event received from the Event Hubs
               service will carry metadata about the partition that it otherwise would not. This results in a small amount of
               additional network bandwidth consumption that is generally a favorable trade-off when considered
               against periodically making requests for partition properties using an Event Hub client.
             </remarks>
            
             <exception cref="T:Azure.Messaging.EventHubs.EventHubsException">Occurs when the Event Hubs client needed to read this information is no longer available.</exception>
             <exception cref="T:System.InvalidOperationException">Occurs when this method is invoked without <see cref="P:Azure.Messaging.EventHubs.Consumer.ReadEventOptions.TrackLastEnqueuedEventProperties" /> set.</exception>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Consumer.PartitionContext.#ctor(System.String,Azure.Messaging.EventHubs.Core.TransportConsumer)">
             <summary>
               Initializes a new instance of the <see cref="T:Azure.Messaging.EventHubs.Consumer.PartitionContext"/> class.
             </summary>
            
             <param name="partitionId">The identifier of the Event Hub partition this context is associated with.</param>
             <param name="consumer">The <see cref="T:Azure.Messaging.EventHubs.Core.TransportConsumer" /> for this context to use as the source for information.</param>
            
             <remarks>
               The <paramref name="consumer" />, if provided, will be held in a weak reference to ensure that it
               does not impact resource use should the partition context be held beyond the lifespan of the
               consumer instance.
             </remarks>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Consumer.PartitionContext.#ctor(System.String)">
             <summary>
               Initializes a new instance of the <see cref="T:Azure.Messaging.EventHubs.Consumer.PartitionContext"/> class.
             </summary>
            
             <param name="partitionId">The identifier of the Event Hub partition this context is associated with.</param>
            
        </member>
        <member name="T:Azure.Messaging.EventHubs.Consumer.PartitionEvent">
             <summary>
               Contains information about a partition that has attempted to receive an event from the Azure Event Hub
               service, as well as the received event, if any.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Consumer.PartitionEvent.Partition">
             <summary>
               The Event Hub partition that the <see cref="P:Azure.Messaging.EventHubs.Consumer.PartitionEvent.Data" /> is associated with.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Consumer.PartitionEvent.Data">
             <summary>
               An event that was read from the associated <see cref="P:Azure.Messaging.EventHubs.Consumer.PartitionEvent.Partition" />.
             </summary>
            
             <value>
               The <see cref="T:Azure.Messaging.EventHubs.EventData" /> read from the Event Hub partition, if data was available.
               If a maximum wait time was specified when reading events and no event was available in that
               time period, <c>null</c>.
             </value>
            
             <remarks>
               Ownership of this data, including the memory that holds its <see cref="P:Azure.Messaging.EventHubs.EventData.Body" />,
               is assumed to transfer to consumers of the <see cref="T:Azure.Messaging.EventHubs.Consumer.PartitionEvent" />.  It may be considered
               immutable and is safe to access so long as the reference is held.
             </remarks>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Consumer.PartitionEvent.#ctor(Azure.Messaging.EventHubs.Consumer.PartitionContext,Azure.Messaging.EventHubs.EventData)">
             <summary>
               Initializes a new instance of the <see cref="T:Azure.Messaging.EventHubs.Consumer.PartitionEvent"/> structure.
             </summary>
            
             <param name="partition">The Event Hub partition that the <paramref name="data" /> is associated with.</param>
             <param name="data">The event that was read, if events were available; otherwise, <c>null</c>.</param>
            
        </member>
        <member name="T:Azure.Messaging.EventHubs.Consumer.ReadEventOptions">
             <summary>
               The set of options that can be specified to configure behavior when reading events from an
               <see cref="T:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient" />.
             </summary>
            
        </member>
        <member name="F:Azure.Messaging.EventHubs.Consumer.ReadEventOptions._maximumWaitTime">
            <summary>The maximum amount of time to wait to for an event to be available before emitting an empty item; if <c>null</c>, empty items will not be emitted.</summary>
        </member>
        <member name="P:Azure.Messaging.EventHubs.Consumer.ReadEventOptions.OwnerLevel">
             <summary>
               When populated, the owner level indicates that a reading is intended to be performed exclusively for events in the
               requested partition and an for the associated consumer group.  To do so, reading will attempt to assert ownership
               over the partition; in the case where more than one exclusive reader attempts to assert ownership for the same
               partition/consumer group pair, the one having a larger <see cref="P:Azure.Messaging.EventHubs.Consumer.ReadEventOptions.OwnerLevel"/> value will "win."
            
               When an exclusive reader is used, other readers which are non-exclusive or which have a lower owner level will either
               not be allowed to be created, if they already exist, will encounter an exception during the next attempted operation.
             </summary>
            
             <value>The relative priority to associate with an exclusive reader; for a non-exclusive reader, this value should be <c>null</c>.</value>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Consumer.ReadEventOptions.TrackLastEnqueuedEventProperties">
             <summary>
               Indicates whether or not the reader should request information on the last enqueued event on the partition
               associated with a given event, and track that information as events are read.
             </summary>
            
             <value><c>true</c> if information about a partition's last event should be requested and tracked; otherwise, <c>false</c>.</value>
            
             <remarks>
               When information about a partition's last enqueued event is being tracked, each event received from the Event Hubs
               service will carry metadata about the partition that it otherwise would not. This results in a small amount of
               additional network bandwidth consumption that is generally a favorable trade-off when considered
               against periodically making requests for partition properties using one of the Event Hub clients.
             </remarks>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Consumer.ReadEventOptions.MaximumWaitTime">
             <summary>
               The maximum amount of time to wait to for an event to be available when reading before reading an empty
               event.
             </summary>
            
             <value>
               If specified, should there be no events available before this waiting period expires, an empty event will be returned,
               allowing control to return to the reader that was waiting.
            
               If <c>null</c>, the reader will wait forever for items to be available unless reading is canceled. Empty items will
               not be returned.
             </value>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Consumer.ReadEventOptions.Equals(System.Object)">
             <summary>
               Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
             </summary>
            
             <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            
             <returns><c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Consumer.ReadEventOptions.GetHashCode">
             <summary>
               Returns a hash code for this instance.
             </summary>
            
             <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Consumer.ReadEventOptions.ToString">
             <summary>
               Converts the instance to string representation.
             </summary>
            
             <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Consumer.ReadEventOptions.Clone">
             <summary>
               Creates a new copy of the current <see cref="T:Azure.Messaging.EventHubs.Consumer.ReadEventOptions" />, cloning its attributes into a new instance.
             </summary>
            
             <returns>A new copy of <see cref="T:Azure.Messaging.EventHubs.Consumer.ReadEventOptions" />.</returns>
            
        </member>
        <member name="T:Azure.Messaging.EventHubs.Core.ChannelReaderExtensions">
             <summary>
               The set of extensions for the <see cref="T:System.Threading.Channels.ChannelReader`1" />
               class.
             </summary>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Core.ChannelReaderExtensions.EnumerateChannel``1(System.Threading.Channels.ChannelReader{``0},System.Nullable{System.TimeSpan},System.Threading.CancellationToken)">
             <summary>
               Enumerates the events as they become available in the associated channel.
             </summary>
            
             <typeparam name="T">The type of data contained in the channel.</typeparam>
            
             <param name="reader">The <see cref="T:System.Threading.Channels.ChannelReader`1" /> instance that this method was invoked on, and from which events are to be sourced.</param>
             <param name="maximumWaitTime">The maximum amount of time to wait to for an event to be available before emitting an empty item; if <c>null</c>, empty items will not be emitted.</param>
             <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> instance to signal the request to cancel enumeration.</param>
            
             <returns>An asynchronous enumerator that can be used to iterate over events as they are available.</returns>
            
        </member>
        <member name="T:Azure.Messaging.EventHubs.Core.ClientLibraryInformation">
             <summary>
               The set of information describing the active version of the
               client library.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Core.ClientLibraryInformation.Current">
             <summary>
               The current set of information.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Core.ClientLibraryInformation.Product">
             <summary>
               The name of the client library product.
              </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Core.ClientLibraryInformation.Version">
             <summary>
               The version of the client library.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Core.ClientLibraryInformation.Framework">
             <summary>
               The version of the framework on which the client library was
               built.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Core.ClientLibraryInformation.Platform">
             <summary>
              The name of the platform on which the client library is currently running.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Core.ClientLibraryInformation.UserAgent">
             <summary>
              The client library information, formatted in the standard form used by SDK
              user agents when interacting with Azure services.
             </summary>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Core.ClientLibraryInformation.#ctor">
             <summary>
               Prevents a default instance of the <see cref="T:Azure.Messaging.EventHubs.Core.ClientLibraryInformation"/> class from being created.
             </summary>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Core.ClientLibraryInformation.EnumerateProperties">
             <summary>
               Enumerates the client library properties, normalizing the property names.
             </summary>
            
             <returns>An enumerable set of the properties, with name and value.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Core.ClientLibraryInformation.GetTelemetryName(System.Reflection.PropertyInfo)">
             <summary>
               Gets the name of the property, as it should appear in telemetry
               information.
             </summary>
            
             <param name="property">The property to consider.</param>
            
             <returns>The name of the property for use as telemetry for the client library.</returns>
            
        </member>
        <member name="T:Azure.Messaging.EventHubs.Core.TransportClient">
             <summary>
               Provides an abstraction for generalizing an Event Hub client so that a dedicated instance may provide operations
               for a specific transport, such as AMQP or JMS.  It is intended that the public <see cref="T:Azure.Messaging.EventHubs.EventHubConnection" /> employ
               a transport client via containment and delegate operations to it rather than understanding protocol-specific details
               for different transports.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Core.TransportClient.IsClosed">
             <summary>
               Indicates whether or not this client has been closed.
               </summary>
            
             <value>
               <c>true</c> if the client is closed; otherwise, <c>false</c>.
             </value>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Core.TransportClient.ServiceEndpoint">
             <summary>
               The endpoint for the Event Hubs service to which the client is associated.
             </summary>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Core.TransportClient.GetPropertiesAsync(Azure.Messaging.EventHubs.EventHubsRetryPolicy,System.Threading.CancellationToken)">
             <summary>
               Retrieves information about an Event Hub, including the number of partitions present
               and their identifiers.
             </summary>
            
             <param name="retryPolicy">The retry policy to use as the basis for retrieving the information.</param>
             <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken"/> instance to signal the request to cancel the operation.</param>
            
             <returns>The set of information for the Event Hub that this client is associated with.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Core.TransportClient.GetPartitionPropertiesAsync(System.String,Azure.Messaging.EventHubs.EventHubsRetryPolicy,System.Threading.CancellationToken)">
             <summary>
               Retrieves information about a specific partition for an Event Hub, including elements that describe the available
               events in the partition event stream.
             </summary>
            
             <param name="partitionId">The unique identifier of a partition associated with the Event Hub.</param>
             <param name="retryPolicy">The retry policy to use as the basis for retrieving the information.</param>
             <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken"/> instance to signal the request to cancel the operation.</param>
            
             <returns>The set of information for the requested partition under the Event Hub this client is associated with.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Core.TransportClient.CreateProducer(System.String,Azure.Messaging.EventHubs.EventHubsRetryPolicy)">
             <summary>
               Creates a producer strongly aligned with the active protocol and transport,
               responsible for publishing <see cref="T:Azure.Messaging.EventHubs.EventData" /> to the Event Hub.
             </summary>
            
             <param name="partitionId">The identifier of the partition to which the transport producer should be bound; if <c>null</c>, the producer is unbound.</param>
             <param name="retryPolicy">The policy which governs retry behavior and try timeouts.</param>
            
             <returns>A <see cref="T:Azure.Messaging.EventHubs.Core.TransportProducer"/> configured in the requested manner.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Core.TransportClient.CreateConsumer(System.String,System.String,Azure.Messaging.EventHubs.Consumer.EventPosition,Azure.Messaging.EventHubs.EventHubsRetryPolicy,System.Boolean,System.Nullable{System.Int64},System.Nullable{System.UInt32})">
             <summary>
               Creates a consumer strongly aligned with the active protocol and transport, responsible
               for reading <see cref="T:Azure.Messaging.EventHubs.EventData" /> from a specific Event Hub partition, in the context
               of a specific consumer group.
            
               A consumer may be exclusive, which asserts ownership over the partition for the consumer
               group to ensure that only one consumer from that group is reading the from the partition.
               These exclusive consumers are sometimes referred to as "Epoch Consumers."
            
               A consumer may also be non-exclusive, allowing multiple consumers from the same consumer
               group to be actively reading events from the partition.  These non-exclusive consumers are
               sometimes referred to as "Non-epoch Consumers."
            
               Designating a consumer as exclusive may be specified by setting the <paramref name="ownerLevel" />.
               When <c>null</c>, consumers are created as non-exclusive.
             </summary>
            
             <param name="consumerGroup">The name of the consumer group this consumer is associated with.  Events are read in the context of this group.</param>
             <param name="partitionId">The identifier of the Event Hub partition from which events will be received.</param>
             <param name="eventPosition">The position within the partition where the consumer should begin reading events.</param>
             <param name="retryPolicy">The policy which governs retry behavior and try timeouts.</param>
             <param name="trackLastEnqueuedEventProperties">Indicates whether information on the last enqueued event on the partition is sent as events are received.</param>
             <param name="ownerLevel">The relative priority to associate with the link; for a non-exclusive link, this value should be <c>null</c>.</param>
             <param name="prefetchCount">Controls the number of events received and queued locally without regard to whether an operation was requested.  If <c>null</c> a default will be used.</param>
            
             <returns>A <see cref="T:Azure.Messaging.EventHubs.Core.TransportConsumer" /> configured in the requested manner.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Core.TransportClient.CloseAsync(System.Threading.CancellationToken)">
             <summary>
               Closes the connection to the transport client instance.
             </summary>
            
             <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken"/> instance to signal the request to cancel the operation.</param>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Core.TransportClient.DisposeAsync">
             <summary>
               Performs the task needed to clean up resources used by the client,
               including ensuring that the client itself has been closed.
             </summary>
            
             <returns>A task to be resolved on when the operation has completed.</returns>
            
        </member>
        <member name="T:Azure.Messaging.EventHubs.Core.TransportConsumer">
             <summary>
               Provides an abstraction for generalizing an Event Consumer so that a dedicated instance may provide operations
               for a specific transport, such as AMQP or JMS.  It is intended that the public <see cref="T:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient" /> employ
               a transport consumer via containment and delegate operations to it rather than understanding protocol-specific details
               for different transports.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Core.TransportConsumer.IsClosed">
             <summary>
               Indicates whether or not this consumer has been closed.
             </summary>
            
             <value>
               <c>true</c> if the consumer is closed; otherwise, <c>false</c>.
             </value>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Core.TransportConsumer.LastReceivedEvent">
             <summary>
               The most recent event received from the Event Hubs service by this consumer instance.
             </summary>
            
             <value>
               <c>null</c>, if the tracking of the last enqueued event information was not requested; otherwise,
               the most recently received event.
             </value>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Core.TransportConsumer.ReceiveAsync(System.Int32,System.Nullable{System.TimeSpan},System.Threading.CancellationToken)">
             <summary>
               Receives a batch of <see cref="T:Azure.Messaging.EventHubs.EventData" /> from the Event Hub partition.
             </summary>
            
             <param name="maximumMessageCount">The maximum number of messages to receive in this batch.</param>
             <param name="maximumWaitTime">The maximum amount of time to wait to build up the requested message count for the batch; if not specified, the default wait time specified when the consumer was created will be used.</param>
             <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken"/> instance to signal the request to cancel the operation.</param>
            
             <returns>The batch of <see cref="T:Azure.Messaging.EventHubs.EventData" /> from the Event Hub partition this consumer is associated with.  If no events are present, an empty enumerable is returned.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Core.TransportConsumer.CloseAsync(System.Threading.CancellationToken)">
             <summary>
               Closes the connection to the transport producer instance.
             </summary>
            
             <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken"/> instance to signal the request to cancel the operation.</param>
            
        </member>
        <member name="T:Azure.Messaging.EventHubs.Core.TransportEventBatch">
             <summary>
               Provides an abstraction for generalizing a batch of events so that a dedicated instance may provide operations
               for a specific transport, such as AMQP or JMS.  It is intended that the public <see cref="T:Azure.Messaging.EventHubs.Producer.EventDataBatch" /> employ
               a transport batch via containment and delegate operations to it rather than understanding protocol-specific details
               for different transports.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Core.TransportEventBatch.MaximumSizeInBytes">
             <summary>
               The maximum size allowed for the batch, in bytes.  This includes the events in the batch as
               well as any overhead for the batch itself when sent to the Event Hubs service.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Core.TransportEventBatch.SizeInBytes">
             <summary>
               The size of the batch, in bytes, as it will be sent to the Event Hubs
               service.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Core.TransportEventBatch.Count">
             <summary>
               The count of events contained in the batch.
             </summary>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Core.TransportEventBatch.TryAdd(Azure.Messaging.EventHubs.EventData)">
             <summary>
               Attempts to add an event to the batch, ensuring that the size
               of the batch does not exceed its maximum.
             </summary>
            
             <param name="eventData">The event to attempt to add to the batch.</param>
            
             <returns><c>true</c> if the event was added; otherwise, <c>false</c>.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Core.TransportEventBatch.AsEnumerable``1">
             <summary>
               Represents the batch as an enumerable set of transport-specific
               representations of an event.
             </summary>
            
             <typeparam name="T">The transport-specific event representation being requested.</typeparam>
            
             <returns>The set of events as an enumerable of the requested type.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Core.TransportEventBatch.Dispose">
             <summary>
               Performs the task needed to clean up resources used by the <see cref="T:Azure.Messaging.EventHubs.Core.TransportEventBatch" />.
             </summary>
            
        </member>
        <member name="T:Azure.Messaging.EventHubs.Core.TransportProducer">
             <summary>
               Provides an abstraction for generalizing an Event Hub Producer so that a dedicated instance may provide operations
               for a specific transport, such as AMQP or JMS.  It is intended that the public <see cref="T:Azure.Messaging.EventHubs.Producer.EventHubProducerClient" /> employ
               a transport producer via containment and delegate operations to it rather than understanding protocol-specific details
               for different transports.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Core.TransportProducer.IsClosed">
             <summary>
               Indicates whether or not this producer has been closed.
             </summary>
            
             <value>
               <c>true</c> if the producer is closed; otherwise, <c>false</c>.
             </value>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Core.TransportProducer.SendAsync(System.Collections.Generic.IEnumerable{Azure.Messaging.EventHubs.EventData},Azure.Messaging.EventHubs.Producer.SendEventOptions,System.Threading.CancellationToken)">
             <summary>
               Sends a set of events to the associated Event Hub using a batched approach.  If the size of events exceed the
               maximum size of a single batch, an exception will be triggered and the send will fail.
             </summary>
            
             <param name="events">The set of event data to send.</param>
             <param name="sendOptions">The set of options to consider when sending this batch.</param>
             <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken"/> instance to signal the request to cancel the operation.</param>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Core.TransportProducer.SendAsync(Azure.Messaging.EventHubs.Producer.EventDataBatch,System.Threading.CancellationToken)">
             <summary>
               Sends a set of events to the associated Event Hub using a batched approach.
             </summary>
            
             <param name="eventBatch">The set of event data to send.</param>
             <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken"/> instance to signal the request to cancel the operation.</param>
            
             <returns>A task to be resolved on when the operation has completed.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Core.TransportProducer.CreateBatchAsync(Azure.Messaging.EventHubs.Producer.CreateBatchOptions,System.Threading.CancellationToken)">
             <summary>
               Creates a size-constraint batch to which <see cref="T:Azure.Messaging.EventHubs.EventData" /> may be added using a try-based pattern.  If an event would
               exceed the maximum allowable size of the batch, the batch will not allow adding the event and signal that scenario using its
               return value.
            
               Because events that would violate the size constraint cannot be added, publishing a batch will not trigger an exception when
               attempting to send the events to the Event Hubs service.
             </summary>
            
             <param name="options">The set of options to consider when creating this batch.</param>
             <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken"/> instance to signal the request to cancel the operation.</param>
            
             <returns>An <see cref="T:Azure.Messaging.EventHubs.Producer.EventDataBatch" /> with the requested <paramref name="options"/>.</returns>
            
             <seealso cref="M:Azure.Messaging.EventHubs.Core.TransportProducer.CreateBatchAsync(Azure.Messaging.EventHubs.Producer.CreateBatchOptions,System.Threading.CancellationToken)" />
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Core.TransportProducer.CloseAsync(System.Threading.CancellationToken)">
             <summary>
               Closes the connection to the transport producer instance.
             </summary>
            
             <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken"/> instance to signal the request to cancel the operation.</param>
            
        </member>
        <member name="T:Azure.Messaging.EventHubs.Core.TransportTypeExtensions">
             <summary>
               The set of extension methods for the <see cref="T:Azure.Messaging.EventHubs.EventHubsTransportType" /> enumeration.
             </summary>
            
        </member>
        <member name="F:Azure.Messaging.EventHubs.Core.TransportTypeExtensions.AmqpUriScheme">
            <summary>The URI scheme used for an AMQP-based connection.</summary>
        </member>
        <member name="M:Azure.Messaging.EventHubs.Core.TransportTypeExtensions.GetUriScheme(Azure.Messaging.EventHubs.EventHubsTransportType)">
             <summary>
               Determines the URI scheme to be used for the given connection type.
             </summary>
            
             <param name="instance">The instance that this method was invoked on.</param>
            
             <returns>The scheme that should be used for the given connection type when forming an associated URI.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Core.TransportTypeExtensions.IsWebSocketTransport(Azure.Messaging.EventHubs.EventHubsTransportType)">
             <summary>
               Determines whether the specified transport makes use of web sockets.
             </summary>
            
             <param name="instance">The instance that this method was invoked on.</param>
            
             <returns><c>true</c> if the transport uses web sockets; otherwise, <c>false</c>.</returns>
            
        </member>
        <member name="T:Azure.Messaging.EventHubs.Core.BasicRetryPolicy">
             <summary>
               The default retry policy for the Event Hubs client library, respecting the
               configuration specified as a set of <see cref="T:Azure.Messaging.EventHubs.EventHubsRetryOptions" />.
             </summary>
            
             <seealso cref="T:Azure.Messaging.EventHubs.EventHubsRetryOptions"/>
            
        </member>
        <member name="F:Azure.Messaging.EventHubs.Core.BasicRetryPolicy.s_randomSeed">
            <summary>The seed to use for initializing random number generated for a given thread-specific instance.</summary>
        </member>
        <member name="F:Azure.Messaging.EventHubs.Core.BasicRetryPolicy.RandomNumberGenerator">
            <summary>The random number generator to use for a specific thread.</summary>
        </member>
        <member name="P:Azure.Messaging.EventHubs.Core.BasicRetryPolicy.Options">
             <summary>
               The set of options responsible for configuring the retry
               behavior.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Core.BasicRetryPolicy.JitterFactor">
             <summary>
               The factor to apply to the base delay for use as a base jitter value.
             </summary>
            
             <value>This factor is used as the basis for random jitter to apply to the calculated retry duration.</value>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Core.BasicRetryPolicy.MinimumThrottleSeconds">
             <summary>
               The minimum number of seconds to increase the calculated retry duration when a
               service signals a request to throttle.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Core.BasicRetryPolicy.MaximumThrottleSeconds">
             <summary>
               The maximum number of seconds to increase the calculated retry duration when a
               service signals a request to throttle.
             </summary>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Core.BasicRetryPolicy.#ctor(Azure.Messaging.EventHubs.EventHubsRetryOptions)">
             <summary>
               Initializes a new instance of the <see cref="T:Azure.Messaging.EventHubs.Core.BasicRetryPolicy"/> class.
             </summary>
            
             <param name="retryOptions">The options which control the retry approach.</param>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Core.BasicRetryPolicy.CalculateTryTimeout(System.Int32)">
             <summary>
               Calculates the amount of time to allow the current attempt for an operation to
               complete before considering it to be timed out.
             </summary>
            
             <param name="attemptCount">The number of total attempts that have been made, including the initial attempt before any retries.</param>
            
             <returns>The amount of time to allow for an operation to complete.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Core.BasicRetryPolicy.CalculateRetryDelay(System.Exception,System.Int32)">
             <summary>
               Calculates the amount of time to wait before another attempt should be made.
             </summary>
            
             <param name="lastException">The last exception that was observed for the operation to be retried.</param>
             <param name="attemptCount">The number of total attempts that have been made, including the initial attempt before any retries.</param>
            
             <returns>The amount of time to delay before retrying the associated operation; if <c>null</c>, then the operation is no longer eligible to be retried.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Core.BasicRetryPolicy.ShouldRetryException(System.Exception)">
             <summary>
               Determines if an exception should be retried.
             </summary>
            
             <param name="exception">The exception to consider.</param>
            
             <returns><c>true</c> to retry the exception; otherwise, <c>false</c>.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Core.BasicRetryPolicy.IsThrottleException(System.Exception)">
             <summary>
               Determines if an exception represents a request to throttle.
             </summary>
            
             <param name="exception">The exception to consider.</param>
            
             <returns><c>true</c> to consider the exception as a throttle request; otherwise, <c>false</c>.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Core.BasicRetryPolicy.CalculateExponentialDelay(System.Int32,System.Double,System.Double,System.Random)">
             <summary>
               Calculates the delay for an exponential back-off.
             </summary>
            
             <param name="attemptCount">The number of total attempts that have been made, including the initial attempt before any retries.</param>
             <param name="baseDelaySeconds">The delay to use as a basis for the exponential back-off, in seconds.</param>
             <param name="baseJitterSeconds">The delay to use as the basis for a random jitter value, in seconds.</param>
             <param name="random">The random number generator to use for the calculation.</param>
            
             <returns>The recommended duration to delay before retrying; this value does not take the maximum delay or eligibility for retry into account.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Core.BasicRetryPolicy.CalculateFixedDelay(System.Double,System.Double,System.Random)">
             <summary>
               Calculates the delay for a fixed back-off.
             </summary>
            
             <param name="baseDelaySeconds">The delay to use as a basis for the fixed back-off, in seconds.</param>
             <param name="baseJitterSeconds">The delay to use as the basis for a random jitter value, in seconds.</param>
             <param name="random">The random number generator to use for the calculation.</param>
            
             <returns>The recommended duration to delay before retrying; this value does not take the maximum delay or eligibility for retry into account.</returns>
            
        </member>
        <member name="T:Azure.Messaging.EventHubs.Core.CancellationTokenExtensions">
             <summary>
               The set of extensions for the <see cref="T:System.Threading.CancellationToken" />
               struct.
             </summary>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Core.CancellationTokenExtensions.ThrowIfCancellationRequested``1(System.Threading.CancellationToken)">
             <summary>
               Throws an exception of the requested type if cancellation has been requested
               of the <paramref name="instance" />.
             </summary>
            
             <typeparam name="T">The type of exception to throw; the type must have a parameterless constructor.</typeparam>
            
             <param name="instance">The instance that this method was invoked on.</param>
            
        </member>
        <member name="T:Azure.Messaging.EventHubs.Core.ConnectionStringParser">
             <summary>
               Allows for parsing Event Hubs connection strings.
             </summary>
            
        </member>
        <member name="F:Azure.Messaging.EventHubs.Core.ConnectionStringParser.TokenValueSeparator">
            <summary>The character used to separate a token and its value in the connection string.</summary>
        </member>
        <member name="F:Azure.Messaging.EventHubs.Core.ConnectionStringParser.TokenValuePairDelimiter">
            <summary>The character used to mark the beginning of a new token/value pair in the connection string.</summary>
        </member>
        <member name="F:Azure.Messaging.EventHubs.Core.ConnectionStringParser.EventHubsEndpointScheme">
            <summary>The formatted protocol used by an Event Hubs endpoint. </summary>
        </member>
        <member name="F:Azure.Messaging.EventHubs.Core.ConnectionStringParser.EndpointToken">
            <summary>The token that identifies the endpoint address for the Event Hubs namespace.</summary>
        </member>
        <member name="F:Azure.Messaging.EventHubs.Core.ConnectionStringParser.EventHubNameToken">
            <summary>The token that identifies the name of a specific Event Hub under the namespace.</summary>
        </member>
        <member name="F:Azure.Messaging.EventHubs.Core.ConnectionStringParser.SharedAccessKeyNameToken">
            <summary>The token that identifies the name of a shared access key.</summary>
        </member>
        <member name="F:Azure.Messaging.EventHubs.Core.ConnectionStringParser.SharedAccessKeyValueToken">
            <summary>The token that identifies the value of a shared access key.</summary>
        </member>
        <member name="M:Azure.Messaging.EventHubs.Core.ConnectionStringParser.Parse(System.String)">
             <summary>
               Parses the specified Event Hubs connection string into its component properties.
             </summary>
            
             <param name="connectionString">The connection string to parse.</param>
            
             <returns>The component properties parsed from the connection string.</returns>
            
             <seealso cref="T:Azure.Messaging.EventHubs.Core.ConnectionStringProperties" />
            
        </member>
        <member name="T:Azure.Messaging.EventHubs.Core.ConnectionStringProperties">
             <summary>
               The set of properties that comprise a connection string from the
               Azure portal.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Core.ConnectionStringProperties.Endpoint">
             <summary>
               The endpoint to be used for connecting to the Event Hubs namespace.
             </summary>
            
             <value>The endpoint address, including protocol, from the connection string.</value>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Core.ConnectionStringProperties.EventHubName">
             <summary>
               The name of the specific Event Hub instance under the associated Event Hubs namespace.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Core.ConnectionStringProperties.SharedAccessKeyName">
             <summary>
               The name of the shared access key, either for the Event Hubs namespace
               or the Event Hub.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Core.ConnectionStringProperties.SharedAccessKey">
             <summary>
               The value of the shared access key, either for the Event Hubs namespace
               or the Event Hub.
             </summary>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Core.ConnectionStringProperties.#ctor(System.Uri,System.String,System.String,System.String)">
             <summary>
               Initializes a new instance of the <see cref="T:Azure.Messaging.EventHubs.Core.ConnectionStringProperties"/> structure.
             </summary>
            
             <param name="endpoint">The endpoint of the Event Hubs namespace.</param>
             <param name="eventHubName">The name of the specific Event Hub under the namespace.</param>
             <param name="sharedAccessKeyName">The name of the shared access key, to use authorization.</param>
             <param name="sharedAccessKey">The shared access key to use for authorization.</param>
            
        </member>
        <member name="T:Azure.Messaging.EventHubs.Core.EventHubConnectionOptionsExtensions">
             <summary>
               The set of extension methods for the <see cref="T:Azure.Messaging.EventHubs.EventHubConnectionOptions" />
               class.
             </summary>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Core.EventHubConnectionOptionsExtensions.Clone(Azure.Messaging.EventHubs.EventHubConnectionOptions)">
             <summary>
               Creates a new copy of the current <see cref="T:Azure.Messaging.EventHubs.EventHubConnectionOptions" />, cloning its attributes into a new instance.
             </summary>
            
             <param name="instance">The instance that this method was invoked on.</param>
            
             <returns>A new copy of <see cref="T:Azure.Messaging.EventHubs.EventHubConnectionOptions" />.</returns>
            
        </member>
        <member name="T:Azure.Messaging.EventHubs.Core.EventHubsRetryOptionsExtensions">
             <summary>
               The set of extension methods for the <see cref="T:Azure.Messaging.EventHubs.EventHubsRetryOptions" />
               class.
             </summary>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Core.EventHubsRetryOptionsExtensions.Clone(Azure.Messaging.EventHubs.EventHubsRetryOptions)">
             <summary>
               Creates a new copy of the current <see cref="T:Azure.Messaging.EventHubs.EventHubsRetryOptions" />, cloning its attributes into a new instance.
             </summary>
            
             <param name="instance">The instance that this method was invoked on.</param>
            
             <returns>A new copy of <see cref="T:Azure.Messaging.EventHubs.EventHubsRetryOptions" />.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Core.EventHubsRetryOptionsExtensions.ToRetryPolicy(Azure.Messaging.EventHubs.EventHubsRetryOptions)">
             <summary>
               Converts the options into a retry policy for use.
             </summary>
            
             <param name="instance">The instance that this method was invoked on.</param>
            
             <returns>The <see cref="T:Azure.Messaging.EventHubs.EventHubsRetryPolicy" /> represented by the options.</returns>
        </member>
        <member name="M:Azure.Messaging.EventHubs.Core.EventHubsRetryOptionsExtensions.IsEquivalentTo(Azure.Messaging.EventHubs.EventHubsRetryOptions,Azure.Messaging.EventHubs.EventHubsRetryOptions)">
             <summary>
               Compares retry options between two instances to determine if the
               instances represent the same set of options.
             </summary>
            
             <param name="instance">The instance that this method was invoked on.</param>
             <param name="other">The other set of retry options to consider.</param>
            
             <returns><c>true</c>, if the two sets of options are structurally equivalent; otherwise, <c>false</c>.</returns>
            
        </member>
        <member name="T:Azure.Messaging.EventHubs.Core.TimeSpanExtensions">
             <summary>
               The set of extensions for the <see cref="T:System.TimeSpan" />
               class.
             </summary>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Core.TimeSpanExtensions.CalculateRemaining(System.TimeSpan,System.TimeSpan)">
             <summary>
               Calculates the duration remaining in a given period, with consideration to
               the amount of time that has already elapsed.
             </summary>
            
             <param name="instance">The instance that this method was invoked on.</param>
             <param name="elapsed">The amount of time that has already elapsed.</param>
            
             <returns>The amount of time remaining in the time period.</returns>
            
        </member>
        <member name="T:Azure.Messaging.EventHubs.Diagnostics.EventHubsEventSource">
             <summary>
               Serves as an ETW event source for logging of information about
               Event Hubs client.
             </summary>
            
             <remarks>
               When defining Start/Stop tasks, it is highly recommended that the
               the StopEvent.Id must be exactly StartEvent.Id + 1.
             </remarks>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Diagnostics.EventHubsEventSource.Log">
             <summary>
               Provides a singleton instance of the event source for callers to
               use for logging.
             </summary>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Diagnostics.EventHubsEventSource.#ctor">
             <summary>
               Prevents an instance of the <see cref="T:Azure.Messaging.EventHubs.Diagnostics.EventHubsEventSource"/> class from being created
               outside the scope of the <see cref="P:Azure.Messaging.EventHubs.Diagnostics.EventHubsEventSource.Log" /> instance.
             </summary>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Diagnostics.EventHubsEventSource.EventHubClientCreateStart(System.String,System.String)">
             <summary>
               Indicates that an <see cref="T:Azure.Messaging.EventHubs.EventHubConnection" /> is being created.
             </summary>
            
             <param name="eventHubsNamespace">The Event Hubs namespace associated with the client.</param>
             <param name="eventHubName">The name of the Event Hub associated with the client.</param>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Diagnostics.EventHubsEventSource.EventHubClientCreateComplete(System.String,System.String)">
             <summary>
               Indicates that an <see cref="T:Azure.Messaging.EventHubs.EventHubConnection" /> was created.
             </summary>
            
             <param name="eventHubsNamespace">The Event Hubs namespace associated with the client.</param>
             <param name="eventHubName">The name of the Event Hub associated with the client.</param>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Diagnostics.EventHubsEventSource.EventPublishStart(System.String,System.String,System.String)">
             <summary>
               Indicates that the publishing of events has started.
             </summary>
            
             <param name="eventHubName">The name of the Event Hub being published to.</param>
             <param name="partitionIdOrKey">The identifier of a partition or the partition hash key used for publishing; identifier or key.</param>
             <param name="eventHash">The hash of the event or set of events being published.</param>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Diagnostics.EventHubsEventSource.EventPublishComplete(System.String,System.String,System.String)">
             <summary>
               Indicates that the publishing of events has completed.
             </summary>
            
             <param name="eventHubName">The name of the Event Hub being published to.</param>
             <param name="partitionIdOrKey">The identifier of a partition or the partition hash key used for publishing; identifier or key.</param>
             <param name="eventHash">The hash of the event or set of events being published.</param>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Diagnostics.EventHubsEventSource.EventPublishError(System.String,System.String,System.String,System.String)">
             <summary>
               Indicates that an exception was encountered while publishing events.
             </summary>
            
             <param name="eventHubName">The name of the Event Hub being published to.</param>
             <param name="partitionIdOrKey">The identifier of a partition or the partition hash key used for publishing; identifier or key.</param>
             <param name="eventHash">The hash of the event or set of events being published.</param>
             <param name="errorMessage">The message for the exception that occurred.</param>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Diagnostics.EventHubsEventSource.EventReceiveStart(System.String,System.String,System.String)">
             <summary>
               Indicates that the receiving of events has started.
             </summary>
            
             <param name="eventHubName">The name of the Event Hub being received from.</param>
             <param name="consumerGroup">The consumer group associated with the receive operation.</param>
             <param name="partitionId">The identifier of the partition events are being received from.</param>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Diagnostics.EventHubsEventSource.EventReceiveComplete(System.String,System.String,System.String,System.Int32)">
             <summary>
               Indicates that the receiving of events has completed.
             </summary>
            
             <param name="eventHubName">The name of the Event Hub being received from.</param>
             <param name="partitionId">The identifier of the partition events are being received from.</param>
             <param name="consumerGroup">The consumer group associated with the receive operation.</param>
             <param name="eventCount">The number of events that were received in the batch.</param>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Diagnostics.EventHubsEventSource.EventReceiveError(System.String,System.String,System.String,System.String)">
             <summary>
               Indicates that an exception was encountered while receiving events.
             </summary>
            
             <param name="eventHubName">The name of the Event Hub being received from.</param>
             <param name="partitionId">The identifier of the partition events are being received from.</param>
             <param name="consumerGroup">The consumer group associated with the receive operation.</param>
             <param name="errorMessage">The message for the exception that occurred.</param>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Diagnostics.EventHubsEventSource.ClientCloseStart(System.Type,System.String,System.String)">
             <summary>
               Indicates that a client is closing, which may correspond to an <see cref="T:Azure.Messaging.EventHubs.EventHubConnection" />,
               <see cref="T:Azure.Messaging.EventHubs.Producer.EventHubProducerClient" />, <see cref="T:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient" />, or <c>EventProcessorClient</c>.
             </summary>
            
             <param name="clientType">The type of client being closed.</param>
             <param name="eventHubName">The name of the Event Hub associated with the client.</param>
             <param name="clientId">An identifier to associate with the client.</param>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Diagnostics.EventHubsEventSource.ClientCloseComplete(System.Type,System.String,System.String)">
             <summary>
               Indicates that a client has been closed, which may correspond to an <see cref="T:Azure.Messaging.EventHubs.EventHubConnection" />,
               <see cref="T:Azure.Messaging.EventHubs.Producer.EventHubProducerClient" />, <see cref="T:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient" />, or <c>EventProcessorClient</c>.
             </summary>
            
             <param name="clientType">The type of client being closed.</param>
             <param name="eventHubName">The name of the Event Hub associated with the client.</param>
             <param name="clientId">An identifier to associate with the client.</param>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Diagnostics.EventHubsEventSource.ClientCloseError(System.Type,System.String,System.String,System.String)">
             <summary>
               Indicates that an exception was encountered while closing an <see cref="T:Azure.Messaging.EventHubs.EventHubConnection" />,
               <see cref="T:Azure.Messaging.EventHubs.Producer.EventHubProducerClient" />, <see cref="T:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient" />, or <c>EventProcessorClient</c>.
             </summary>
            
             <param name="clientType">The type of client being closed.</param>
             <param name="eventHubName">The name of the Event Hub associated with the client.</param>
             <param name="clientId">An identifier to associate with the client.</param>
             <param name="errorMessage">The message for the exception that occurred.</param>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Diagnostics.EventHubsEventSource.GetPropertiesStart(System.String)">
             <summary>
               Indicates that retrieval of the Event Hub properties has started.
             </summary>
            
             <param name="eventHubName">The name of the Event Hub that properties are being retrieved for.</param>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Diagnostics.EventHubsEventSource.GetPropertiesComplete(System.String)">
             <summary>
               Indicates that retrieval of the Event Hub properties has completed.
             </summary>
            
             <param name="eventHubName">The name of the Event Hub that properties are being retrieved for.</param>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Diagnostics.EventHubsEventSource.GetPropertiesError(System.String,System.String)">
             <summary>
               Indicates that an exception was encountered while retrieving Event Hub properties.
             </summary>
            
             <param name="eventHubName">The name of the Event Hub that properties are being retrieved for.</param>
             <param name="errorMessage">The message for the exception that occurred.</param>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Diagnostics.EventHubsEventSource.GetPartitionPropertiesStart(System.String,System.String)">
             <summary>
               Indicates that retrieval of the Event Hub partition properties has started.
             </summary>
            
             <param name="eventHubName">The name of the Event Hub that properties are being retrieved for.</param>
             <param name="partitionId">The identifier of the partition that properties are being retrieved for.</param>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Diagnostics.EventHubsEventSource.GetPartitionPropertiesComplete(System.String,System.String)">
             <summary>
               Indicates that retrieval of the Event Hub partition properties has completed.
             </summary>
            
             <param name="eventHubName">The name of the Event Hub that properties are being retrieved for.</param>
             <param name="partitionId">The identifier of the partition that properties are being retrieved for.</param>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Diagnostics.EventHubsEventSource.GetPartitionPropertiesError(System.String,System.String,System.String)">
             <summary>
               Indicates that an exception was encountered while retrieving Event Hub partition properties.
             </summary>
            
             <param name="eventHubName">The name of the Event Hub that properties are being retrieved for.</param>
             <param name="partitionId">The identifier of the partition that properties are being retrieved for.</param>
             <param name="errorMessage">The message for the exception that occurred.</param>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Diagnostics.EventHubsEventSource.PublishPartitionEventsToChannelStart(System.String,System.String)">
             <summary>
               Indicates that reading events from an Event Hub partition has started.
             </summary>
            
             <param name="eventHubName">The name of the Event Hub that events are being read from.</param>
             <param name="partitionId">The identifier of the partition that properties are being read from.</param>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Diagnostics.EventHubsEventSource.PublishPartitionEventsToChannelComplete(System.String,System.String)">
             <summary>
               Indicates that reading events from an Event Hub partition has completed.
             </summary>
            
             <param name="eventHubName">The name of the Event Hub that events are being read from.</param>
             <param name="partitionId">The identifier of the partition that properties are being read from.</param>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Diagnostics.EventHubsEventSource.PublishPartitionEventsToChannelError(System.String,System.String,System.String)">
             <summary>
               Indicates that an exception was encountered while reading events from an Event Hub partition.
             </summary>
            
             <param name="eventHubName">The name of the Event Hub that events are being read from.</param>
             <param name="partitionId">The identifier of the partition that properties are being read from.</param>
             <param name="errorMessage">The message for the exception that occurred.</param>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Diagnostics.EventHubsEventSource.ReadEventsFromPartitionStart(System.String,System.String)">
             <summary>
               Indicates that reading events from an Event Hub partition has started.
             </summary>
            
             <param name="eventHubName">The name of the Event Hub that events are being read from.</param>
             <param name="partitionId">The identifier of the partition that properties are being read from.</param>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Diagnostics.EventHubsEventSource.ReadEventsFromPartitionComplete(System.String,System.String)">
             <summary>
               Indicates that reading events from an Event Hub partition has completed.
             </summary>
            
             <param name="eventHubName">The name of the Event Hub that events are being read from.</param>
             <param name="partitionId">The identifier of the partition that properties are being read from.</param>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Diagnostics.EventHubsEventSource.ReadEventsFromPartitionError(System.String,System.String,System.String)">
             <summary>
               Indicates that an exception was encountered while reading events from an Event Hub partition.
             </summary>
            
             <param name="eventHubName">The name of the Event Hub that events are being read from.</param>
             <param name="partitionId">The identifier of the partition that properties are being read from.</param>
             <param name="errorMessage">The message for the exception that occurred.</param>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Diagnostics.EventHubsEventSource.ReadAllEventsStart(System.String)">
             <summary>
               Indicates that reading events from all partitions of the Event Hub has started.
             </summary>
            
             <param name="eventHubName">The name of the Event Hub that events are being read from.</param>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Diagnostics.EventHubsEventSource.ReadAllEventsComplete(System.String)">
             <summary>
               Indicates that reading events from all partitions of the Event Hub has completed.
             </summary>
            
             <param name="eventHubName">The name of the Event Hub that events are being read from.</param>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Diagnostics.EventHubsEventSource.ReadAllEventsError(System.String,System.String)">
             <summary>
               Indicates that an exception was encountered while reading events from all partitions of the Event Hub.
             </summary>
            
             <param name="eventHubName">The name of the Event Hub that events are being read from.</param>
             <param name="errorMessage">The message for the exception that occurred.</param>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Diagnostics.EventHubsEventSource.AmqpLinkAuthorizationRefreshStart(System.String,System.String)">
             <summary>
               Indicates that refreshing authorization for an AMQP link has started.
             </summary>
            
             <param name="eventHubName">The name of the Event Hub that the link is associated with.</param>
             <param name="endpoint">The service endpoint that the link is bound to for communication.</param>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Diagnostics.EventHubsEventSource.AmqpLinkAuthorizationRefreshComplete(System.String,System.String)">
             <summary>
               Indicates that refreshing authorization for an AMQP link has completed.
             </summary>
            
             <param name="eventHubName">The name of the Event Hub that the link is associated with.</param>
             <param name="endpoint">The service endpoint that the link is bound to for communication.</param>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Diagnostics.EventHubsEventSource.AmqpLinkAuthorizationRefreshError(System.String,System.String,System.String)">
             <summary>
               Indicates that an exception was encountered while refreshing authorization for an AMQP link has started.
             </summary>
            
             <param name="eventHubName">The name of the Event Hub that the link is associated with.</param>
             <param name="endpoint">The service endpoint that the link is bound to for communication.</param>
             <param name="errorMessage">The message for the exception that occurred.</param>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Diagnostics.EventHubsEventSource.UnexpectedException(System.String)">
             <summary>
               Indicates that an exception was encountered in an unexpected code path, not directly associated with
               an Event Hubs operation.
             </summary>
            
             <param name="errorMessage">The message for the exception that occurred.</param>
            
        </member>
        <member name="T:Azure.Messaging.EventHubs.Diagnostics.DiagnosticProperty">
             <summary>
               The set of well-known properties associated with Event Hubs diagnostics.
             </summary>
            
        </member>
        <member name="F:Azure.Messaging.EventHubs.Diagnostics.DiagnosticProperty.DiagnosticIdAttribute">
            <summary>The attribute which represents a unique identifier for the diagnostics context.</summary>
        </member>
        <member name="F:Azure.Messaging.EventHubs.Diagnostics.DiagnosticProperty.ServiceContextAttribute">
            <summary>The attribute which represents the Azure service to associate with diagnostics information.</summary>
        </member>
        <member name="F:Azure.Messaging.EventHubs.Diagnostics.DiagnosticProperty.EventHubAttribute">
            <summary>The attribute which represents the Event Hub instance to associate with diagnostics information.</summary>
        </member>
        <member name="F:Azure.Messaging.EventHubs.Diagnostics.DiagnosticProperty.EndpointAttribute">
            <summary>The attribute which represents the fully-qualified endpoint address of the Event Hubs namespace to associate with diagnostics information.</summary>
        </member>
        <member name="F:Azure.Messaging.EventHubs.Diagnostics.DiagnosticProperty.EventHubsServiceContext">
            <summary>The value which identifies the Event Hubs diagnostics context.</summary>
        </member>
        <member name="F:Azure.Messaging.EventHubs.Diagnostics.DiagnosticProperty.EventHubProducerType">
            <summary>The value which identifies an Event Hub producer as the type associated with the diagnostics information.</summary>
        </member>
        <member name="F:Azure.Messaging.EventHubs.Diagnostics.DiagnosticProperty.KindAttribute">
            <summary>The attribute which represents the kind of diagnostic scope.</summary>
        </member>
        <member name="F:Azure.Messaging.EventHubs.Diagnostics.DiagnosticProperty.ProducerKind">
            <summary>The value which identifies the message instrumentation scope kind.</summary>
        </member>
        <member name="F:Azure.Messaging.EventHubs.Diagnostics.DiagnosticProperty.ClientKind">
            <summary>The value which identifies the message client scope kind.</summary>
        </member>
        <member name="F:Azure.Messaging.EventHubs.Diagnostics.DiagnosticProperty.ConsumerKind">
            <summary>The value which identifies the processor scope kind.</summary>
        </member>
        <member name="P:Azure.Messaging.EventHubs.Diagnostics.DiagnosticProperty.EventActivityName">
             <summary>
               The activity name associated with events.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Diagnostics.DiagnosticProperty.ProducerActivityName">
             <summary>
               The activity name associated with Event Hub producers.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Diagnostics.DiagnosticProperty.EventProcessorProcessingActivityName">
             <summary>
               The activity name associated with EventProcessor processing a list of events.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Diagnostics.DiagnosticProperty.EventProcessorCheckpointActivityName">
             <summary>
               The activity name associated with EventProcessor creating a checkpoint.
             </summary>
            
        </member>
        <member name="T:Azure.Messaging.EventHubs.Diagnostics.EventDataInstrumentation">
             <summary>
               Enables diagnostics instrumentation to be applied to <see cref="T:Azure.Messaging.EventHubs.EventData" />
               instances.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Diagnostics.EventDataInstrumentation.ClientDiagnostics">
            <summary>The client diagnostics instance responsible for managing scope.</summary>
        </member>
        <member name="M:Azure.Messaging.EventHubs.Diagnostics.EventDataInstrumentation.InstrumentEvent(Azure.Messaging.EventHubs.EventData)">
             <summary>
               Applies diagnostics instrumentation to a given event.
             </summary>
            
             <param name="eventData">The event to instrument.</param>
            
             <returns><c>true</c> if the event was instrumented in response to this request; otherwise, <c>false</c>.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Diagnostics.EventDataInstrumentation.TryExtractDiagnosticId(Azure.Messaging.EventHubs.EventData,System.String@)">
             <summary>
               Extracts a diagnostic id from the given event.
             </summary>
            
             <param name="eventData">The event to instrument.</param>
             <param name="id">The value of the diagnostics identifier assigned to the event. </param>
            
             <returns><c>true</c> if the event was contained the diagnostic id; otherwise, <c>false</c>.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Diagnostics.EventDataInstrumentation.ResetEvent(Azure.Messaging.EventHubs.EventData)">
             <summary>
               Resets the instrumentation associated with a given event.
             </summary>
            
             <param name="eventData">The event to reset.</param>
            
        </member>
        <member name="T:Azure.Messaging.EventHubs.EventData">
             <summary>
               A set of data encapsulating an event and the associated metadata for
               use with Event Hubs operations.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.EventData.Body">
             <summary>
               The data associated with the event.
             </summary>
            
             <remarks>
               If the means for deserializaing the raw data is not apparent to consumers, a
               common technique is to make use of <see cref="P:Azure.Messaging.EventHubs.EventData.Properties" /> to associate serialization hints
               as an aid to consumers who wish to deserialize the binary data.
             </remarks>
            
             <seealso cref="P:Azure.Messaging.EventHubs.EventData.Properties" />
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.EventData.BodyAsStream">
             <summary>
               The data associated with the event, in stream form.
             </summary>
            
             <value>
               A <see cref="T:System.IO.Stream" /> containing the raw data representing the <see cref="P:Azure.Messaging.EventHubs.EventData.Body" />
               of the event.  The caller is assumed to have ownership of the stream, including responsibility
               for managing its lifespan and ensuring proper disposal.
             </value>
            
             <remarks>
               If the means for deserializing the raw data is not apparent to consumers, a
               common technique is to make use of <see cref="P:Azure.Messaging.EventHubs.EventData.Properties" /> to associate serialization hints
               as an aid to consumers who wish to deserialize the binary data.
             </remarks>
            
             <seealso cref="P:Azure.Messaging.EventHubs.EventData.Properties" />
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.EventData.Properties">
             <summary>
               The set of free-form event properties which may be used for passing metadata associated with the event with the event body
               during Event Hubs operations.
             </summary>
            
             <remarks>
               A common use case for <see cref="P:Azure.Messaging.EventHubs.EventData.Properties" /> is to associate serialization hints for the <see cref="P:Azure.Messaging.EventHubs.EventData.Body" />
               as an aid to consumers who wish to deserialize the binary data.
             </remarks>
            
             <example>
               <code>
                 var eventData = new EventData(serializedTelemetryData);
                 eventData.Properties["eventType"] = "com.microsoft.Azure.monitoring.EtlEvent";
               </code>
             </example>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.EventData.SystemProperties">
             <summary>
               The set of free-form event properties which were provided by the Event Hubs service to pass metadata associated with the
               event or associated Event Hubs operation.
             </summary>
            
             <remarks>
               These properties are only populated for events received from the Event Hubs service.  The set is otherwise
               empty.
             </remarks>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.EventData.SequenceNumber">
             <summary>
               The sequence number assigned to the event when it was enqueued in the associated Event Hub partition.
             </summary>
            
             <remarks>
               This property is only populated for events received from the Event Hubs service. If this
               EventData was not recived from the Event Hubs service, the value is <see cref="F:System.Int64.MinValue"/>.
             </remarks>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.EventData.Offset">
             <summary>
               The offset of the event when it was received from the associated Event Hub partition.
             </summary>
            
             <remarks>
               This property is only populated for events received from the Event Hubs service. If this
               EventData was not recived from the Event Hubs service, the value is <see cref="F:System.Int64.MinValue"/>.
             </remarks>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.EventData.EnqueuedTime">
             <summary>
               The date and time, in UTC, of when the event was enqueued in the Event Hub partition.
             </summary>
            
             <remarks>
               This property is only populated for events received from the Event Hubs service. If this
               EventData was not recived from the Event Hubs service, the value <c>default(DateTimeOffset)</c>.
             </remarks>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.EventData.PartitionKey">
             <summary>
               The partition hashing key applied to the batch that the associated <see cref="T:Azure.Messaging.EventHubs.EventData"/>, was published with.
             </summary>
            
             <remarks>
               This property is only populated for events received from the Event Hubs service.
             </remarks>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.EventData.LastPartitionSequenceNumber">
             <summary>
               The sequence number of the event that was last enqueued into the Event Hub partition from which this
               event was received.
             </summary>
            
             <remarks>
               This property is only populated for events received using an reader specifying
               <see cref="P:Azure.Messaging.EventHubs.Consumer.ReadEventOptions.TrackLastEnqueuedEventProperties" /> as enabled.
             </remarks>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.EventData.LastPartitionOffset">
             <summary>
               The offset of the event that was last enqueued into the Event Hub partition from which this event was
               received.
             </summary>
            
             <remarks>
               This property is only populated for events received using an reader specifying
               <see cref="P:Azure.Messaging.EventHubs.Consumer.ReadEventOptions.TrackLastEnqueuedEventProperties" /> as enabled.
             </remarks>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.EventData.LastPartitionEnqueuedTime">
             <summary>
               The date and time, in UTC, that the last event was enqueued into the Event Hub partition from
               which this event was received.
             </summary>
            
             <remarks>
               This property is only populated for events received using an reader specifying
               <see cref="P:Azure.Messaging.EventHubs.Consumer.ReadEventOptions.TrackLastEnqueuedEventProperties" /> as enabled.
             </remarks>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.EventData.LastPartitionPropertiesRetrievalTime">
             <summary>
               The date and time, in UTC, that the last event information for the Event Hub partition was retrieved
               from the Event Hubs service.
             </summary>
            
             <remarks>
               This property is only populated for events received using an reader specifying
               <see cref="P:Azure.Messaging.EventHubs.Consumer.ReadEventOptions.TrackLastEnqueuedEventProperties" /> as enabled.
             </remarks>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.EventData.#ctor(System.ReadOnlyMemory{System.Byte})">
             <summary>
               Initializes a new instance of the <see cref="T:Azure.Messaging.EventHubs.EventData"/> class.
             </summary>
            
             <param name="eventBody">The raw data to use as the body of the event.</param>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.EventData.#ctor(System.ReadOnlyMemory{System.Byte},System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Int64,System.Int64,System.DateTimeOffset,System.String,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})">
             <summary>
               Initializes a new instance of the <see cref="T:Azure.Messaging.EventHubs.EventData"/> class.
             </summary>
            
             <param name="eventBody">The raw data to use as the body of the event.</param>
             <param name="properties">The set of free-form event properties to send with the event.</param>
             <param name="systemProperties">The set of system properties received from the Event Hubs service.</param>
             <param name="sequenceNumber">The sequence number assigned to the event when it was enqueued in the associated Event Hub partition.</param>
             <param name="offset">The offset of the event when it was received from the associated Event Hub partition.</param>
             <param name="enqueuedTime">The date and time, in UTC, of when the event was enqueued in the Event Hub partition.</param>
             <param name="partitionKey">The partition hashing key applied to the batch that the associated <see cref="T:Azure.Messaging.EventHubs.EventData"/>, was sent with.</param>
             <param name="lastPartitionSequenceNumber">The sequence number that was last enqueued into the Event Hub partition.</param>
             <param name="lastPartitionOffset">The offset that was last enqueued into the Event Hub partition.</param>
             <param name="lastPartitionEnqueuedTime">The date and time, in UTC, of the event that was last enqueued into the Event Hub partition.</param>
             <param name="lastPartitionPropertiesRetrievalTime">The date and time, in UTC, that the last event information for the Event Hub partition was retrieved from the serivce.</param>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.EventData.#ctor(System.ReadOnlyMemory{System.Byte},System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Int64,System.Int64,System.DateTimeOffset,System.String)">
             <summary>
               Initializes a new instance of the <see cref="T:Azure.Messaging.EventHubs.EventData"/> class.
             </summary>
            
             <param name="eventBody">The raw data to use as the body of the event.</param>
             <param name="properties">The set of free-form event properties to send with the event.</param>
             <param name="systemProperties">The set of system properties received from the Event Hubs service.</param>
             <param name="sequenceNumber">The sequence number assigned to the event when it was enqueued in the associated Event Hub partition.</param>
             <param name="offset">The offset of the event when it was received from the associated Event Hub partition.</param>
             <param name="enqueuedTime">The date and time, in UTC, of when the event was enqueued in the Event Hub partition.</param>
             <param name="partitionKey">The partition hashing key applied to the batch that the associated <see cref="T:Azure.Messaging.EventHubs.EventData"/>, was sent with.</param>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.EventData.Equals(System.Object)">
             <summary>
               Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
             </summary>
            
             <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            
             <returns><c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.EventData.GetHashCode">
             <summary>
               Returns a hash code for this instance.
             </summary>
            
             <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.EventData.ToString">
             <summary>
               Converts the instance to string representation.
             </summary>
            
             <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
            
        </member>
        <member name="T:Azure.Messaging.EventHubs.EventHubConnection">
             <summary>
               A connection to the Azure Event Hubs service, enabling client communications with a specific
               Event Hub instance within an Event Hubs namespace.  A single connection may be shared among multiple
               Event Hub producers and/or consumers, or may be used as a dedicated connection for a single
               producer or consumer client.
             </summary>
            
             <seealso href="https://docs.microsoft.com/en-us/Azure/event-hubs/event-hubs-about" />
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.EventHubConnection.FullyQualifiedNamespace">
             <summary>
               The fully qualified Event Hubs namespace that the connection is associated with.  This is likely
               to be similar to <c>{yournamespace}.servicebus.windows.net</c>.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.EventHubConnection.EventHubName">
             <summary>
               The name of the Event Hub that the connection is associated with, specific to the
               Event Hubs namespace that contains it.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.EventHubConnection.IsClosed">
             <summary>
               Indicates whether or not this <see cref="T:Azure.Messaging.EventHubs.EventHubConnection"/> has been closed.
             </summary>
            
             <value>
               <c>true</c> if the connection is closed; otherwise, <c>false</c>.
             </value>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.EventHubConnection.ServiceEndpoint">
             <summary>
               The endpoint for the Event Hubs service to which the connection is associated.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.EventHubConnection.Options">
             <summary>
               The set of client options used for creation of this client.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.EventHubConnection.InnerClient">
             <summary>
               An abstracted Event Hub Client specific to the active protocol and transport intended to perform delegated operations.
             </summary>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.EventHubConnection.#ctor(System.String)">
             <summary>
               Initializes a new instance of the <see cref="T:Azure.Messaging.EventHubs.EventHubConnection"/> class.
             </summary>
            
             <param name="connectionString">The connection string to use for connecting to the Event Hubs namespace; it is expected that the Event Hub name and the shared key properties are contained in this connection string.</param>
            
             <remarks>
               If the connection string is copied from the Event Hubs namespace, it will likely not contain the name of the desired Event Hub,
               which is needed.  In this case, the name can be added manually by adding ";EntityPath=[[ EVENT HUB NAME ]]" to the end of the
               connection string.  For example, ";EntityPath=telemetry-hub".
            
               If you have defined a shared access policy directly on the Event Hub itself, then copying the connection string from that
               Event Hub will result in a connection string that contains the name.
             </remarks>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.EventHubConnection.#ctor(System.String,Azure.Messaging.EventHubs.EventHubConnectionOptions)">
             <summary>
               Initializes a new instance of the <see cref="T:Azure.Messaging.EventHubs.EventHubConnection"/> class.
             </summary>
            
             <param name="connectionString">The connection string to use for connecting to the Event Hubs namespace; it is expected that the Event Hub name and the shared key properties are contained in this connection string.</param>
             <param name="connectionOptions">A set of options to apply when configuring the connection.</param>
            
             <remarks>
               If the connection string is copied from the Event Hubs namespace, it will likely not contain the name of the desired Event Hub,
               which is needed.  In this case, the name can be added manually by adding ";EntityPath=[[ EVENT HUB NAME ]]" to the end of the
               connection string.  For example, ";EntityPath=telemetry-hub".
            
               If you have defined a shared access policy directly on the Event Hub itself, then copying the connection string from that
               Event Hub will result in a connection string that contains the name.
             </remarks>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.EventHubConnection.#ctor(System.String,System.String)">
             <summary>
               Initializes a new instance of the <see cref="T:Azure.Messaging.EventHubs.EventHubConnection"/> class.
             </summary>
            
             <param name="connectionString">The connection string to use for connecting to the Event Hubs namespace; it is expected that the shared key properties are contained in this connection string, but not the Event Hub name.</param>
             <param name="eventHubName">The name of the specific Event Hub to associate the connection with.</param>
            
             <remarks>
               If the connection string is copied from the Event Hub itself, it will contain the name of the desired Event Hub,
               and can be used directly without passing the <paramref name="eventHubName" />.  The name of the Event Hub should be
               passed only once, either as part of the connection string or separately.
             </remarks>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.EventHubConnection.#ctor(System.String,System.String,Azure.Messaging.EventHubs.EventHubConnectionOptions)">
             <summary>
               Initializes a new instance of the <see cref="T:Azure.Messaging.EventHubs.EventHubConnection"/> class.
             </summary>
            
             <param name="connectionString">The connection string to use for connecting to the Event Hubs namespace; it is expected that the shared key properties are contained in this connection string, but not the Event Hub name.</param>
             <param name="eventHubName">The name of the specific Event Hub to associate the connection with.</param>
             <param name="connectionOptions">A set of options to apply when configuring the connection.</param>
            
             <remarks>
               If the connection string is copied from the Event Hub itself, it will contain the name of the desired Event Hub,
               and can be used directly without passing the <paramref name="eventHubName" />.  The name of the Event Hub should be
               passed only once, either as part of the connection string or separately.
             </remarks>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.EventHubConnection.#ctor(System.String,System.String,Azure.Core.TokenCredential,Azure.Messaging.EventHubs.EventHubConnectionOptions)">
             <summary>
               Initializes a new instance of the <see cref="T:Azure.Messaging.EventHubs.EventHubConnection"/> class.
             </summary>
            
             <param name="fullyQualifiedNamespace">The fully qualified Event Hubs namespace to connect to.  This is likely to be similar to <c>{yournamespace}.servicebus.windows.net</c>.</param>
             <param name="eventHubName">The name of the specific Event Hub to associate the connection with.</param>
             <param name="credential">The Azure managed identity credential to use for authorization.  Access controls may be specified by the Event Hubs namespace or the requested Event Hub, depending on Azure configuration.</param>
             <param name="connectionOptions">A set of options to apply when configuring the connection.</param>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.EventHubConnection.#ctor">
             <summary>
               Initializes a new instance of the <see cref="T:Azure.Messaging.EventHubs.EventHubConnection"/> class.
             </summary>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.EventHubConnection.CloseAsync(System.Threading.CancellationToken)">
             <summary>
               Closes the connection to the Event Hubs namespace and associated Event Hub.
             </summary>
            
             <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken"/> instance to signal the request to cancel the operation.</param>
            
             <returns>A task to be resolved on when the operation has completed.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.EventHubConnection.DisposeAsync">
             <summary>
               Performs the task needed to clean up resources used by the <see cref="T:Azure.Messaging.EventHubs.EventHubConnection" />,
               including ensuring that the connection itself has been closed.
             </summary>
            
             <returns>A task to be resolved on when the operation has completed.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.EventHubConnection.Equals(System.Object)">
             <summary>
               Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
             </summary>
            
             <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            
             <returns><c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.EventHubConnection.GetHashCode">
             <summary>
               Returns a hash code for this instance.
             </summary>
            
             <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.EventHubConnection.ToString">
             <summary>
               Converts the instance to string representation.
             </summary>
            
             <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.EventHubConnection.GetPropertiesAsync(Azure.Messaging.EventHubs.EventHubsRetryPolicy,System.Threading.CancellationToken)">
             <summary>
               Retrieves information about the Event Hub that the connection is associated with, including
               the number of partitions present and their identifiers.
             </summary>
            
             <param name="retryPolicy">The retry policy to use as the basis for retrieving the information.</param>
             <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken"/> instance to signal the request to cancel the operation.</param>
            
             <returns>The set of information for the Event Hub that this connection is associated with.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.EventHubConnection.GetPartitionIdsAsync(Azure.Messaging.EventHubs.EventHubsRetryPolicy,System.Threading.CancellationToken)">
             <summary>
               Retrieves the set of identifiers for the partitions of an Event Hub.
             </summary>
            
             <param name="retryPolicy">The retry policy to use as the basis for retrieving the information.</param>
             <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken"/> instance to signal the request to cancel the operation.</param>
            
             <returns>The set of identifiers for the partitions within the Event Hub that this connection is associated with.</returns>
            
             <remarks>
               This method is synonymous with invoking <see cref="M:Azure.Messaging.EventHubs.EventHubConnection.GetPropertiesAsync(Azure.Messaging.EventHubs.EventHubsRetryPolicy,System.Threading.CancellationToken)" /> and reading the <see cref="P:Azure.Messaging.EventHubs.EventHubProperties.PartitionIds"/>
               property that is returned. It is offered as a convenience for quick access to the set of partition identifiers for the associated Event Hub.
               No new or extended information is presented.
             </remarks>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.EventHubConnection.GetPartitionPropertiesAsync(System.String,Azure.Messaging.EventHubs.EventHubsRetryPolicy,System.Threading.CancellationToken)">
             <summary>
               Retrieves information about a specific partition for an Event Hub, including elements that describe the available
               events in the partition event stream.
             </summary>
            
             <param name="partitionId">The unique identifier of a partition associated with the Event Hub.</param>
             <param name="retryPolicy">The retry policy to use as the basis for retrieving the information.</param>
             <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken"/> instance to signal the request to cancel the operation.</param>
            
             <returns>The set of information for the requested partition under the Event Hub this connection is associated with.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.EventHubConnection.CreateTransportProducer(System.String,Azure.Messaging.EventHubs.EventHubsRetryPolicy)">
             <summary>
               Creates a producer strongly aligned with the active protocol and transport,
               responsible for publishing <see cref="T:Azure.Messaging.EventHubs.EventData" /> to the Event Hub.
             </summary>
            
             <param name="partitionId">The identifier of the partition to which the transport producer should be bound; if <c>null</c>, the producer is unbound.</param>
             <param name="retryPolicy">The policy which governs retry behavior and try timeouts.</param>
            
             <returns>A <see cref="T:Azure.Messaging.EventHubs.Core.TransportProducer"/> configured in the requested manner.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.EventHubConnection.CreateTransportConsumer(System.String,System.String,Azure.Messaging.EventHubs.Consumer.EventPosition,Azure.Messaging.EventHubs.EventHubsRetryPolicy,System.Boolean,System.Nullable{System.Int64},System.Nullable{System.UInt32})">
             <summary>
               Creates a consumer strongly aligned with the active protocol and transport, responsible
               for reading <see cref="T:Azure.Messaging.EventHubs.EventData" /> from a specific Event Hub partition, in the context
               of a specific consumer group.
            
               A consumer may be exclusive, which asserts ownership over the partition for the consumer
               group to ensure that only one consumer from that group is reading the from the partition.
               These exclusive consumers are sometimes referred to as "Epoch Consumers."
            
               A consumer may also be non-exclusive, allowing multiple consumers from the same consumer
               group to be actively reading events from the partition.  These non-exclusive consumers are
               sometimes referred to as "Non-epoch Consumers."
            
               Designating a consumer as exclusive may be specified by setting the <paramref name="ownerLevel" />.
               When <c>null</c>, consumers are created as non-exclusive.
             </summary>
            
             <param name="consumerGroup">The name of the consumer group this consumer is associated with.  Events are read in the context of this group.</param>
             <param name="partitionId">The identifier of the Event Hub partition from which events will be received.</param>
             <param name="eventPosition">The position within the partition where the consumer should begin reading events.</param>
             <param name="retryPolicy">The policy which governs retry behavior and try timeouts.</param>
             <param name="trackLastEnqueuedEventProperties">Indicates whether information on the last enqueued event on the partition is sent as events are received.</param>
             <param name="ownerLevel">The relative priority to associate with the link; for a non-exclusive link, this value should be <c>null</c>.</param>
             <param name="prefetchCount">Controls the number of events received and queued locally without regard to whether an operation was requested.  If <c>null</c> a default will be used.</param>
            
             <returns>A <see cref="T:Azure.Messaging.EventHubs.Core.TransportConsumer" /> configured in the requested manner.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.EventHubConnection.CreateTransportClient(System.String,System.String,Azure.Messaging.EventHubs.Authorization.EventHubTokenCredential,Azure.Messaging.EventHubs.EventHubConnectionOptions)">
             <summary>
               Builds an Event Hub client specific to the protocol and transport specified by the
               requested connection type of the <paramref name="options" />.
             </summary>
            
             <param name="fullyQualifiedNamespace">The fully qualified Event Hubs namespace.  This is likely to be similar to <c>{yournamespace}.servicebus.windows.net</c>.</param>
             <param name="eventHubName">The name of a specific Event Hub.</param>
             <param name="credential">The Azure managed identity credential to use for authorization.</param>
             <param name="options">The set of options to use for the client.</param>
            
             <returns>A client generalization specific to the specified protocol/transport to which operations may be delegated.</returns>
            
             <remarks>
               As an internal method, only basic sanity checks are performed against arguments.  It is
               assumed that callers are trusted and have performed deep validation.
            
               Parameters passed are also assumed to be owned by thee transport client and safe to mutate or dispose;
               creation of clones or otherwise protecting the parameters is assumed to be the purview of the caller.
             </remarks>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.EventHubConnection.BuildAudienceResource(Azure.Messaging.EventHubs.EventHubsTransportType,System.String,System.String)">
             <summary>
               Builds the audience for use in the signature.
             </summary>
            
             <param name="transportType">The type of protocol and transport that will be used for communicating with the Event Hubs service.</param>
             <param name="fullyQualifiedNamespace">The fully qualified Event Hubs namespace.  This is likely to be similar to <c>{yournamespace}.servicebus.windows.net</c>.</param>
             <param name="eventHubName">The name of the specific Event Hub to connect the client to.</param>
            
             <returns>The value to use as the audience of the signature.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.EventHubConnection.ValidateConnectionProperties(Azure.Messaging.EventHubs.Core.ConnectionStringProperties,System.String,System.String)">
             <summary>
               Performs the actions needed to validate the set of properties for connecting to the
               Event Hubs service, as passed to this client during creation.
             </summary>
            
             <param name="properties">The set of properties parsed from the connection string associated this client.</param>
             <param name="eventHubName">The name of the Event Hub passed independent of the connection string, allowing easier use of a namespace-level connection string.</param>
             <param name="connectionStringArgumentName">The name of the argument associated with the connection string; to be used when raising <see cref="T:System.ArgumentException" /> variants.</param>
            
             <remarks>
               In the case that the properties violate an invariant or otherwise represent a combination that
               is not permissible, an appropriate exception will be thrown.
             </remarks>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.EventHubConnection.ValidateConnectionOptions(Azure.Messaging.EventHubs.EventHubConnectionOptions)">
             <summary>
               Performs the actions needed to validate the <see cref="T:Azure.Messaging.EventHubs.EventHubConnectionOptions" /> associated
               with this client.
             </summary>
            
             <param name="connectionOptions">The set of options to validate.</param>
            
             <remarks>
               In the case that the options violate an invariant or otherwise represent a combination that
               is not permissible, an appropriate exception will be thrown.
             </remarks>
            
        </member>
        <member name="T:Azure.Messaging.EventHubs.EventHubConnectionOptions">
             <summary>
               The set of options that can be specified when creating an <see cref="T:Azure.Messaging.EventHubs.EventHubConnection" />
               to configure its behavior.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.EventHubConnectionOptions.TransportType">
             <summary>
               The type of protocol and transport that will be used for communicating with the Event Hubs
               service.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.EventHubConnectionOptions.Proxy">
             <summary>
               The proxy to use for communication over web sockets.
             </summary>
            
             <remarks>
               A proxy cannot be used for communication over TCP; if web sockets are not in
               use, specifying a proxy is an invalid option.
             </remarks>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.EventHubConnectionOptions.Equals(System.Object)">
             <summary>
               Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
             </summary>
            
             <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            
             <returns><c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.EventHubConnectionOptions.GetHashCode">
             <summary>
               Returns a hash code for this instance.
             </summary>
            
             <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.EventHubConnectionOptions.ToString">
             <summary>
               Converts the instance to string representation.
             </summary>
            
             <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
            
        </member>
        <member name="T:Azure.Messaging.EventHubs.EventHubProperties">
             <summary>
               A set of information for an Event Hub.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.EventHubProperties.Name">
             <summary>
               The name of the Event Hub, specific to the namespace
               that contains it.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.EventHubProperties.CreatedOn">
             <summary>
               The date and time, in UTC, at which the Event Hub was created.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.EventHubProperties.PartitionIds">
             <summary>
               The set of unique identifiers for each partition in the Event Hub.
             </summary>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.EventHubProperties.#ctor(System.String,System.DateTimeOffset,System.String[])">
             <summary>
               Initializes a new instance of the <see cref="T:Azure.Messaging.EventHubs.EventHubProperties"/> class.
             </summary>
            
             <param name="name">The name of the Event Hub.</param>
             <param name="createdOn">The date and time at which the Event Hub was created.</param>
             <param name="partitionIds">The set of unique identifiers for each partition.</param>
            
        </member>
        <member name="T:Azure.Messaging.EventHubs.EventHubsException">
             <summary>
               Serves as a basis for exceptions produced within the Event Hubs
               context.
             </summary>
            
             <seealso cref="T:System.Exception" />
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.EventHubsException.IsTransient">
             <summary>
               Indicates whether an exception should be considered transient or final.
             </summary>
            
             <value><c>true</c> if the exception is likely transient; otherwise, <c>false</c>.</value>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.EventHubsException.Reason">
             <summary>
               The reason for the failure of an Event Hubs operation that resulted
               in the exception.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.EventHubsException.EventHubName">
             <summary>
               The name of the Event Hubs to which the exception is associated.
             </summary>
            
             <value>The name of the Event Hub, if available; otherwise, <c>null</c>.</value>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.EventHubsException.Message">
             <summary>
               Gets a message that describes the current exception.
             </summary>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.EventHubsException.#ctor(System.Boolean,System.String)">
             <summary>
               Initializes a new instance of the <see cref="T:Azure.Messaging.EventHubs.EventHubsException"/> class.
             </summary>
            
             <param name="isTransient"><c>true</c> if the exception should be considered transient; otherwise, <c>false</c>.</param>
             <param name="eventHubName">The name of the Event Hub to which the exception is associated.</param>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.EventHubsException.#ctor(System.Boolean,System.String,Azure.Messaging.EventHubs.EventHubsException.FailureReason)">
             <summary>
               Initializes a new instance of the <see cref="T:Azure.Messaging.EventHubs.EventHubsException"/> class.
             </summary>
            
             <param name="isTransient"><c>true</c> if the exception should be considered transient; otherwise, <c>false</c>.</param>
             <param name="eventHubName">The name of the Event Hub to which the exception is associated.</param>
             <param name="reason">The reason for the failure that resulted in the exception.</param>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.EventHubsException.#ctor(System.Boolean,System.String,System.String)">
             <summary>
               Initializes a new instance of the <see cref="T:Azure.Messaging.EventHubs.EventHubsException"/> class.
             </summary>
            
             <param name="isTransient"><c>true</c> if the exception should be considered transient; otherwise, <c>false</c>.</param>
             <param name="eventHubName">The name of the Event Hub to which the exception is associated.</param>
             <param name="message">The error message that explains the reason for the exception.</param>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.EventHubsException.#ctor(System.Boolean,System.String,System.String,Azure.Messaging.EventHubs.EventHubsException.FailureReason)">
             <summary>
               Initializes a new instance of the <see cref="T:Azure.Messaging.EventHubs.EventHubsException"/> class.
             </summary>
            
             <param name="isTransient"><c>true</c> if the exception should be considered transient; otherwise, <c>false</c>.</param>
             <param name="eventHubName">The name of the Event Hub to which the exception is associated.</param>
             <param name="message">The error message that explains the reason for the exception.</param>
             <param name="reason">The reason for the failure that resulted in the exception.</param>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.EventHubsException.#ctor(System.String,System.String,Azure.Messaging.EventHubs.EventHubsException.FailureReason)">
             <summary>
               Initializes a new instance of the <see cref="T:Azure.Messaging.EventHubs.EventHubsException"/> class, using the <paramref name="reason"/>
               to detect whether or not it should be transient.
             </summary>
            
             <param name="eventHubName">The name of the Event Hub to which the exception is associated.</param>
             <param name="message">The error message that explains the reason for the exception.</param>
             <param name="reason">The reason for the failure that resulted in the exception.</param>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.EventHubsException.#ctor(System.Boolean,System.String,System.String,System.Exception)">
             <summary>
               Initializes a new instance of the <see cref="T:Azure.Messaging.EventHubs.EventHubsException"/> class.
             </summary>
            
             <param name="isTransient"><c>true</c> if the exception should be considered transient; otherwise, <c>false</c>.</param>
             <param name="eventHubName">The name of the Event Hub to which the exception is associated.</param>
             <param name="message">The error message that explains the reason for the exception.</param>
             <param name="innerException">The exception that is the cause of the current exception, or a null reference if no inner exception is specified.</param>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.EventHubsException.#ctor(System.Boolean,System.String,System.String,Azure.Messaging.EventHubs.EventHubsException.FailureReason,System.Exception)">
             <summary>
               Initializes a new instance of the <see cref="T:Azure.Messaging.EventHubs.EventHubsException"/> class.
             </summary>
            
             <param name="isTransient"><c>true</c> if the exception should be considered transient; otherwise, <c>false</c>.</param>
             <param name="eventHubName">The name of the Event Hub to which the exception is associated.</param>
             <param name="message">The error message that explains the reason for the exception.</param>
             <param name="reason">The reason for the failure that resulted in the exception.</param>
             <param name="innerException">The exception that is the cause of the current exception, or a null reference if no inner exception is specified.</param>
            
        </member>
        <member name="T:Azure.Messaging.EventHubs.EventHubsException.FailureReason">
             <summary>
               The set of well-known reasons for an Event Hubs operation failure that
               was the cause of an exception.
             </summary>
            
        </member>
        <member name="F:Azure.Messaging.EventHubs.EventHubsException.FailureReason.GeneralError">
            <summary>The exception was the result of a general error within the client library.</summary>
        </member>
        <member name="F:Azure.Messaging.EventHubs.EventHubsException.FailureReason.ClientClosed">
            <summary>An operation has been attempted using an Event Hubs client instance which has already been closed.</summary>
        </member>
        <member name="F:Azure.Messaging.EventHubs.EventHubsException.FailureReason.ConsumerDisconnected">
            <summary>A client was forcefully disconnected from an Event Hub instance.  This typically occurs when another consumer with higher <see cref="P:Azure.Messaging.EventHubs.Consumer.ReadEventOptions.OwnerLevel" /> asserts ownership over the partition and consumer group.</summary>
        </member>
        <member name="F:Azure.Messaging.EventHubs.EventHubsException.FailureReason.ResourceNotFound">
            <summary>An Event Hubs resource, such as an Event Hub, consumer group, or partition cannot be found by the Event Hubs service.</summary>
        </member>
        <member name="F:Azure.Messaging.EventHubs.EventHubsException.FailureReason.MessageSizeExceeded">
            <summary>A message is larger than the maximum size allowed for its transport.</summary>
        </member>
        <member name="F:Azure.Messaging.EventHubs.EventHubsException.FailureReason.QuotaExceeded">
            <summary>The quota applied to an Event Hubs resource has been exceeded while interacting with the Azure Event Hubs service.</summary>
        </member>
        <member name="F:Azure.Messaging.EventHubs.EventHubsException.FailureReason.ServiceBusy">
            <summary>The Azure Event Hubs service reports that it is busy in response to a client request to perform an operation.</summary>
        </member>
        <member name="F:Azure.Messaging.EventHubs.EventHubsException.FailureReason.ServiceTimeout">
            <summary>An operation or other request timed out while interacting with the Azure Event Hubs service.</summary>
        </member>
        <member name="F:Azure.Messaging.EventHubs.EventHubsException.FailureReason.ServiceCommunicationProblem">
            <summary>There was a general communications error encountered when interacting with the Azure Event Hubs service.</summary>
        </member>
        <member name="T:Azure.Messaging.EventHubs.EventHubsRetryMode">
             <summary>
               The type of approach to apply when calculating the delay
               between retry attempts.
             </summary>
            
        </member>
        <member name="F:Azure.Messaging.EventHubs.EventHubsRetryMode.Fixed">
            <summary>Retry attempts happen at fixed intervals; each delay is a consistent duration.</summary>
        </member>
        <member name="F:Azure.Messaging.EventHubs.EventHubsRetryMode.Exponential">
            <summary>Retry attempts will delay based on a back-off strategy, where each attempt will increase the duration that it waits before retrying.</summary>
        </member>
        <member name="T:Azure.Messaging.EventHubs.EventHubsRetryOptions">
             <summary>
                The set of options that can be specified to influence how
                retry attempts are made, and a failure is eligible to be retried.
             </summary>
            
        </member>
        <member name="F:Azure.Messaging.EventHubs.EventHubsRetryOptions._maximumRetries">
            <summary>The maximum number of retry attempts before considering the associated operation to have failed.</summary>
        </member>
        <member name="F:Azure.Messaging.EventHubs.EventHubsRetryOptions._delay">
            <summary>The delay or back-off factor to apply between retry attempts.</summary>
        </member>
        <member name="F:Azure.Messaging.EventHubs.EventHubsRetryOptions._maximumDelay">
            <summary>The maximum delay to allow between retry attempts.</summary>
        </member>
        <member name="F:Azure.Messaging.EventHubs.EventHubsRetryOptions._tryTimeout">
            <summary>The maximum duration to wait for an operation, per attempt.</summary>
        </member>
        <member name="P:Azure.Messaging.EventHubs.EventHubsRetryOptions.Mode">
             <summary>
               The approach to use for calculating retry delays.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.EventHubsRetryOptions.MaximumRetries">
             <summary>
               The maximum number of retry attempts before considering the associated operation
               to have failed.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.EventHubsRetryOptions.Delay">
             <summary>
               The delay between retry attempts for a fixed approach or the delay
               on which to base calculations for a backoff-based approach.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.EventHubsRetryOptions.MaximumDelay">
             <summary>
               The maximum permissible delay between retry attempts.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.EventHubsRetryOptions.TryTimeout">
             <summary>
               The maximum duration to wait for completion of a single attempt, whether the initial
               attempt or a retry.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.EventHubsRetryOptions.CustomRetryPolicy">
             <summary>
               A custom retry policy to be used in place of the individual option values.
             </summary>
            
             <remarks>
               When populated, this custom policy will take precedence over the individual retry
               options provided.
             </remarks>
            
        </member>
        <member name="T:Azure.Messaging.EventHubs.EventHubsRetryPolicy">
             <summary>
               An abstract representation of a policy to govern retrying of messaging operations.
             </summary>
            
             <remarks>
               It is recommended that developers without advanced needs not implement custom retry
               policies but instead configure the default policy by specifying the desired set of
               retry options when creating one of the Event Hubs clients.
             </remarks>
            
             <seealso cref="T:Azure.Messaging.EventHubs.EventHubsRetryOptions"/>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.EventHubsRetryPolicy.CalculateTryTimeout(System.Int32)">
             <summary>
               Calculates the amount of time to allow the current attempt for an operation to
               complete before considering it to be timed out.
             </summary>
            
             <param name="attemptCount">The number of total attempts that have been made, including the initial attempt before any retries.</param>
            
             <returns>The amount of time to allow for an operation to complete.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.EventHubsRetryPolicy.CalculateRetryDelay(System.Exception,System.Int32)">
             <summary>
               Calculates the amount of time to wait before another attempt should be made.
             </summary>
            
             <param name="lastException">The last exception that was observed for the operation to be retried.</param>
             <param name="attemptCount">The number of total attempts that have been made, including the initial attempt before any retries.</param>
            
             <returns>The amount of time to delay before retrying the associated operation; if <c>null</c>, then the operation is no longer eligible to be retried.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.EventHubsRetryPolicy.Equals(System.Object)">
             <summary>
               Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
             </summary>
            
             <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            
             <returns><c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.EventHubsRetryPolicy.GetHashCode">
             <summary>
               Returns a hash code for this instance.
             </summary>
            
             <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.EventHubsRetryPolicy.ToString">
             <summary>
               Converts the instance to string representation.
             </summary>
            
             <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
            
        </member>
        <member name="T:Azure.Messaging.EventHubs.EventHubsTransportType">
             <summary>
               Specifies the type of protocol and transport that will be used for communicating with
               Azure Event Hubs.
             </summary>
            
        </member>
        <member name="F:Azure.Messaging.EventHubs.EventHubsTransportType.AmqpTcp">
            <summary>The connection uses the AMQP protocol over TCP.</summary>
        </member>
        <member name="F:Azure.Messaging.EventHubs.EventHubsTransportType.AmqpWebSockets">
            <summary>The connection uses the AMQP protocol over web sockets.</summary>
        </member>
        <member name="T:Azure.Messaging.EventHubs.PartitionProperties">
             <summary>
               A set of information for a single partition of an Event Hub.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.PartitionProperties.EventHubName">
             <summary>
               The name of the Event Hub where the partitions reside, specific to the
               Event Hubs namespace that contains it.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.PartitionProperties.Id">
             <summary>
               The identifier of the partition, unique to the Event Hub which contains it.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.PartitionProperties.BeginningSequenceNumber">
             <summary>
               The first sequence number available for events in the partition.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.PartitionProperties.LastEnqueuedSequenceNumber">
             <summary>
               The sequence number of the last observed event to be enqueued in the partition.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.PartitionProperties.LastEnqueuedOffset">
             <summary>
               The offset of the last observed event to be enqueued in the partition.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.PartitionProperties.LastEnqueuedTime">
             <summary>
               The date and time, in UTC, that the last observed event was enqueued in the partition.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.PartitionProperties.IsEmpty">
             <summary>
               Indicates whether or not the partition is currently empty.
             </summary>
            
             <value><c>true</c> if the partition is empty; otherwise, <c>false</c>.</value>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.PartitionProperties.#ctor(System.String,System.String,System.Boolean,System.Int64,System.Int64,System.Int64,System.DateTimeOffset)">
             <summary>
               Initializes a new instance of the <see cref="T:Azure.Messaging.EventHubs.PartitionProperties"/> class.
             </summary>
            
             <param name="eventHubName">The name of the Event Hub that contains the partitions.</param>
             <param name="partitionId">The identifier of the partition.</param>
             <param name="isEmpty">Indicates whether or not the partition is currently empty.</param>
             <param name="beginningSequenceNumber">The first sequence number available for events in the partition.</param>
             <param name="lastSequenceNumber">The sequence number observed the last event to be enqueued in the partition.</param>
             <param name="lastOffset">The offset of the last event to be enqueued in the partition.</param>
             <param name="lastEnqueuedTime">The date and time, in UTC, that the last event was enqueued in the partition.</param>
            
        </member>
        <member name="T:Azure.Messaging.EventHubs.Processor.PartitionClosingEventArgs">
             <summary>
               Contains information about the partition whose processing is being stopped.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Processor.PartitionClosingEventArgs.PartitionId">
             <summary>
               The identifier of the Event Hub partition this instance is associated with.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Processor.PartitionClosingEventArgs.Reason">
             <summary>
               The reason why the processing for the associated partition is being stopped.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Processor.PartitionClosingEventArgs.CancellationToken">
             <summary>
               A <see cref="P:Azure.Messaging.EventHubs.Processor.PartitionClosingEventArgs.CancellationToken"/> instance to signal the request to cancel the operation.
             </summary>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Processor.PartitionClosingEventArgs.#ctor(System.String,Azure.Messaging.EventHubs.Processor.ProcessingStoppedReason,System.Threading.CancellationToken)">
             <summary>
               Initializes a new instance of the <see cref="T:Azure.Messaging.EventHubs.Processor.PartitionClosingEventArgs"/> class.
             </summary>
            
             <param name="partitionId">The identifier of the Event Hub partition this instance is associated with.</param>
             <param name="reason">The reason why the processing for the associated partition is being stopped.</param>
             <param name="cancellationToken">A <see cref="P:Azure.Messaging.EventHubs.Processor.PartitionClosingEventArgs.CancellationToken"/> instance to signal the request to cancel the operation.</param>
            
        </member>
        <member name="T:Azure.Messaging.EventHubs.Processor.PartitionInitializingEventArgs">
             <summary>
               Contains information about a partition that an <c>EventProcessorClient</c> will be
               processing events from.  It can also be used to specify the position within a partition
               where the associated <c>EventProcessorClient</c> should begin reading events in case
               it cannot find a checkpoint.
             </summary>
            
             <seealso href="https://www.nuget.org/packages/Azure.Messaging.EventHubs.Processor" />
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Processor.PartitionInitializingEventArgs.PartitionId">
             <summary>
               The identifier of the partition whose processing is starting.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Processor.PartitionInitializingEventArgs.DefaultStartingPosition">
             <summary>
               The position within a partition where the associated <c>EventProcessorClient</c> should
               begin reading events when no checkpoint can be found.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Processor.PartitionInitializingEventArgs.CancellationToken">
             <summary>
               A <see cref="P:Azure.Messaging.EventHubs.Processor.PartitionInitializingEventArgs.CancellationToken"/> instance to signal the request to cancel the operation.
             </summary>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Processor.PartitionInitializingEventArgs.#ctor(System.String,Azure.Messaging.EventHubs.Consumer.EventPosition,System.Threading.CancellationToken)">
             <summary>
               Initializes a new instance of the <see cref="T:Azure.Messaging.EventHubs.Processor.PartitionInitializingEventArgs"/> class.
             </summary>
            
             <param name="partitionId">The identifier of the partition whose processing is starting.</param>
             <param name="defaultStartingPosition">The position within a partition where the associated <c>EventProcessorClient</c> should begin reading events when no checkpoint can be found.</param>
             <param name="cancellationToken">A <see cref="P:Azure.Messaging.EventHubs.Processor.PartitionInitializingEventArgs.CancellationToken"/> instance to signal the request to cancel the operation.</param>
            
        </member>
        <member name="T:Azure.Messaging.EventHubs.Processor.ProcessErrorEventArgs">
             <summary>
               Contains information about a partition whose processing threw an exception, as well as
               the exception that has been thrown.
             </summary>
            
             <seealso href="https://www.nuget.org/packages/Azure.Messaging.EventHubs.Processor" />
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Processor.ProcessErrorEventArgs.PartitionId">
             <summary>
               The identifier of the partition whose processing threw an exception.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Processor.ProcessErrorEventArgs.Operation">
             <summary>
               A short description of the operation that was being performed when the exception was thrown.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Processor.ProcessErrorEventArgs.Exception">
             <summary>
               The exception that was thrown by the <c>EventProcessorClient</c>.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Processor.ProcessErrorEventArgs.CancellationToken">
             <summary>
               A <see cref="P:Azure.Messaging.EventHubs.Processor.ProcessErrorEventArgs.CancellationToken"/> instance to signal the request to cancel the operation.
             </summary>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Processor.ProcessErrorEventArgs.#ctor(System.String,System.String,System.Exception,System.Threading.CancellationToken)">
             <summary>
               Initializes a new instance of the <see cref="T:Azure.Messaging.EventHubs.Processor.ProcessErrorEventArgs"/> structure.
             </summary>
            
             <param name="partitionId">The identifier of the partition whose processing threw an exception.</param>
             <param name="operation">A short description of the operation that was being performed when the exception was thrown.</param>
             <param name="exception">The exception that was thrown by the <c>EventProcessorClient</c>.</param>
             <param name="cancellationToken">A <see cref="P:Azure.Messaging.EventHubs.Processor.ProcessErrorEventArgs.CancellationToken"/> instance to signal the request to cancel the operation.</param>
            
        </member>
        <member name="T:Azure.Messaging.EventHubs.Processor.ProcessEventArgs">
             <summary>
               Contains information about a partition that has attempted to receive an event from the Azure Event Hub
               service in an <c>EventProcessorClient</c> context, as well as the received event, if any.  It
               also provides a way of creating a checkpoint based on the information contained in the associated event.
             </summary>
            
             <seealso href="https://www.nuget.org/packages/Azure.Messaging.EventHubs.Processor" />
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Processor.ProcessEventArgs.HasEvent">
             <summary>
               Indicates whether or not the arguments contain an event to be processed.  In
               the case where no event is contained, then the context and creation of
               checkpoints are also unavailable.
             </summary>
            
             <value><c>true</c> if the arguments contain an event to be processed; otherwise, <c>false</c>.</value>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Processor.ProcessEventArgs.Partition">
             <summary>
               The context of the Event Hub partition this instance is associated with.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Processor.ProcessEventArgs.Data">
             <summary>
               The received event to be processed.  Expected to be <c>null</c> if the receive call has timed out.
             </summary>
            
             <remarks>
               Ownership of this data, including the memory that holds its <see cref="P:Azure.Messaging.EventHubs.EventData.Body" />,
               is assumed to transfer to consumers of the <see cref="T:Azure.Messaging.EventHubs.Processor.ProcessEventArgs" />.  It may be considered
               immutable and is safe to access so long as the reference is held.
             </remarks>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Processor.ProcessEventArgs.CancellationToken">
             <summary>
               A <see cref="T:System.Threading.CancellationToken"/> instance to signal the request to cancel the operation.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Processor.ProcessEventArgs.UpdateCheckpointAsyncImplementation">
             <summary>
               The callback to be called upon <see cref="M:Azure.Messaging.EventHubs.Processor.ProcessEventArgs.UpdateCheckpointAsync(System.Threading.CancellationToken)" /> call.
             </summary>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Processor.ProcessEventArgs.#ctor(Azure.Messaging.EventHubs.Consumer.PartitionContext,Azure.Messaging.EventHubs.EventData,System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task},System.Threading.CancellationToken)">
             <summary>
               Initializes a new instance of the <see cref="T:Azure.Messaging.EventHubs.Processor.ProcessEventArgs"/> structure.
             </summary>
            
             <param name="partition">The context of the Event Hub partition this instance is associated with.</param>
             <param name="data">The received event to be processed.  Expected to be <c>null</c> if the receive call has timed out.</param>
             <param name="updateCheckpointImplementation">The callback to be called upon <see cref="M:Azure.Messaging.EventHubs.Processor.ProcessEventArgs.UpdateCheckpointAsync(System.Threading.CancellationToken)" /> call.</param>
             <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> instance to signal the request to cancel the operation.</param>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Processor.ProcessEventArgs.UpdateCheckpointAsync(System.Threading.CancellationToken)">
             <summary>
               Updates the checkpoint for the <see cref="T:Azure.Messaging.EventHubs.Consumer.PartitionContext" /> and <see cref="T:Azure.Messaging.EventHubs.EventData" /> associated with
               this event.
             </summary>
            
             <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken"/> instance to signal the request to cancel the operation.</param>
            
             <exception cref="T:System.InvalidOperationException">Occurs when <see cref="P:Azure.Messaging.EventHubs.Processor.ProcessEventArgs.Partition" /> and <see cref="P:Azure.Messaging.EventHubs.Processor.ProcessEventArgs.Data" /> are <c>null</c>.</exception>
            
        </member>
        <member name="T:Azure.Messaging.EventHubs.Processor.ProcessingStoppedReason">
             <summary>
               The reason for stopping event processing for a given partition.
             </summary>
            
        </member>
        <member name="F:Azure.Messaging.EventHubs.Processor.ProcessingStoppedReason.Shutdown">
            <summary>A request was made to stop processing.</summary>
        </member>
        <member name="F:Azure.Messaging.EventHubs.Processor.ProcessingStoppedReason.OwnershipLost">
            <summary>The ownership of the associated partition was lost.</summary>
        </member>
        <member name="T:Azure.Messaging.EventHubs.Producer.CreateBatchOptions">
             <summary>
               The set of options that can be specified to influence the way in which an event batch
               behaves and is sent to the Event Hubs service.
             </summary>
            
        </member>
        <member name="F:Azure.Messaging.EventHubs.Producer.CreateBatchOptions._maximumSizeInBytes">
            <summary>The requested maximum size to allow for the batch, in bytes.</summary>
        </member>
        <member name="P:Azure.Messaging.EventHubs.Producer.CreateBatchOptions.MaximumSizeInBytes">
             <summary>
               The maximum size to allow for a single batch of events, in bytes.
             </summary>
            
             <value>
               The desired limit, in bytes, for the size of the associated event batch.  If <c>null</c>,
               the maximum size allowed by the active transport will be used.
             </value>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Producer.CreateBatchOptions.PartitionKey">
             <summary>
               Allows a hashing key to be provided for the batch of events, which instructs the Event Hubs
               service map this key to a specific partition but allowing the service to choose an arbitrary,
               partition for this batch of events and any other batches using the same partition hashing key.
            
               The selection of a partition is stable for a given partition hashing key.  Should any other
               batches of events be sent using the same exact partition hashing key, the Event Hubs service will
               route them all to the same partition.
            
               This should be specified only when there is a need to group events by partition, but there is
               flexibility into which partition they are routed. If ensuring that a batch of events is sent
               only to a specific partition, it is recommended that the identifier of the position be
               specified directly when sending the batch.
             </summary>
            
             <value>
               If the producer wishes to influence the automatic routing of events to partitions, the partition
               hashing key to associate with the event or batch of events; otherwise, <c>null</c>.
             </value>
            
             <remarks>
               If the <see cref="P:Azure.Messaging.EventHubs.Producer.CreateBatchOptions.PartitionKey" /> is specified, then no <see cref="P:Azure.Messaging.EventHubs.Producer.CreateBatchOptions.PartitionId" />
               may be set when sending.
             </remarks>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Producer.CreateBatchOptions.PartitionId">
             <summary>
               If specified, events will be published to this specific partition.  If the identifier is not
               specified, the Event Hubs service will be responsible for routing events automatically to an available partition.
             </summary>
            
             <value>
               If the producer wishes the events to be automatically routed to partitions, <c>null</c>; otherwise, the identifier
               of the desired partition.
             </value>
            
             <remarks>
               If the <see cref="P:Azure.Messaging.EventHubs.Producer.CreateBatchOptions.PartitionId" /> is specified, then no <see cref="P:Azure.Messaging.EventHubs.Producer.CreateBatchOptions.PartitionKey" />
               may be set when sending.
            
               <para>Allowing automatic routing of partitions is recommended when:</para>
               <para>- The sending of events needs to be highly available.</para>
               <para>- The event data should be evenly distributed among all available partitions.</para>
            
               If no partition is specified, the following rules are used for automatically selecting one:
               <para>1) Distribute the events equally amongst all available partitions using a round-robin approach.</para>
               <para>2) If a partition becomes unavailable, the Event Hubs service will automatically detect it and forward the message to another available partition.</para>
             </remarks>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Producer.CreateBatchOptions.Clone">
             <summary>
               Creates a new copy of the current <see cref="T:Azure.Messaging.EventHubs.Producer.CreateBatchOptions" />, cloning its attributes into a new instance.
             </summary>
            
             <returns>A new copy of <see cref="T:Azure.Messaging.EventHubs.Producer.CreateBatchOptions" />.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Producer.CreateBatchOptions.ToSendOptions">
             <summary>
               Converts the <see cref="T:Azure.Messaging.EventHubs.Producer.CreateBatchOptions" /> into an equivalent
               <see cref="T:Azure.Messaging.EventHubs.Producer.SendEventOptions" /> instance.
             </summary>
            
             <returns>A set of sending options equivalent to those represented by the batch options.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Producer.CreateBatchOptions.Equals(System.Object)">
             <summary>
               Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
             </summary>
            
             <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            
             <returns><c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Producer.CreateBatchOptions.GetHashCode">
             <summary>
               Returns a hash code for this instance.
             </summary>
            
             <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Producer.CreateBatchOptions.ToString">
             <summary>
               Converts the instance to string representation.
             </summary>
            
             <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
            
        </member>
        <member name="T:Azure.Messaging.EventHubs.Producer.EventDataBatch">
             <summary>
               A set of <see cref="T:Azure.Messaging.EventHubs.EventData" /> with size constraints known up-front,
               intended to be sent to the Event Hubs service as a single batch.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Producer.EventDataBatch.MaximumSizeInBytes">
             <summary>
               The maximum size allowed for the batch, in bytes.  This includes the events in the batch as
               well as any overhead for the batch itself when sent to the Event Hubs service.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Producer.EventDataBatch.SizeInBytes">
             <summary>
               The size of the batch, in bytes, as it will be sent to the Event Hubs
               service.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Producer.EventDataBatch.Count">
             <summary>
               The count of events contained in the batch.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Producer.EventDataBatch.SendOptions">
             <summary>
               The set of options that should be used when publishing the batch.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Producer.EventDataBatch.InnerBatch">
             <summary>
               The transport-specific batch responsible for performing the batch operations
               in a manner compatible with the associated <see cref="T:Azure.Messaging.EventHubs.Core.TransportProducer" />.
             </summary>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Producer.EventDataBatch.#ctor(Azure.Messaging.EventHubs.Core.TransportEventBatch,Azure.Messaging.EventHubs.Producer.SendEventOptions)">
             <summary>
               Initializes a new instance of the <see cref="T:Azure.Messaging.EventHubs.Producer.EventDataBatch"/> class.
             </summary>
            
             <param name="transportBatch">The  transport-specific batch responsible for performing the batch operations.</param>
             <param name="sendOptions">The set of options that should be used when publishing the batch.</param>
            
             <remarks>
               As an internal type, this class performs only basic sanity checks against its arguments.  It
               is assumed that callers are trusted and have performed deep validation.
            
               Any parameters passed are assumed to be owned by this instance and safe to mutate or dispose;
               creation of clones or otherwise protecting the parameters is assumed to be the purview of the
               caller.
             </remarks>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Producer.EventDataBatch.TryAdd(Azure.Messaging.EventHubs.EventData)">
             <summary>
               Attempts to add an event to the batch, ensuring that the size
               of the batch does not exceed its maximum.
             </summary>
            
             <param name="eventData">The event to attempt to add to the batch.</param>
            
             <returns><c>true</c> if the event was added; otherwise, <c>false</c>.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Producer.EventDataBatch.Dispose">
             <summary>
               Performs the task needed to clean up resources used by the <see cref="T:Azure.Messaging.EventHubs.Producer.EventDataBatch" />.
             </summary>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Producer.EventDataBatch.AsEnumerable``1">
             <summary>
               Represents the batch as an enumerable set of specific representations of an event.
             </summary>
            
             <typeparam name="T">The specific event representation being requested.</typeparam>
            
             <returns>The set of events as an enumerable of the requested type.</returns>
            
        </member>
        <member name="T:Azure.Messaging.EventHubs.Producer.EventHubProducerClient">
             <summary>
               A client responsible for publishing <see cref="T:Azure.Messaging.EventHubs.EventData" /> to a specific Event Hub,
               grouped together in batches.  Depending on the options specified when sending, events data
               may be automatically routed to an available partition or sent to a specifically requested partition.
             </summary>
            
             <remarks>
               Allowing automatic routing of partitions is recommended when:
               <para>- The sending of events needs to be highly available.</para>
               <para>- The event data should be evenly distributed among all available partitions.</para>
            
               If no partition is specified, the following rules are used for automatically selecting one:
               <para>1) Distribute the events equally amongst all available partitions using a round-robin approach.</para>
               <para>2) If a partition becomes unavailable, the Event Hubs service will automatically detect it and forward the message to another available partition.</para>
             </remarks>
            
        </member>
        <member name="F:Azure.Messaging.EventHubs.Producer.EventHubProducerClient.MinimumBatchSizeLimit">
            <summary>The minimum allowable size, in bytes, for a batch to be sent.</summary>
        </member>
        <member name="F:Azure.Messaging.EventHubs.Producer.EventHubProducerClient.DefaultSendOptions">
            <summary>The set of default publishing options to use when no specific options are requested.</summary>
        </member>
        <member name="P:Azure.Messaging.EventHubs.Producer.EventHubProducerClient.FullyQualifiedNamespace">
             <summary>
               The fully qualified Event Hubs namespace that the producer is associated with.  This is likely
               to be similar to <c>{yournamespace}.servicebus.windows.net</c>.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Producer.EventHubProducerClient.EventHubName">
             <summary>
               The name of the Event Hub that the producer is connected to, specific to the
               Event Hubs namespace that contains it.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Producer.EventHubProducerClient.IsClosed">
             <summary>
               Indicates whether or not this <see cref="T:Azure.Messaging.EventHubs.Producer.EventHubProducerClient"/> has been closed.
             </summary>
            
             <value>
               <c>true</c> if the client is closed; otherwise, <c>false</c>.
             </value>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Producer.EventHubProducerClient.OwnsConnection">
             <summary>
               Indicates whether the client has ownership of the associated <see cref="T:Azure.Messaging.EventHubs.EventHubConnection" />
               and should take responsibility for managing its lifespan.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Producer.EventHubProducerClient.RetryPolicy">
             <summary>
               The policy to use for determining retry behavior for when an operation fails.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Producer.EventHubProducerClient.Connection">
             <summary>
               The active connection to the Azure Event Hubs service, enabling client communications for metadata
               about the associated Event Hub and access to a transport-aware producer.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Producer.EventHubProducerClient.EventHubProducer">
             <summary>
               An abstracted Event Hub transport-specific producer that is associated with the
               Event Hub gateway rather than a specific partition; intended to perform delegated operations.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Producer.EventHubProducerClient.PartitionProducers">
             <summary>
               The set of active Event Hub transport-specific producers created by this client which are specific to
               a given partition; intended to perform delegated operations.
             </summary>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Producer.EventHubProducerClient.#ctor(System.String)">
             <summary>
               Initializes a new instance of the <see cref="T:Azure.Messaging.EventHubs.Producer.EventHubProducerClient"/> class.
             </summary>
            
             <param name="connectionString">The connection string to use for connecting to the Event Hubs namespace; it is expected that the Event Hub name and the shared key properties are contained in this connection string.</param>
            
             <remarks>
               If the connection string is copied from the Event Hubs namespace, it will likely not contain the name of the desired Event Hub,
               which is needed.  In this case, the name can be added manually by adding ";EntityPath=[[ EVENT HUB NAME ]]" to the end of the
               connection string.  For example, ";EntityPath=telemetry-hub".
            
               If you have defined a shared access policy directly on the Event Hub itself, then copying the connection string from that
               Event Hub will result in a connection string that contains the name.
             </remarks>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Producer.EventHubProducerClient.#ctor(System.String,Azure.Messaging.EventHubs.Producer.EventHubProducerClientOptions)">
             <summary>
               Initializes a new instance of the <see cref="T:Azure.Messaging.EventHubs.Producer.EventHubProducerClient"/> class.
             </summary>
            
             <param name="connectionString">The connection string to use for connecting to the Event Hubs namespace; it is expected that the Event Hub name and the shared key properties are contained in this connection string.</param>
             <param name="clientOptions">The set of options to use for this consumer.</param>
            
             <remarks>
               If the connection string is copied from the Event Hubs namespace, it will likely not contain the name of the desired Event Hub,
               which is needed.  In this case, the name can be added manually by adding ";EntityPath=[[ EVENT HUB NAME ]]" to the end of the
               connection string.  For example, ";EntityPath=telemetry-hub".
            
               If you have defined a shared access policy directly on the Event Hub itself, then copying the connection string from that
               Event Hub will result in a connection string that contains the name.
             </remarks>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Producer.EventHubProducerClient.#ctor(System.String,System.String)">
             <summary>
               Initializes a new instance of the <see cref="T:Azure.Messaging.EventHubs.Producer.EventHubProducerClient"/> class.
             </summary>
            
             <param name="connectionString">The connection string to use for connecting to the Event Hubs namespace; it is expected that the shared key properties are contained in this connection string, but not the Event Hub name.</param>
             <param name="eventHubName">The name of the specific Event Hub to associate the producer with.</param>
            
             <remarks>
               If the connection string is copied from the Event Hub itself, it will contain the name of the desired Event Hub,
               and can be used directly without passing the <paramref name="eventHubName" />.  The name of the Event Hub should be
               passed only once, either as part of the connection string or separately.
             </remarks>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Producer.EventHubProducerClient.#ctor(System.String,System.String,Azure.Messaging.EventHubs.Producer.EventHubProducerClientOptions)">
             <summary>
               Initializes a new instance of the <see cref="T:Azure.Messaging.EventHubs.Producer.EventHubProducerClient"/> class.
             </summary>
            
             <param name="connectionString">The connection string to use for connecting to the Event Hubs namespace; it is expected that the shared key properties are contained in this connection string, but not the Event Hub name.</param>
             <param name="eventHubName">The name of the specific Event Hub to associate the producer with.</param>
             <param name="clientOptions">A set of options to apply when configuring the producer.</param>
            
             <remarks>
               If the connection string is copied from the Event Hub itself, it will contain the name of the desired Event Hub,
               and can be used directly without passing the <paramref name="eventHubName" />.  The name of the Event Hub should be
               passed only once, either as part of the connection string or separately.
             </remarks>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Producer.EventHubProducerClient.#ctor(System.String,System.String,Azure.Core.TokenCredential,Azure.Messaging.EventHubs.Producer.EventHubProducerClientOptions)">
             <summary>
               Initializes a new instance of the <see cref="T:Azure.Messaging.EventHubs.Producer.EventHubProducerClient"/> class.
             </summary>
            
             <param name="fullyQualifiedNamespace">The fully qualified Event Hubs namespace to connect to.  This is likely to be similar to <c>{yournamespace}.servicebus.windows.net</c>.</param>
             <param name="eventHubName">The name of the specific Event Hub to associated the producer with.</param>
             <param name="credential">The Azure managed identity credential to use for authorization.  Access controls may be specified by the Event Hubs namespace or the requested Event Hub, depending on Azure configuration.</param>
             <param name="clientOptions">A set of options to apply when configuring the producer.</param>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Producer.EventHubProducerClient.#ctor(Azure.Messaging.EventHubs.EventHubConnection,Azure.Messaging.EventHubs.Producer.EventHubProducerClientOptions)">
             <summary>
               Initializes a new instance of the <see cref="T:Azure.Messaging.EventHubs.Producer.EventHubProducerClient"/> class.
             </summary>
            
             <param name="connection">The <see cref="T:Azure.Messaging.EventHubs.EventHubConnection" /> connection to use for communication with the Event Hubs service.</param>
             <param name="clientOptions">A set of options to apply when configuring the producer.</param>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Producer.EventHubProducerClient.#ctor(Azure.Messaging.EventHubs.EventHubConnection,Azure.Messaging.EventHubs.Core.TransportProducer)">
             <summary>
               Initializes a new instance of the <see cref="T:Azure.Messaging.EventHubs.Producer.EventHubProducerClient"/> class.
             </summary>
            
             <param name="connection">The connection to use as the basis for delegation of client-type operations.</param>
             <param name="transportProducer">The transport producer instance to use as the basis for service communication.</param>
            
             <remarks>
               This constructor is intended to be used internally for functional
               testing only.
             </remarks>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Producer.EventHubProducerClient.#ctor">
             <summary>
               Initializes a new instance of the <see cref="T:Azure.Messaging.EventHubs.Producer.EventHubProducerClient"/> class.
             </summary>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Producer.EventHubProducerClient.GetEventHubPropertiesAsync(System.Threading.CancellationToken)">
             <summary>
               Retrieves information about the Event Hub that the connection is associated with, including
               the number of partitions present and their identifiers.
             </summary>
            
             <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken"/> instance to signal the request to cancel the operation.</param>
            
             <returns>The set of information for the Event Hub that this client is associated with.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Producer.EventHubProducerClient.GetPartitionIdsAsync(System.Threading.CancellationToken)">
             <summary>
               Retrieves the set of identifiers for the partitions of an Event Hub.
             </summary>
            
             <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken"/> instance to signal the request to cancel the operation.</param>
            
             <returns>The set of identifiers for the partitions within the Event Hub that this client is associated with.</returns>
            
             <remarks>
               This method is synonymous with invoking <see cref="M:Azure.Messaging.EventHubs.Producer.EventHubProducerClient.GetEventHubPropertiesAsync(System.Threading.CancellationToken)" /> and reading the <see cref="P:Azure.Messaging.EventHubs.EventHubProperties.PartitionIds"/>
               property that is returned. It is offered as a convenience for quick access to the set of partition identifiers for the associated Event Hub.
               No new or extended information is presented.
             </remarks>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Producer.EventHubProducerClient.GetPartitionPropertiesAsync(System.String,System.Threading.CancellationToken)">
             <summary>
               Retrieves information about a specific partition for an Event Hub, including elements that describe the available
               events in the partition event stream.
             </summary>
            
             <param name="partitionId">The unique identifier of a partition associated with the Event Hub.</param>
             <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken"/> instance to signal the request to cancel the operation.</param>
            
             <returns>The set of information for the requested partition under the Event Hub this client is associated with.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Producer.EventHubProducerClient.SendAsync(Azure.Messaging.EventHubs.EventData,System.Threading.CancellationToken)">
             <summary>
               Sends an event to the associated Event Hub using a batched approach.  If the size of the event exceeds the
               maximum size of a single batch, an exception will be triggered and the send will fail.
             </summary>
            
             <param name="eventData">The event data to send.</param>
             <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken"/> instance to signal the request to cancel the operation.</param>
            
             <returns>A task to be resolved on when the operation has completed.</returns>
            
             <seealso cref="M:Azure.Messaging.EventHubs.Producer.EventHubProducerClient.SendAsync(Azure.Messaging.EventHubs.EventData,Azure.Messaging.EventHubs.Producer.SendEventOptions,System.Threading.CancellationToken)" />
             <seealso cref="M:Azure.Messaging.EventHubs.Producer.EventHubProducerClient.SendAsync(System.Collections.Generic.IEnumerable{Azure.Messaging.EventHubs.EventData},System.Threading.CancellationToken)" />
             <seealso cref="M:Azure.Messaging.EventHubs.Producer.EventHubProducerClient.SendAsync(System.Collections.Generic.IEnumerable{Azure.Messaging.EventHubs.EventData},Azure.Messaging.EventHubs.Producer.SendEventOptions,System.Threading.CancellationToken)" />
             <seealso cref="M:Azure.Messaging.EventHubs.Producer.EventHubProducerClient.SendAsync(Azure.Messaging.EventHubs.Producer.EventDataBatch,System.Threading.CancellationToken)" />
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Producer.EventHubProducerClient.SendAsync(Azure.Messaging.EventHubs.EventData,Azure.Messaging.EventHubs.Producer.SendEventOptions,System.Threading.CancellationToken)">
             <summary>
               Sends an event to the associated Event Hub using a batched approach.  If the size of the event exceeds the
               maximum size of a single batch, an exception will be triggered and the send will fail.
             </summary>
            
             <param name="eventData">The event data to send.</param>
             <param name="options">The set of options to consider when sending this batch.</param>
             <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken"/> instance to signal the request to cancel the operation.</param>
            
             <returns>A task to be resolved on when the operation has completed.</returns>
            
             <seealso cref="M:Azure.Messaging.EventHubs.Producer.EventHubProducerClient.SendAsync(Azure.Messaging.EventHubs.EventData,System.Threading.CancellationToken)" />
             <seealso cref="M:Azure.Messaging.EventHubs.Producer.EventHubProducerClient.SendAsync(System.Collections.Generic.IEnumerable{Azure.Messaging.EventHubs.EventData},System.Threading.CancellationToken)" />
             <seealso cref="M:Azure.Messaging.EventHubs.Producer.EventHubProducerClient.SendAsync(System.Collections.Generic.IEnumerable{Azure.Messaging.EventHubs.EventData},Azure.Messaging.EventHubs.Producer.SendEventOptions,System.Threading.CancellationToken)" />
             <seealso cref="M:Azure.Messaging.EventHubs.Producer.EventHubProducerClient.SendAsync(Azure.Messaging.EventHubs.Producer.EventDataBatch,System.Threading.CancellationToken)" />
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Producer.EventHubProducerClient.SendAsync(System.Collections.Generic.IEnumerable{Azure.Messaging.EventHubs.EventData},System.Threading.CancellationToken)">
             <summary>
               Sends a set of events to the associated Event Hub using a batched approach.  If the size of events exceed the
               maximum size of a single batch, an exception will be triggered and the send will fail.
             </summary>
            
             <param name="events">The set of event data to send.</param>
             <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken"/> instance to signal the request to cancel the operation.</param>
            
             <returns>A task to be resolved on when the operation has completed.</returns>
            
             <seealso cref="M:Azure.Messaging.EventHubs.Producer.EventHubProducerClient.SendAsync(System.Collections.Generic.IEnumerable{Azure.Messaging.EventHubs.EventData},Azure.Messaging.EventHubs.Producer.SendEventOptions,System.Threading.CancellationToken)"/>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Producer.EventHubProducerClient.SendAsync(System.Collections.Generic.IEnumerable{Azure.Messaging.EventHubs.EventData},Azure.Messaging.EventHubs.Producer.SendEventOptions,System.Threading.CancellationToken)">
             <summary>
               Sends a set of events to the associated Event Hub using a batched approach.  If the size of events exceed the
               maximum size of a single batch, an exception will be triggered and the send will fail.
             </summary>
            
             <param name="events">The set of event data to send.</param>
             <param name="options">The set of options to consider when sending this batch.</param>
             <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken"/> instance to signal the request to cancel the operation.</param>
            
             <returns>A task to be resolved on when the operation has completed.</returns>
            
             <seealso cref="M:Azure.Messaging.EventHubs.Producer.EventHubProducerClient.SendAsync(Azure.Messaging.EventHubs.EventData,System.Threading.CancellationToken)" />
             <seealso cref="M:Azure.Messaging.EventHubs.Producer.EventHubProducerClient.SendAsync(Azure.Messaging.EventHubs.EventData,Azure.Messaging.EventHubs.Producer.SendEventOptions,System.Threading.CancellationToken)" />
             <seealso cref="M:Azure.Messaging.EventHubs.Producer.EventHubProducerClient.SendAsync(System.Collections.Generic.IEnumerable{Azure.Messaging.EventHubs.EventData},System.Threading.CancellationToken)" />
             <seealso cref="M:Azure.Messaging.EventHubs.Producer.EventHubProducerClient.SendAsync(Azure.Messaging.EventHubs.Producer.EventDataBatch,System.Threading.CancellationToken)" />
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Producer.EventHubProducerClient.SendAsync(Azure.Messaging.EventHubs.Producer.EventDataBatch,System.Threading.CancellationToken)">
             <summary>
               Sends a set of events to the associated Event Hub using a batched approach.
             </summary>
            
             <param name="eventBatch">The set of event data to send. A batch may be created using <see cref="M:Azure.Messaging.EventHubs.Producer.EventHubProducerClient.CreateBatchAsync(System.Threading.CancellationToken)" />.</param>
             <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken"/> instance to signal the request to cancel the operation.</param>
            
             <returns>A task to be resolved on when the operation has completed.</returns>
            
             <seealso cref="M:Azure.Messaging.EventHubs.Producer.EventHubProducerClient.SendAsync(Azure.Messaging.EventHubs.EventData,System.Threading.CancellationToken)" />
             <seealso cref="M:Azure.Messaging.EventHubs.Producer.EventHubProducerClient.SendAsync(Azure.Messaging.EventHubs.EventData,Azure.Messaging.EventHubs.Producer.SendEventOptions,System.Threading.CancellationToken)" />
             <seealso cref="M:Azure.Messaging.EventHubs.Producer.EventHubProducerClient.SendAsync(System.Collections.Generic.IEnumerable{Azure.Messaging.EventHubs.EventData},System.Threading.CancellationToken)" />
             <seealso cref="M:Azure.Messaging.EventHubs.Producer.EventHubProducerClient.SendAsync(System.Collections.Generic.IEnumerable{Azure.Messaging.EventHubs.EventData},Azure.Messaging.EventHubs.Producer.SendEventOptions,System.Threading.CancellationToken)" />
             <seealso cref="M:Azure.Messaging.EventHubs.Producer.EventHubProducerClient.CreateBatchAsync(System.Threading.CancellationToken)" />
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Producer.EventHubProducerClient.CreateBatchAsync(System.Threading.CancellationToken)">
             <summary>
               Creates a size-constraint batch to which <see cref="T:Azure.Messaging.EventHubs.EventData" /> may be added using a try-based pattern.  If an event would
               exceed the maximum allowable size of the batch, the batch will not allow adding the event and signal that scenario using its
               return value.
            
               Because events that would violate the size constraint cannot be added, publishing a batch will not trigger an exception when
               attempting to send the events to the Event Hubs service.
             </summary>
            
             <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken"/> instance to signal the request to cancel the operation.</param>
            
             <returns>An <see cref="T:Azure.Messaging.EventHubs.Producer.EventDataBatch" /> with the default batch options.</returns>
            
             <seealso cref="M:Azure.Messaging.EventHubs.Producer.EventHubProducerClient.CreateBatchAsync(Azure.Messaging.EventHubs.Producer.CreateBatchOptions,System.Threading.CancellationToken)" />
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Producer.EventHubProducerClient.CreateBatchAsync(Azure.Messaging.EventHubs.Producer.CreateBatchOptions,System.Threading.CancellationToken)">
             <summary>
               Creates a size-constraint batch to which <see cref="T:Azure.Messaging.EventHubs.EventData" /> may be added using a try-based pattern.  If an event would
               exceed the maximum allowable size of the batch, the batch will not allow adding the event and signal that scenario using its
               return value.
            
               Because events that would violate the size constraint cannot be added, publishing a batch will not trigger an exception when
               attempting to send the events to the Event Hubs service.
             </summary>
            
             <param name="options">The set of options to consider when creating this batch.</param>
             <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken"/> instance to signal the request to cancel the operation.</param>
            
             <returns>An <see cref="T:Azure.Messaging.EventHubs.Producer.EventDataBatch" /> with the requested <paramref name="options"/>.</returns>
            
             <seealso cref="M:Azure.Messaging.EventHubs.Producer.EventHubProducerClient.CreateBatchAsync(Azure.Messaging.EventHubs.Producer.CreateBatchOptions,System.Threading.CancellationToken)" />
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Producer.EventHubProducerClient.CloseAsync(System.Threading.CancellationToken)">
             <summary>
               Closes the producer.
             </summary>
            
             <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken"/> instance to signal the request to cancel the operation.</param>
            
             <returns>A task to be resolved on when the operation has completed.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Producer.EventHubProducerClient.DisposeAsync">
             <summary>
               Performs the task needed to clean up resources used by the <see cref="T:Azure.Messaging.EventHubs.Producer.EventHubProducerClient" />,
               including ensuring that the client itself has been closed.
             </summary>
            
             <returns>A task to be resolved on when the operation has completed.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Producer.EventHubProducerClient.Equals(System.Object)">
             <summary>
               Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
             </summary>
            
             <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            
             <returns><c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Producer.EventHubProducerClient.GetHashCode">
             <summary>
               Returns a hash code for this instance.
             </summary>
            
             <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Producer.EventHubProducerClient.ToString">
             <summary>
               Converts the instance to string representation.
             </summary>
            
             <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Producer.EventHubProducerClient.CreateDiagnosticScope">
             <summary>
               Creates and configures a diagnostics scope to be used for instrumenting
               events.
             </summary>
            
             <returns>The requested <see cref="T:Azure.Core.Pipeline.DiagnosticScope" />.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Producer.EventHubProducerClient.InstrumentMessages(System.Collections.Generic.IEnumerable{Azure.Messaging.EventHubs.EventData})">
             <summary>
               Performs the actions needed to instrument a set of events.
             </summary>
            
             <param name="events">The events to instrument.</param>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Producer.EventHubProducerClient.AssertSinglePartitionReference(System.String,System.String)">
             <summary>
               Ensures that no more than a single partition reference is active.
             </summary>
            
             <param name="partitionId">The identifier of the partition to which the producer is bound.</param>
             <param name="partitionKey">The hash key for partition routing that was requested for a publish operation.</param>
            
        </member>
        <member name="T:Azure.Messaging.EventHubs.Producer.EventHubProducerClientOptions">
             <summary>
               The set of options that can be specified when creating an <see cref="T:Azure.Messaging.EventHubs.Producer.EventHubProducerClient" />
               to configure its behavior.
             </summary>
            
        </member>
        <member name="F:Azure.Messaging.EventHubs.Producer.EventHubProducerClientOptions._connectionOptions">
            <summary>The set of options to use for configuring the connection to the Event Hubs service.</summary>
        </member>
        <member name="F:Azure.Messaging.EventHubs.Producer.EventHubProducerClientOptions._retryOptions">
            <summary>The set of options to govern retry behavior and try timeouts.</summary>
        </member>
        <member name="P:Azure.Messaging.EventHubs.Producer.EventHubProducerClientOptions.ConnectionOptions">
             <summary>
               Gets or sets the options used for configuring the connection to the Event Hubs service.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Producer.EventHubProducerClientOptions.RetryOptions">
             <summary>
               The set of options to use for determining whether a failed operation should be retried and,
               if so, the amount of time to wait between retry attempts.  These options also control the
               amount of time allowed for publishing events and other interactions with the Event Hubs service.
             </summary>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Producer.EventHubProducerClientOptions.Equals(System.Object)">
             <summary>
               Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
             </summary>
            
             <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            
             <returns><c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Producer.EventHubProducerClientOptions.GetHashCode">
             <summary>
               Returns a hash code for this instance.
             </summary>
            
             <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Producer.EventHubProducerClientOptions.ToString">
             <summary>
               Converts the instance to string representation.
             </summary>
            
             <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Producer.EventHubProducerClientOptions.Clone">
             <summary>
               Creates a new copy of the current <see cref="T:Azure.Messaging.EventHubs.Producer.EventHubProducerClientOptions" />, cloning its attributes into a new instance.
             </summary>
            
             <returns>A new copy of <see cref="T:Azure.Messaging.EventHubs.Producer.EventHubProducerClientOptions" />.</returns>
            
        </member>
        <member name="T:Azure.Messaging.EventHubs.Producer.SendEventOptions">
             <summary>
               The set of options that can be specified to influence the way in which events
               are sent to the Event Hubs service.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Producer.SendEventOptions.PartitionKey">
             <summary>
               Allows a hashing key to be provided for the batch of events, which instructs the Event Hubs
               service map this key to a specific partition but allowing the service to choose an arbitrary,
               partition for this batch of events and any other batches using the same partition hashing key.
            
               The selection of a partition is stable for a given partition hashing key.  Should any other
               batches of events be sent using the same exact partition hashing key, the Event Hubs service will
               route them all to the same partition.
            
               This should be specified only when there is a need to group events by partition, but there is
               flexibility into which partition they are routed. If ensuring that a batch of events is sent
               only to a specific partition, it is recommended that the identifier of the position be
               specified directly when sending the batch.
             </summary>
            
             <value>
               If the producer wishes to influence the automatic routing of events to partitions, the partition
               hashing key to associate with the event or batch of events; otherwise, <c>null</c>.
             </value>
            
             <remarks>
               If the <see cref="P:Azure.Messaging.EventHubs.Producer.SendEventOptions.PartitionKey" /> is specified, then no <see cref="P:Azure.Messaging.EventHubs.Producer.SendEventOptions.PartitionId" />
               may be set when sending.
             </remarks>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.Producer.SendEventOptions.PartitionId">
             <summary>
               If specified, events be published to this specific partition.  If the identifier is not
               specified, the Event Hubs service will be responsible for routing events automatically to an available partition.
             </summary>
            
             <value>
               If the producer wishes the events to be automatically to partitions, <c>null</c>; otherwise, the identifier
               of the desired partition.
             </value>
            
             <remarks>
               If the <see cref="P:Azure.Messaging.EventHubs.Producer.SendEventOptions.PartitionId" /> is specified, then no <see cref="P:Azure.Messaging.EventHubs.Producer.SendEventOptions.PartitionKey" />
               may be set when sending.
            
               <para>Allowing automatic routing of partitions is recommended when:</para>
               <para>- The sending of events needs to be highly available.</para>
               <para>- The event data should be evenly distributed among all available partitions.</para>
            
               If no partition is specified, the following rules are used for automatically selecting one:
               <para>1) Distribute the events equally amongst all available partitions using a round-robin approach.</para>
               <para>2) If a partition becomes unavailable, the Event Hubs service will automatically detect it and forward the message to another available partition.</para>
             </remarks>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Producer.SendEventOptions.#ctor">
             <summary>
               Initializes a new instance of the <see cref="T:Azure.Messaging.EventHubs.Producer.SendEventOptions"/> class.
             </summary>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Producer.SendEventOptions.#ctor(System.String,System.String)">
             <summary>
               Initializes a new instance of the <see cref="T:Azure.Messaging.EventHubs.Producer.SendEventOptions"/> class.
             </summary>
            
             <param name="partitionId">The identifier of the partition to which events should be sent.</param>
             <param name="partitionKey">The hashing key to use for influencing the partition to which the events are routed.</param>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Producer.SendEventOptions.Equals(System.Object)">
             <summary>
               Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
             </summary>
            
             <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            
             <returns><c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Producer.SendEventOptions.GetHashCode">
             <summary>
               Returns a hash code for this instance.
             </summary>
            
             <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.Producer.SendEventOptions.ToString">
             <summary>
               Converts the instance to string representation.
             </summary>
            
             <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
            
        </member>
        <member name="F:Azure.Messaging.EventHubs.ResourcesNamespace.Current">
            <summary>The default namespace of the local assembly; this is where the embedded resources appear.</summary>
        </member>
        <member name="T:Azure.Messaging.EventHubs.EventHubSharedKeyCredential">
             <summary>
               Provides a credential based on a shared access signature for a given
               Event Hub instance.
             </summary>
            
             <seealso cref="T:Azure.Core.TokenCredential" />
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.EventHubSharedKeyCredential.SharedAccessKeyName">
             <summary>
               The name of the shared access key to be used for authorization, as
               reported by the Azure portal.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.EventHubSharedKeyCredential.SharedAccessKey">
             <summary>
               The value of the shared access key to be used for authorization, as
               reported by the Azure portal.
             </summary>
            
        </member>
        <member name="P:Azure.Messaging.EventHubs.EventHubSharedKeyCredential.SharedAccessSignatureCredential">
             <summary>
               A reference to a corresponding SharedAccessSignatureCredential.
             </summary>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.EventHubSharedKeyCredential.#ctor(System.String,System.String)">
             <summary>
               Initializes a new instance of the <see cref="T:Azure.Messaging.EventHubs.EventHubSharedKeyCredential"/> class.
             </summary>
            
             <param name="sharedAccessKeyName">The name of the shared access key to be used for authorization, as reported by the Azure portal.</param>
             <param name="sharedAccessKey">The value of the shared access key to be used for authorization, as reported by the Azure portal.</param>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.EventHubSharedKeyCredential.GetToken(Azure.Core.TokenRequestContext,System.Threading.CancellationToken)">
             <summary>
               Retrieves the token that represents the shared access signature credential, for
               use in authorization against an Event Hub.
             </summary>
            
             <param name="requestContext">The details of the authentication request.</param>
             <param name="cancellationToken">The token used to request cancellation of the operation.</param>
            
             <returns>The token representing the shared access signature for this credential.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.EventHubSharedKeyCredential.GetTokenAsync(Azure.Core.TokenRequestContext,System.Threading.CancellationToken)">
             <summary>
               Retrieves the token that represents the shared access signature credential, for
               use in authorization against an Event Hub.
             </summary>
            
             <param name="requestContext">The details of the authentication request.</param>
             <param name="cancellationToken">The token used to request cancellation of the operation.</param>
            
             <returns>The token representing the shared access signature for this credential.</returns>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.EventHubSharedKeyCredential.UpdateSharedAccessKey(System.String,System.String)">
             <summary>
               Allows the rotation of Shared Access Signatures.
             </summary>
            
             <param name="keyName">The name of the shared access key that the signature should be based on.</param>
             <param name="keyValue">The value of the shared access key for the signature.</param>
            
        </member>
        <member name="M:Azure.Messaging.EventHubs.EventHubSharedKeyCredential.AsSharedAccessSignatureCredential(System.String,System.Nullable{System.TimeSpan})">
             <summary>
               Coverts to shared access signature credential.
               It retains a reference to the generated SharedAccessSignatureCredential.
             </summary>
            
             <param name="eventHubResource">The Event Hubs resource to which the token is intended to serve as authorization.</param>
             <param name="signatureValidityDuration">The duration that the signature should be considered valid; if not specified, a default will be assumed.</param>
            
             <returns>A new <see cref="P:Azure.Messaging.EventHubs.EventHubSharedKeyCredential.SharedAccessSignatureCredential" /> based on the requested shared access key.</returns>
            
        </member>
        <member name="T:Azure.Messaging.EventHubs.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Azure.Messaging.EventHubs.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Azure.Messaging.EventHubs.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Azure.Messaging.EventHubs.Resources.CannotParseIntegerType">
            <summary>
              Looks up a localized string similar to The {0} value is expected to be a {1} bit signed integer. Actual value: &apos;{2}&apos;..
            </summary>
        </member>
        <member name="P:Azure.Messaging.EventHubs.Resources.CannotSendWithPartitionIdAndPartitionKey">
            <summary>
              Looks up a localized string similar to A producer created for a specific partition cannot send events using a partition key. This producer is associated with partition &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Azure.Messaging.EventHubs.Resources.CannotStartEventProcessorWithoutHandler">
            <summary>
              Looks up a localized string similar to Cannot begin processing without {0} handler set..
            </summary>
        </member>
        <member name="P:Azure.Messaging.EventHubs.Resources.ClientNeededForThisInformation">
            <summary>
              Looks up a localized string similar to The Event Hub client responsible for this information.
            </summary>
        </member>
        <member name="P:Azure.Messaging.EventHubs.Resources.ClosedConnectionCannotPerformOperation">
            <summary>
              Looks up a localized string similar to {0} has already been closed and cannot perform the requested operation..
            </summary>
        </member>
        <member name="P:Azure.Messaging.EventHubs.Resources.ClosedInstanceCannotPerformOperation">
            <summary>
              Looks up a localized string similar to {0} has already been closed and cannot perform the requested operation..
            </summary>
        </member>
        <member name="P:Azure.Messaging.EventHubs.Resources.ConsumerIdentifierOverMaxValue">
            <summary>
              Looks up a localized string similar to The &apos;identifier&apos; parameter exceeds the maximum allowed size of {0} characters..
            </summary>
        </member>
        <member name="P:Azure.Messaging.EventHubs.Resources.CouldNotAcquireAccessToken">
            <summary>
              Looks up a localized string similar to Unable to acquire an access token using the provided credential..
            </summary>
        </member>
        <member name="P:Azure.Messaging.EventHubs.Resources.CouldNotCreateLink">
            <summary>
              Looks up a localized string similar to Unable to create the items needed to communicate with the Event Hubs service..
            </summary>
        </member>
        <member name="P:Azure.Messaging.EventHubs.Resources.FailedToCreateReader">
            <summary>
              Looks up a localized string similar to Could not create a reader of events for Event Hub: &apos;{0}&apos;, partition: &apos;{1}&apos;, consumer group: &apos;{2}&apos;..
            </summary>
        </member>
        <member name="P:Azure.Messaging.EventHubs.Resources.FailedToSerializeUnsupportedType">
            <summary>
              Looks up a localized string similar to Serialization failed due to an unsupported type, {0}..
            </summary>
        </member>
        <member name="P:Azure.Messaging.EventHubs.Resources.InvalidConnectionString">
            <summary>
              Looks up a localized string similar to The connection string could not be parsed; either it was malformed or contains no well-known tokens..
            </summary>
        </member>
        <member name="P:Azure.Messaging.EventHubs.Resources.InvalidEncoding">
            <summary>
              Looks up a localized string similar to The string has an invalid encoding format..
            </summary>
        </member>
        <member name="P:Azure.Messaging.EventHubs.Resources.InvalidEventPositionForFilter">
            <summary>
              Looks up a localized string similar to The event position is not valid for filtering.  It must have an offset, sequence number, or enqueued time available to filter against..
            </summary>
        </member>
        <member name="P:Azure.Messaging.EventHubs.Resources.InvalidMessageBody">
            <summary>
              Looks up a localized string similar to An invalid message body was encountered.  Either the body was null or an incorrect type. Expected: {0}.
            </summary>
        </member>
        <member name="P:Azure.Messaging.EventHubs.Resources.InvalidSharedAccessSignature">
            <summary>
              Looks up a localized string similar to The shared access signature could not be parsed; it was either malformed or incorrectly encoded..
            </summary>
        </member>
        <member name="P:Azure.Messaging.EventHubs.Resources.InvalidTimePeriod">
            <summary>
              Looks up a localized string similar to The time period may not be Zero or Infinite..
            </summary>
        </member>
        <member name="P:Azure.Messaging.EventHubs.Resources.InvalidTransportType">
            <summary>
              Looks up a localized string similar to The requested transport type, &apos;{0}&apos; is not supported..
            </summary>
        </member>
        <member name="P:Azure.Messaging.EventHubs.Resources.MessageSizeExceeded">
            <summary>
              Looks up a localized string similar to The message (id:{0}, size:{1} bytes) is larger than is currently allowed ({2} bytes)..
            </summary>
        </member>
        <member name="P:Azure.Messaging.EventHubs.Resources.MissingConnectionInformation">
            <summary>
              Looks up a localized string similar to The connection string used for an Event Hub client must specify the Event Hubs namespace host, and a Shared Access Signature (both the name and value) to be valid. The path to an Event Hub must be included in the connection string or specified separately..
            </summary>
        </member>
        <member name="P:Azure.Messaging.EventHubs.Resources.OnlyOneEventHubNameMayBeSpecified">
            <summary>
              Looks up a localized string similar to The path to an Event Hub may be specified as part of the connection string or as a separate value, but not both..
            </summary>
        </member>
        <member name="P:Azure.Messaging.EventHubs.Resources.ProxyMustUseWebSockets">
            <summary>
              Looks up a localized string similar to A proxy may only be used for a web sockets connection..
            </summary>
        </member>
        <member name="P:Azure.Messaging.EventHubs.Resources.ResourceMustMatchSharedAccessSignature">
            <summary>
              Looks up a localized string similar to The requested resource, &apos;{0}&apos;, does not match the resource of the shared access signature, &apos;{1}&apos;. A token cannot be issued..
            </summary>
        </member>
        <member name="P:Azure.Messaging.EventHubs.Resources.RetryOptionsMustBeSet">
            <summary>
              Looks up a localized string similar to Retry options must be specified; if no retry is desired, please set the maximum number of retries to 0. To provide a custom retry policy, please assign it on the client directly..
            </summary>
        </member>
        <member name="P:Azure.Messaging.EventHubs.Resources.RunningEventProcessorCannotPerformOperation">
            <summary>
              Looks up a localized string similar to The event processor is already running and needs to be stopped in order to perform this operation..
            </summary>
        </member>
        <member name="P:Azure.Messaging.EventHubs.Resources.SharedAccessKeyIsRequired">
            <summary>
              Looks up a localized string similar to In order to update the signature, a shared access key must have been provided when the shared access signature was created..
            </summary>
        </member>
        <member name="P:Azure.Messaging.EventHubs.Resources.SharedKeyCredentialCannotGenerateTokens">
            <summary>
              Looks up a localized string similar to A shared key credential is unable to generate a token directly. Please use this credential when creating an Event Hub Client, for proper generation of shared key tokens..
            </summary>
        </member>
        <member name="P:Azure.Messaging.EventHubs.Resources.TimeoutMustBePositive">
            <summary>
              Looks up a localized string similar to A timeout value must be positive. To request using the default timeout, please use TimeSpan.Zero or null..
            </summary>
        </member>
        <member name="P:Azure.Messaging.EventHubs.Resources.TimeSpanMustBeNonNegative">
            <summary>
              Looks up a localized string similar to Argument {0} must be a non-negative timespan value. The provided value was {1}..
            </summary>
        </member>
        <member name="P:Azure.Messaging.EventHubs.Resources.TrackLastEnqueuedEventPropertiesNotSet">
            <summary>
              Looks up a localized string similar to This information is only available when TrackLastEnqueuedEventProperties is set on the Event Hub consumer options..
            </summary>
        </member>
        <member name="P:Azure.Messaging.EventHubs.Resources.UnknownCommunicationException">
            <summary>
              Looks up a localized string similar to An unknown error was encountered while communicating with the Event Hubs service..
            </summary>
        </member>
        <member name="P:Azure.Messaging.EventHubs.Resources.UnknownConnectionType">
            <summary>
              Looks up a localized string similar to The specified connection type, &quot;{0}&quot;, is not recognized as valid in this context..
            </summary>
        </member>
        <member name="P:Azure.Messaging.EventHubs.Resources.UnknownRetryMode">
            <summary>
              Looks up a localized string similar to The requested retry mode, &apos;{0}&apos;, is not known; a retry delay canot be determined..
            </summary>
        </member>
        <member name="P:Azure.Messaging.EventHubs.Resources.UnrecoverableException">
            <summary>
              Looks up a localized string similar to An unrecoverable exception was encountered that left the environment in a bad state..
            </summary>
        </member>
        <member name="P:Azure.Messaging.EventHubs.Resources.UnsupportedCredential">
            <summary>
              Looks up a localized string similar to The credential is not a known and supported credential type. Please use a JWT credential or shared key credential..
            </summary>
        </member>
        <member name="P:Azure.Messaging.EventHubs.Resources.UnsupportedTransportEventType">
            <summary>
              Looks up a localized string similar to The requested transport event type, &apos;{0}&apos;, is not supported by the active transport client..
            </summary>
        </member>
        <member name="P:Azure.Messaging.EventHubs.Resources.ValueMustBeAtLeast">
            <summary>
              Looks up a localized string similar to The value supplied must be greater than or equal to {0}..
            </summary>
        </member>
        <member name="P:Azure.Messaging.EventHubs.Resources.ValueOutOfRange">
            <summary>
              Looks up a localized string similar to The value supplied must be between {0} and {1}..
            </summary>
        </member>
        <member name="P:Azure.Messaging.EventHubs.Resources.BlobsResourceDoesNotExist">
            <summary>
              Looks up a localized string similar to The Azure Storage Blobs container or blob used by the Event Processor Client does not exist..
            </summary>
        </member>
        <member name="P:Azure.Messaging.EventHubs.Resources.CannotCreateCheckpointForEmptyEvent">
            <summary>
              Looks up a localized string similar to A checkpoint cannot be created or updated using an empty event..
            </summary>
        </member>
        <member name="P:Azure.Messaging.EventHubs.Resources.HandlerHasAlreadyBeenAssigned">
            <summary>
              Looks up a localized string similar to Another handler has already been assigned to this event and there can be only one..
            </summary>
        </member>
        <member name="P:Azure.Messaging.EventHubs.Resources.HandlerHasNotBeenAssigned">
            <summary>
              Looks up a localized string similar to This handler has not been previously assigned to this event..
            </summary>
        </member>
        <member name="P:Azure.Messaging.EventHubs.Resources.OperationListOwnership">
            <summary>
              Looks up a localized string similar to Retrieving list of ownership from the storage service..
            </summary>
        </member>
        <member name="P:Azure.Messaging.EventHubs.Resources.OperationGetPartitionIds">
            <summary>
              Looks up a localized string similar to Retrieving list of partition identifiers from a Consumer Client..
            </summary>
        </member>
        <member name="P:Azure.Messaging.EventHubs.Resources.OperationListCheckpoints">
            <summary>
              Looks up a localized string similar to Retrieving list of checkpoints from the storage service..
            </summary>
        </member>
        <member name="P:Azure.Messaging.EventHubs.Resources.OperationClaimOwnership">
            <summary>
              Looks up a localized string similar to Attempting to claim a new ownership in the storage service..
            </summary>
        </member>
        <member name="P:Azure.Messaging.EventHubs.Resources.OperationRenewOwnership">
            <summary>
              Looks up a localized string similar to Attempting to renew all of the processor's partition ownership in the storage service..
            </summary>
        </member>
        <member name="P:Azure.Messaging.EventHubs.Resources.OperationReadEvents">
            <summary>
              Looks up a localized string similar to Reading events from the Event Hubs service..
            </summary>
        </member>
        <member name="P:Azure.Messaging.EventHubs.Resources.CannotReadLastEnqueuedEventPropertiesWithoutEvent">
            <summary>
              Looks up a localized string similar to The last enqueued event properties cannot be read when an event is not available..
            </summary>
        </member>
        <member name="T:Azure.Core.Argument">
             <summary>
               Provides a consistent means for verifying arguments and other invariants for a given
               member.
             </summary>
            
             <remarks>
               This class extends the <see cref="T:Azure.Core.Argument" /> type, referenced as a partial
               class via shared source; the base partial class definition may be found in the "SharedSource"
               folder of this project.
             </remarks>
            
            <summary>
            Argument validation.
            </summary>
            <remarks>
              <para>This class should be shared via source using Azure.Core.props and contain only common argument validation.
                It is declared partial so that you can use the same familiar class name but extend it with project-specific validation.
                To extend the functionality of this class, just declare your own partial <see cref="T:Azure.Core.Argument"/> class with project-specific methods.
              </para>
              <para>
                Be sure to document exceptions thrown by these methods on your public methods.
              </para>
            </remarks>
        </member>
        <member name="M:Azure.Core.Argument.AssertNotEmptyOrWhiteSpace(System.String,System.String)">
             <summary>
               Ensures that an argument's value is a string comprised of only whitespace, though
               <c>null</c> is considered a valid value.  An <see cref="T:System.ArgumentException" /> is thrown
               if that invariant is not met.
             </summary>
            
             <param name="argumentValue">The value of the argument to verify.</param>
             <param name="argumentName">The name of the argument being considered.</param>
            
             <exception cref="T:System.ArgumentException">The argument is empty or contains only white-space.</exception>
            
        </member>
        <member name="M:Azure.Core.Argument.AssertNotTooLong(System.String,System.Int32,System.String)">
             <summary>
               Ensures that a string argument's length is below a maximum allowed threshold,
               throwing an <see cref="T:System.ArgumentOutOfRangeException" /> if that invariant is not met.
             </summary>
            
             <param name="argumentValue">The value of the argument to verify.</param>
             <param name="maximumLength">The maximum allowable length for the <paramref name="argumentValue"/>; its length must be less than or equal to this value.</param>
             <param name="argumentName">The name of the argument being considered.</param>
            
             <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="argumentValue"/> exceeds <paramref name="maximumLength"/> characters.</exception>
            
        </member>
        <member name="M:Azure.Core.Argument.AssertNotNegative(System.TimeSpan,System.String)">
             <summary>
               Ensures that an argument's value is not a negative value, throwing an
               <see cref="T:System.ArgumentOutOfRangeException" /> if that invariant is not met.
             </summary>
            
             <param name="argumentValue">The value of the argument to verify.</param>
             <param name="argumentName">The name of the argument being considered.</param>
            
             <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="argumentValue"/> is a negative <see cref="T:System.TimeSpan"/> value.</exception>
            
        </member>
        <member name="M:Azure.Core.Argument.AssertAtLeast(System.Int64,System.Int64,System.String)">
             <summary>
               Ensures that an argument's value is at least as large as a given lower bound, throwing
               <see cref="T:System.ArgumentException" /> if that invariant is not met.
             </summary>
            
             <param name="argumentValue">The value of the argument to verify.</param>
             <param name="minimumValue">The minimum to use for comparison; <paramref name="argumentValue"/> must be greater than or equal to this value.</param>
             <param name="argumentName">The name of the argument being considered.</param>
            
             <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="argumentValue"/> is less than <paramref name="minimumValue"/>.</exception>
            
        </member>
        <member name="M:Azure.Core.Argument.AssertNotDisposed(System.Boolean,System.String)">
             <summary>
               Ensures that an instance has not been disposed, throwing an
               <see cref="T:System.ObjectDisposedException" /> if that invariant is not met.
             </summary>
            
             <param name="wasDisposed"><c>true</c> if the target instance has been disposed; otherwise, <c>false</c>.</param>
             <param name="targetName">The name of the target instance that is being verified.</param>
            
        </member>
        <member name="M:Azure.Core.Argument.AssertNotClosed(System.Boolean,System.String)">
             <summary>
               Ensures that an instance has not been closed, throwing an
               <see cref="T:Azure.Messaging.EventHubs.EventHubsException" /> if that invariant is not met.
             </summary>
            
             <param name="wasClosed"><c>true</c> if the target instance has been closed; otherwise, <c>false</c>.</param>
             <param name="targetName">The name of the target instance that is being verified.</param>
            
        </member>
        <member name="M:Azure.Core.Argument.AssertNotNull``1(``0,System.String)">
            <summary>
            Throws if <paramref name="value"/> is null.
            </summary>
            <param name="value">The value to validate.</param>
            <param name="name">The name of the parameter.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="value"/> is null.</exception>
        </member>
        <member name="M:Azure.Core.Argument.AssertNotNull``1(System.Nullable{``0},System.String)">
            <summary>
            Throws if <paramref name="value"/> has not been initialized.
            </summary>
            <param name="value">The value to validate.</param>
            <param name="name">The name of the parameter.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="value"/> has not been initialized.</exception>
        </member>
        <member name="M:Azure.Core.Argument.AssertNotNullOrEmpty``1(System.Collections.Generic.IEnumerable{``0},System.String)">
            <summary>
            Throws if <paramref name="value"/> is null or an empty collection.
            </summary>
            <param name="value">The value to validate.</param>
            <param name="name">The name of the parameter.</param>
            <exception cref="T:System.ArgumentException"><paramref name="value"/> is an empty collection.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="value"/> is null.</exception>
        </member>
        <member name="M:Azure.Core.Argument.AssertNotNullOrEmpty(System.String,System.String)">
            <summary>
            Throws if <paramref name="value"/> is null or an empty string.
            </summary>
            <param name="value">The value to validate.</param>
            <param name="name">The name of the parameter.</param>
            <exception cref="T:System.ArgumentException"><paramref name="value"/> is an empty string.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="value"/> is null.</exception>
        </member>
        <member name="M:Azure.Core.Argument.AssertNotNullOrWhiteSpace(System.String,System.String)">
            <summary>
            Throws if <paramref name="value"/> is null, an empty string, or consists only of white-space characters.
            </summary>
            <param name="value">The value to validate.</param>
            <param name="name">The name of the parameter.</param>
            <exception cref="T:System.ArgumentException"><paramref name="value"/> is an empty string or consists only of white-space characters.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="value"/> is null.</exception>
        </member>
        <member name="M:Azure.Core.Argument.AssertNotDefault``1(``0@,System.String)">
            <summary>
            Throws if <paramref name="value"/> is the default value for type <typeparamref name="T"/>.
            </summary>
            <typeparam name="T">The type of structure to validate which implements <see cref="T:System.IEquatable`1"/>.</typeparam>
            <param name="value">The value to validate.</param>
            <param name="name">The name of the parameter.</param>
            <exception cref="T:System.ArgumentException"><paramref name="value"/> is the default value for type <typeparamref name="T"/>.</exception>
        </member>
        <member name="M:Azure.Core.Argument.AssertInRange``1(``0,``0,``0,System.String)">
            <summary>
            Throws if <paramref name="value"/> is less than the <paramref name="minimum"/> or greater than the <paramref name="maximum"/>.
            </summary>
            <typeparam name="T">The type of to validate which implements <see cref="T:System.IComparable`1"/>.</typeparam>
            <param name="value">The value to validate.</param>
            <param name="minimum">The minimum value to compare.</param>
            <param name="maximum">The maximum value to compare.</param>
            <param name="name">The name of the parameter.</param>
        </member>
        <member name="T:Azure.Core.Pipeline.ActivityExtensions">
            <summary>
            HACK HACK HACK. Some runtime environments like Azure.Functions downgrade System.Diagnostic.DiagnosticSource package version causing method not found exceptions in customer apps
            This type is a temporary workaround to avoid the issue.
            </summary>
        </member>
        <member name="T:Azure.Core.HashCodeBuilder">
            <summary>
            Copied from https://github.com/dotnet/corefx/blob/master/src/Common/src/CoreLib/System/HashCode.cs.
            </summary>
        </member>
        <member name="T:Microsoft.Extensions.Azure.EventHubClientBuilderExtensions">
            <summary>
               The set of extensions to add the Event Hub client types to the clients builder
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.Azure.EventHubClientBuilderExtensions.AddEventHubProducerClient``1(``0,System.String)">
             <summary>
               Registers a <see cref="T:Azure.Messaging.EventHubs.Producer.EventHubProducerClient"/> instance with the provided <paramref name="connectionString"/>
             </summary>
            
        </member>
        <member name="M:Microsoft.Extensions.Azure.EventHubClientBuilderExtensions.AddEventHubProducerClient``1(``0,System.String,System.String)">
             <summary>
               Registers a <see cref="T:Azure.Messaging.EventHubs.Producer.EventHubProducerClient"/> instance with the provided <paramref name="connectionString"/> and <paramref name="eventHubName"/>
             </summary>
            
        </member>
        <member name="M:Microsoft.Extensions.Azure.EventHubClientBuilderExtensions.AddEventHubProducerClientWithNamespace``1(``0,System.String,System.String)">
             <summary>
               Registers a <see cref="T:Azure.Messaging.EventHubs.Producer.EventHubProducerClient"/> instance with the provided <paramref name="fullyQualifiedNamespace"/> and <paramref name="eventHubName"/>
             </summary>
            
        </member>
        <member name="M:Microsoft.Extensions.Azure.EventHubClientBuilderExtensions.AddEventHubProducerClient``2(``0,``1)">
             <summary>
               Registers a <see cref="T:Azure.Messaging.EventHubs.Producer.EventHubProducerClient"/> instance with connection options loaded from the provided <paramref name="configuration"/> instance.
             </summary>
            
        </member>
        <member name="M:Microsoft.Extensions.Azure.EventHubClientBuilderExtensions.AddEventHubConsumerClient``1(``0,System.String,System.String)">
             <summary>
               Registers a <see cref="T:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClientOptions"/> instance with the provided <paramref name="connectionString"/>
             </summary>
            
        </member>
        <member name="M:Microsoft.Extensions.Azure.EventHubClientBuilderExtensions.AddEventHubConsumerClient``1(``0,System.String,System.String,System.String)">
             <summary>
               Registers a <see cref="T:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient"/> instance with the provided <paramref name="connectionString"/> and <paramref name="eventHubName"/>
             </summary>
            
        </member>
        <member name="M:Microsoft.Extensions.Azure.EventHubClientBuilderExtensions.AddEventHubConsumerClientWithNamespace``1(``0,System.String,System.String,System.String)">
             <summary>
               Registers a <see cref="T:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient"/> instance with the provided <paramref name="fullyQualifiedNamespace"/> and <paramref name="eventHubName"/>
             </summary>
            
        </member>
        <member name="M:Microsoft.Extensions.Azure.EventHubClientBuilderExtensions.AddEventHubConsumerClient``2(``0,``1)">
             <summary>
               Registers a <see cref="T:Azure.Messaging.EventHubs.Consumer.EventHubConsumerClient"/> instance with connection options loaded from the provided <paramref name="configuration"/> instance.
             </summary>
            
        </member>
    </members>
</doc>
